!<< 9/12/2016 Xin starts to make modifications in the Tab code
    Any change made by Xin come with a comment that begins with << 
    so that they can be traced easily (by searching <<).
    The purpose of changes is to add second generation and aviation
    biofuel pathways, in order to estimate ILUC from their production.!
!<<4/28/2016 Xin make modifications for AFTF4 meeting experiments
!


!<
---Search over By-products to find changes---
    ==============================================================
    Global Trade Analysis Project
    The Biofuels Version of the GTAP Modeling Framework
    May, 2008
    GTAP-BIO: Model includes 
        - biofuels nest in GTAP-E framework
        - calibrated yield response in crops (search over "SSA yield")
        - by-products of biofuels based on Taheripour et al
        - Renewable fuel standard options: swap del_taxrpcbio = tpbio
        - explicit treatment of AEZs
        - nested CET land supplies
        - mapping to physical and harvested area (land use module at bottom)
        - biofuel targeting (module at bottom of code)
        - land cover change emissions 
        - additional substitution possibilities in livestock feeds
    ==============================================================
    For documentation see the following references:

Beckman, J. F. and T. W. Hertel (2009) "Why Previous Estimates of the Cost 
of Climate Mitigation are Likely Too Low". GTAP Working Paper No. 54, Center 
for Global Trade Analysis, Purdue University, West Lafayette, IN.  

Birur, D.K., T.W. Hertel and W.E. Tyner (2008) 
"Impact of Biofuel Production on World Agricultural Markets: A Computable
General Equilibrium Analysis". GTAP Working Paper No. 53, Center for Global
Trade Analysis. Purdue University, West Lafayette, IN.
https://www.gtap.agecon.purdue.edu/resources/download/4034.pdf

Burniaux, J. M. and T. Truong (2002) "GTAP-E: An Energy-Environmental 
Version of the GTAP Model", GTAP Technical Paper No. 16, Center for Global 
Trade Analysis.  Purdue University, West Lafayette, IN, USA.  
https://www.gtap.agecon.purdue.edu/resources/res_display.asp?RecordID=923 

Dimaranan, B. V., Editor (2006). "Global Trade, Assistance, and Production: 
The GTAP 6 Data Base," Center for Global Trade Analysis, Purdue University, 
West Lafayette, IN, USA.

Hertel, T.W. (1997)  "Global Trade Analysis, Modeling and Applications." 
Cambridge University Press, Cambridge. 1997. 
For the latest version of the model, see GTAP Model.

GTAP model (2007), maintained by the Center for Global Trade Analysis, 
Purdue University. Latest version is available for download at 
https://www.gtap.agecon.purdue.edu/models/current.asp

Lee, H.L., T. W. Hertel, S. Rose and M. Avetisyan (2009) 
"An Integrated Land Use Data Base for CGE Analysis of Climate Policy Options,"
Chapter 4 in: Economic Analysis of Land Use in Global Climate Change Policy, 
edited by, T.W. Hertel, S. Rose and R. Tol, UK: Routledge Press. 
In press, currently available at: 
https://www.gtap.agecon.purdue.edu/resources/res_display.asp?RecordID=2603

McDougall, R. and Golub, A. (2009). "GTAP-E Release 6: 
A Revised Energy-Environmental Version of the GTAP Model", 
GTAP Research Memorandum No. 15, Center for Global Trade Analysis.  
Purdue University, West Lafayette, IN, USA.
 
Monfreda, C., N. Ramankutty, and J.A. Foley (2008), "Farming the Planet 2: 
The Geographic Distribution of Crop Areas and Yields in the Year 2000." 
Global Biogeochemical Cycles, 22, GB1022, doi:10.1029/2007GB002947.

Ramankutty, N., A.T. Evan, C. Monfreda, and J.A. Foley (2008), 
Farming the Planet 1: The Geographic Distribution of Global Agricultural 
Lands in the Year 2000. Global Biogeochemical Cycles, 22, 
GB1003, doi:10.1029/2007GB002952.

Taheripour, F., D. K. Birur, T.W. Hertel, W.E. Tyner (2007) 
"Introducing liquid biofuels into the GTAP data base", Research Memorandum 11.
Center for Global Trade Analysis, Purdue University, West Lafayette, IN, USA.

Taheripour,  F., T.W. Hertel, W.E. Tyner, J.F. Beckman, D.K. Birur (2008) 
"Biofuels and their By-Products: Global Economic and Environmental 
Implications".  Paper Presented at the 11th  GTAP Conference, June 12-14 2008, 
Helsinki, Finland and at the 2008 American Agricultural Economics Association 
meeting in Orlando, Florida. 
https://www.gtap.agecon.purdue.edu/resources/download/3974.pdf

Standard model references follow:

    (a) Hertel, T.W. and M.E. Tsigas, "Structure of the Standard GTAP Model",
    Chapter 2 in T.W. Hertel (editor) "Global Trade Analysis: Modeling and
    Applications", Cambridge University Press, 1997.

    (b) McDougall, R.A., "A New Regional Household Demand System for GTAP",
    GTAP Technical Paper #20, Center for Global Trade Analysis, Purdue
    University

    (c) Hertel T.W., K. Itakura and R.A. McDougall, "GTAP.TAB: The Standard
    GTAP Model" (yet to be drafted), GTAP Technical Paper, Center for Global
    Trade Analysis, Purdue University,
    http://www.agecon.purdue.edu/gtap/techpapr/.  This technical paper
    documents all of the changes since the GTAP book TAB file.

    (d) Burniaux, J.-M. and Truong, T.P., "GTAP-E: An Energy-Environmental
    Version of the GTAP Model", GTAP Technical Paper #16, Center for Global
    Trade Analysis, Purdue University

    --------------------------------------
    HISTORY of the GTAPE-BIO modifications
    --------------------------------------
    
    Land cover change emissions are added in January 2009 and 
    additional substitution in livestock feed production are added
    in September 2009 by A. Golub.
    
    GTAPBIO-AEZ: AEZ elements September, 2007 revised February 2008 by T. Hertel
    Search over AEZ to find changes.

    BIO: Biofuels elements added in September, 2007 by T. Hertel

    ECONS
    Consumption addition, August 2007: includes energy subst in consumption
        - Reorganize private consumption module
        - Change pp and qp to ppt and qpt outside this module
        - Move CDE reads to this module
        - All CDE formulae and equations modified to run over CDE_COMM
        - Change VPA to VPAD in summary variables section

    Version 6-pre2 developed by A.A. Golub and R.A. McDougall, July 2007:
        - Reimplement emissions trading with trading blocs.
        - Calculate carbon dioxide emissions from the bottom up.
        - Reimplement carbon taxation, not converting rates from specific to
          ad valorem.
        - Reorganize production structure to group equations by nest, and
          equip with complete set of technological change variables.
        - Revise calculation of "CNTco2trd", contribution of net permit
          trading revenue to welfare change.

    Version 6-pre1 developed by R.A. McDougall, April 2006:
        -   resync with standard GTAP release 6.2
        -   format and module structure fixes

    Version 5 developed by JM Burniaux, September 2001
        - includes carbon emissions, emission taxes and trading.
        - with a value-added + energy bundle
        - plus substitution nesting with capital and a composite energy good
        - plus substitution between electricity and energy sources
        - plus substitution between coal and liquid fuels boundle
        - plus substitution between liquid fuels


    ----------------------------
    HISTORY of the standard file
    ----------------------------

    Version 6.2 fixes bugs and provides minor enhancements:
        - EV_ALT, CNTdpar fix
        - SX_IR fix
        - new treatment of export and import tariffs
        - original levels defined for power-of-tax variables
        - CNTalleffir range extended from TRAD_COMM to DEMD_COMM
        - INCOME formula, quantity index equations more AnalyzeGE-friendly

    Version 6.1 fixes bugs in 6.0:
        - Computation of tax receipts ratio is now separately done for total
          tax and indirect tax (equation DTAXRATIO and DINDTAXRATIO).
        - Computation of DTBALR, the ratio of the trade balance to regional
          income, has been corrected (equation DTBALRATIO).
        - Computation of EV_ALT, the summary variable for EV, has been
          corrected (equation EV_DECOMPOSITION).
    Also the notation has been changed for the tax-income ratio variables:
        TGCR -> del_taxrgc,    TPCR -> del_taxrpc,    TIUR -> del_taxriu,
        TFUR -> del_taxrfu,    TOUTR -> del_taxrout,  TEXPR -> del_taxrexp,
        TIMPR -> del_taxrimp,  TINCR -> del_taxrinc,  DTAXR -> del_ttaxr.

    Version 6.0 replaces version 5.0 used in the August 2000 short course, but
    never formally released.  The subsequent changes have been quite
    significant (primarily focused on final demand and welfare decomposition),
    so we decided to give it a new version number.  This also prevents
    confusion with the soon to be released version 5.0 GTAP data set.

    The differences with the previous publicly released version of GTAP.TAB,
    Version 4.1, dated November 1998, are numerous.  One goal of this version
    is to reorganize the TAB file which had not be redesigned since its
    inception.  In addition, there is a long list of substantive changes that
    have been made between Version 4.1 and 6.0.  These include:

        - provision for multiple margins sectors (to accommodate post version
          5 GTAP data)
        - introduction of the new theory of final demand following McDougall's
          GTAP Technical Paper #20
        - modification of the welfare decomposition following McDougall's
          Technical Paper #20
        - correction to the treatment of technical change, ao, in the presence
          of ESUBT > 0 (affects equations VADEMAND and INTDEMAND)
        - addition of import-augmenting "technical change" in the Armington
          nest: ams which can be used to lower the effective price of imported
          products
        - specification of Baldwin-type capital accmulation effects following
          Francois' Technical Paper #7
        - introduction of uniform consumption tax instrument, tp(r)


    ----------------------------------
    Overview of the GTAP.TAB Structure
    ----------------------------------
    Preliminaries:
        FILES
        SETS
        READ statements of Base Data
        Common VARIABLES
        Common COEFFICIENTS

    Modules:
        1.  Government Consumption
        2.  Private Consumption
        3.  Firms
        4.  Investment, Global Bank, and Savings
        5.  International Trade
        6.  International Transport Services
        7.  International Emissions Trade
        8.  Regional Household
        9.  Equilibrium Conditions

    Appendices:
        A.  Summary Indices
        B.  Equivalent Variation
        C.  Welfare Decomposition
        D.  Terms of Trade Decomposition
>!


!<
    -----
    FILES
    -----
>!

File
    GTAPSETS # file with set specification #;
File
    GTAPDATA # file containing all base data #;
File
    GTAPPARM # file containing behavioral parameters #;
File
    GTAPPARL # file containing land supply behavioral parameters #;
File
    GTAPPARY # file containing yield elasticity parameters #;

!<
    ----
    SETS
    ----

    Sets define relevant groupings of entities over which we will be
    performing operations in the model.  SUBSETS are defined in order to
    facilitate summation over only a portion of a given group, e.g., tradeable
    commodities.  Users with access to GEMPACK can increase the maximum set
    sizes to permit larger aggregations, provided you have sufficient RAM for
    implementing them The standard model (10x10 aggregation with decomposition
    code) is designed to run with 16 Mb of RAM.


    Aide-Memoire for Sets
    ---------------------

    |--------------------------------------|
    |         DEMD_COMM                    |
    |----------------------------------------------------|
    | ENDW_COMM |       TRAD_COMM          |  CGDS_COMM  |
    |----------------------------------------------------|
    |                     NSAV_COMM                      |
    |----------------------------------------------------|
                |                     PROD_COMM          |
                |----------------------------------------|

    For Endowments,
    |-------------------------|
    | ENDW_COMM               |
    |-------------------------|
    | ENDWM_COMM | ENDWS_COMM |
    |-------------------------|
>!

Coefficient
    VERNUM # version of GTAP data #;
Read
    VERNUM from file GTAPDATA header "DVER";
Update (change)
    VERNUM = 0.0; ! force it to be copied to update file !

Set REG # regions in the model #
    maximum size 10 read elements from file GTAPSETS header "H1";
Set TRAD_COMM # traded commodities #
    maximum size 15 read elements from file GTAPSETS header "H2";
Set MARG_COMM # margin commodities #
    maximum size 10 read elements from file GTAPSETS header "MARG";
Subset MARG_COMM is subset of TRAD_COMM;
Set NMRG_COMM # non-margin commodities # = TRAD_COMM - MARG_COMM;
Set CGDS_COMM # capital goods commodities #
    maximum size 1 read elements from file GTAPSETS header "H9";
Set ENDW_COMM # endowment commodities #
    maximum size 5 read elements from file GTAPSETS header "H6";
Set PROD_COMM # produced commodities # = TRAD_COMM union CGDS_COMM;
Set DEMD_COMM # demanded commodities # = ENDW_COMM union TRAD_COMM;
Set NSAV_COMM # non-savings commodities # = DEMD_COMM union CGDS_COMM;
Subset PROD_COMM is subset of NSAV_COMM;
Set ALL_INDS # All Industries including the CGDS commodity# 
    maximum size 10 read elements from file GTAPSETS header "IND";
Subset CGDS_COMM is subset of ALL_INDS;

Set US_REG # USA # (USA);
Subset US_REG is subset of REG;
Set NUS_REG # non USA regions # = REG - US_REG ;
!SOYF_Included soy and other oil in the following set!

!<<Add 6 new coproduction ind in ETBD_INDS. 
   The set and subset are defined as well.!

Set
    ETBD_INDS #Ethanol and biodiesel industries# (EthanolC,EthanolS,
    Vol_Soy,Vol_Palm,VOl_Rape,VOL_Oth,GRNATJ,GRNETJ,SUGATJ,SUGETJ,SUGSIP,CAMHRJ,CRNHRJ
);

Subset
    ETBD_INDS is subset of ALL_INDS;
Set
    NETBD_INDS #Non Ethanol industry# = All_INDS - ETBD_INDS;
Set 
    ETHA_COMM #commodities produces by ethanol industry # (Ethanol1,DDGS);
Set
    ETHAS_COMM #commodities produces by ethanol Sorg industry # (Ethanol3,DDGSS);

Set 
    BIOD_COMM #commodities produces by Vol_Soy industry # (Vol_Soy1,VOBPS);

Set 
    BIOC_COMM #commodities produces by Vol_Oth industry # (Vol_Oth1,VOBPO);

Set 
    BIOP_COMM #commodities produces by Vol_Oth industry # (Vol_Palm1,VOBPP);

Set
    BIOR_COMM #commodities produces by Vol_Rape industry # (Vol_Rape1,VOBPR);
!------------------------------------------------------------------------------!
!Jet coproducts!
Set
    GRNATJ_COMM # commodities produces by GRNATJ# (GRNATJ_J,GRNATJ_M);
    GRNETJ_COMM # commodities produces by GRNETJ# (GRNETJ_J,GRNETJ_M);     
    SUGATJ_COMM # commodities produces by SUGATJ# (SUGATJ_J,SUGATJ_P);
    SUGETJ_COMM # commodities produces by SUGETJ# (SUGETJ_J,SUGETJ_P);
    SUGSIP_COMM # commodities produces by SUGSIP# (SUGSIP_J,SUGSIP_P,SUGSIP_G);
    CAMHRJ_COMM # commodities produces by CAMHRJ# (CAMHRJ_J,CAMHRJ_M);
    CRNHRJ_COMM # commodities produces by CRNHRJ# (CRNHRJ_J,CRNHRJ_M);
 
Subset
    CAMHRJ_COMM is subset of NSAV_COMM;
    CRNHRJ_COMM is subset of NSAV_COMM;
    GRNATJ_COMM is subset of NSAV_COMM;
    SUGATJ_COMM is subset of NSAV_COMM;
    SUGSIP_COMM is subset of NSAV_COMM;
    GRNETJ_COMM is subset of NSAV_COMM;
    SUGETJ_COMM is subset of NSAV_COMM;
!------------------------------------------------------------------------------!
Subset
    NETBD_INDS is subset of NSAV_COMM;
    ETHA_COMM is subset of NSAV_COMM; 
    ETHAS_COMM is subset of NSAV_COMM;
    BIOD_COMM is subset of NSAV_COMM; 
    BIOC_COMM is subset of NSAV_COMM;
    BIOP_COMM is subset of NSAV_COMM;
    BIOR_COMM is subset of NSAV_COMM;

Set
    ETBD_COMM=ETHA_COMM+ETHAS_COMM+BIOD_COMM+BIOC_COMM+BIOP_COMM+BIOR_COMM+
GRNATJ_COMM+GRNETJ_COMM+SUGATJ_COMM+SUGETJ_COMM+SUGSIP_COMM+CAMHRJ_COMM+CRNHRJ_COMM;

Subset
    ETBD_COMM is subset of NSAV_COMM;
Set
    NETBD_COMM=NSAV_COMM-ETBD_COMM;
 
!Sets defined for policy analysis!
Set
    FOOD # food # read elements from file GTAPSETS header "FOOD";
Subset
    FOOD is subset of TRAD_COMM;
Set
    ANNEX1 # developed countries # 
    read elements from file GTAPSETS header "ANX1";
Subset
    ANNEX1 is subset of REG;
Set NONANNEX1  = REG-ANNEX1;
    
! End by-product modifications !

Coefficient
    SIZE_TRAD # size of TRAD_COMM set #;
Formula
    SIZE_TRAD = sum(i,TRAD_COMM, 1);
Coefficient
    SIZE_ENDW # size of ENDW_COMM set #;
Formula
    SIZE_ENDW = sum(i,ENDW_COMM, 1);
Coefficient
    SIZE_DEMD # size of DEMD_COMM set #;
Formula
    SIZE_DEMD = sum(i,DEMD_COMM, 1);
Assertion (initial)
    SIZE_DEMD = SIZE_TRAD + SIZE_ENDW;
Coefficient
    SIZE_CGDS # size of CGDS_COMM set #;
Formula
    SIZE_CGDS = sum(i,CGDS_COMM, 1);
Coefficient
    SIZE_PROD # size of PROD_COMM set #;
Formula
    SIZE_PROD = sum(i,PROD_COMM, 1);
Assertion (initial)
    SIZE_PROD = SIZE_TRAD + SIZE_CGDS;

!<
    The sluggish endowments are now defined dynamically, based on the variable
    SLUG.  SLUG is a binary variable that is zero for mobile endowments and
    one for sluggish endowments.  We must define and read in this variable
    before proceeding further.
>!
Coefficient (integer,parameter) (all,i,ENDW_COMM)
    SLUG(i) # sluggish primary factor endowments #;
Read
    SLUG from file GTAPPARM header "SLUG";

Set
    ENDWS_COMM
    # sluggish endowment commodities # = (all,i,ENDW_COMM: SLUG(i)>0);
Set
    ENDWM_COMM
    # mobile endowment commodities # = ENDW_COMM - ENDWS_COMM;
Set
    ENDWC_COMM # capital endowment commodity # (capital);
!<
    This single element set is defined for the sake of convenience.
>!
Subset
    ENDWC_COMM is subset of ENDW_COMM;

! FARZAD: Start CRP  - "crpxland" is in "Oth_Ind_Se" sector -DB!
!Set ADCC_CROP # Additional crop covers - only Tennessee & ORNL data#
    (pasturecrop, crpxland);!

Set NAT_RES (NatRes);
Subset NAT_RES is subset of ENDW_COMM;
Subset NAT_RES is subset of ENDWS_COMM;

Set PASTR_CROP (pasturecrop);
Subset PASTR_CROP is subset of TRAD_COMM;
Subset PASTR_CROP is subset of ALL_INDS;

Set CRP_LAND (Oth_Ind_Se);
!only when the "Oth_Ind_Se" is defined over AEZs only!
Subset CRP_LAND is subset of TRAD_COMM;
Subset CRP_LAND is subset of ALL_INDS;

Set ALLNPC_INDS # all non-pasturecrop industries # = ALL_INDS - PASTR_CROP;

! End CRP !

!<
    Energy Usage
    --------------------------------
>!
!SOYF_revised the following!
!<< set expended!
Set
    EGY_COMM # energy commodities # 
       (coal, oil, gas, oil_pcts, electricity,blender, ethanol1, ethanol3,
        ethanol2, biod_soy, biod_palm, biod_rape, biod_oth,GRNATJ_J,GRNETJ_J,
SUGATJ_J,SUGETJ_J,SUGATJ_P,SUGSIP_J,SUGSIP_P,SUGSIP_G,SOYHRJ,RAPHRJ,PLMHRJ, CAMHRJ_J,
CRNHRJ_J,MSCFTJ,SWGFTJ,POPFTJ,MSCATJ,SWGATJ);
Subset
    EGY_COMM is subset of TRAD_COMM;

!SOYF_revised the following!
!<< set expended!
Set
    BIOOIL_COMM # inputs into biooil energy subproduction #
    (oil_pcts, blender,ethanol1,ethanol2,ethanol3,biod_soy,biod_palm,biod_rape,
     biod_oth,GRNATJ_J,GRNETJ_J,SUGATJ_J,SUGETJ_J,SUGSIP_J,SOYHRJ,RAPHRJ,PLMHRJ, 
    CAMHRJ_J,CRNHRJ_J,MSCFTJ,SWGFTJ,POPFTJ,MSCATJ,SWGATJ);
Subset
    BIOOIL_COMM is subset of TRAD_COMM;
Set
    NBIOOIL_COMM # complement of inputs into biooil subproduction #
    = TRAD_COMM - BIOOIL_COMM ;

!------------------------------------------------------------------------------!
!Xin added electricity set!
Set
    ELEC_COMM # inputs into electricity subproduction #
    (electricity,SUGATJ_P,SUGETJ_P,SUGSIP_P,SUGSIP_G);
Subset
    ELEC_COMM is subset of TRAD_COMM;
!------------------------------------------------------------------------------!

!<
    ----------------------------
    READ Statements of Base Data
    ----------------------------

    We read in here almost all the base data, and define variables and
    coefficients associated with them.  A few data arrays used each in a
    single module are read in those modules: VKB, VTMFSD, and DPARSUM.

    The READ statements are divided into six sections:

    Saving
    Government Consumption
    Private Consumption
    Firms
    Global Bank
    International Trade and Transport
    Carbon Dioxide Emissions
    Carbon Taxation

    Since these are invariant for each solution of the model, they are termed
    coefficients.  Coefficients are assigned upper case to distinguish them
    from variables.  (This is purely cosmetic, as GEMPACK is not
    case-sensitive.) Variables in GEMPACK are assigned lower case labels to
    denote the fact that they are percentage changes.  In some cases, original
    levels values for selected variables are defined to permit the user to
    compare post-simulation levels values across several simulations.

    The updating command indicates how the new level of the coefficient will
    be computed based on the previous solution of the linearized equations.
    Note that the notation used in the update commands is a shorthand for
    total differentials of these coefficient values.  Thus, w * v indicates
    that we want to take the total differential of W * V, plug in the
    calculated values of w and v, and add this to the base level in order to
    obtain a revised value for this product.
>!


!<
    Saving
    ------
>!

Variable (all,r,REG)
    psave(r) # price of savings in region r #;
Variable (all,r,REG)
    qsave(r) # regional demand for NET savings #;
Coefficient (all,r,REG)
    SAVE(r) # expenditure on NET savings in region r valued at agent's prices #;
Update (all,r,REG)
    SAVE(r) = psave(r) * qsave(r);
Read
    SAVE from file GTAPDATA header "SAVE";


!<
    Government Consumption
    ----------------------
>!

Variable (all,i,TRAD_COMM)(all,s,REG)
    pgd(i,s) # price of domestic i in government consumption in s #;
Variable (orig_level=VDGM)(all,i,TRAD_COMM)(all,s,REG)
    qgd(i,s) # government hhld demand for domestic i in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VDGA(i,r) # government consumption expenditure on domestic i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VDGA(i,r) = pgd(i,r) * qgd(i,r);
Read
    VDGA from file GTAPDATA header "VDGA";

Variable (orig_level=1.0)(all,i,NSAV_COMM)(all,r,REG)
    pm(i,r) # market price of commodity i in region r #;
Variable (all,i,TRAD_COMM)(all,r,REG)
    tgd(i,r) # tax on domestic i purchased by government hhld in r #;

Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VDGM(i,r) # government consumption expenditure on domestic i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VDGM(i,r) = pm(i,r) * qgd(i,r);
Read
    VDGM from file GTAPDATA header "VDGM";

Variable (all,i,TRAD_COMM)(all,s,REG)
    pgm(i,s) # price of imports of i in government consumption in s #;
Variable (orig_level=VIGM)(all,i,TRAD_COMM)(all,s,REG)
    qgm(i,s) # government hhld demand for imports of i in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VIGA(i,r) # government consumption expenditure on imported i #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VIGA(i,r) = pgm(i,r) * qgm(i,r);
Read
    VIGA from file GTAPDATA header "VIGA";

Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
    pim(i,r) # market price of composite import i in region r #;
Variable (all,i,TRAD_COMM)(all,r,REG)
    tgm(i,r) # tax on imported i purchased by gov't hhld in r #;

Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VIGM(i,r) # gov't consumption expenditure on i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VIGM(i,r) = pim(i,r) * qgm(i,r);
Read
    VIGM from file GTAPDATA header "VIGM";


!<
    Private Consumption
    -------------------
>!

Variable (all,i,TRAD_COMM)(all,s,REG)
    ppd(i,s) # price of domestic i to private households in s #;
Variable (orig_level=VDPM)(all,i,TRAD_COMM)(all,s,REG)
    qpd(i,s) # private hhld demand for domestic i in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VDPA(i,r) # private consumption expenditure on domestic i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VDPA(i,r) = ppd(i,r) * qpd(i,r);
Read
    VDPA from file GTAPDATA header "VDPA";

Variable (all,i,TRAD_COMM)(all,r,REG)
    atpd(i,r) # power of tax on domestic i purchased by private hhld in r #;

Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VDPM(i,r) # private consumption expenditure on domestic i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VDPM(i,r) = pm(i,r) * qpd(i,r);
Read
    VDPM from file GTAPDATA header "VDPM";

Variable (all,i,TRAD_COMM)(all,s,REG)
    ppm(i,s) # price of imports of i by private households in s #;
Variable (orig_level=VIPM)(all,i,TRAD_COMM)(all,s,REG)
    qpm(i,s) # private hhld demand for imports of i in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VIPA(i,r) # private consumption expenditure on imported i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VIPA(i,r) = ppm(i,r) * qpm(i,r);
Read
    VIPA from file GTAPDATA header "VIPA";

Variable (all,i,TRAD_COMM)(all,r,REG)
    atpm(i,r) # power of tax on imported i purchased by private hhld in r #;

Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    VIPM(i,r) # private consumption expenditure on i in r #;
Update (all,i,TRAD_COMM)(all,r,REG)
    VIPM(i,r)= pim(i,r) * qpm(i,r);
Read
    VIPM from file GTAPDATA header "VIPM";


!<
    Firms
    -----
>!

Variable (all,i,NSAV_COMM)(all,r,REG)
    ps(i,r) # supply price of commodity i in region r #;
Variable (orig_level=VOM)(all,i,NSAV_COMM)(all,r,REG)
    qo(i,r) # industry output of commodity i in region r #;
Coefficient (ge 0)(all,i,ENDW_COMM)(all,r,REG)
    EVOA(i,r) # value of commodity i output in region r #;
Update (all,i,ENDW_COMM)(all,r,REG)
    EVOA(i,r) = ps(i,r) * qo(i,r);
Read
    EVOA from file GTAPDATA header "EVOA";

Variable (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    pfe(i,j,r) # firms' price for endowment commodity i in ind. j, region r #;
Variable (orig_level=VFM)(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    qfe(i,j,r)  # demand for endowment i for use in ind. j in region r #;
Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    EVFA(i,j,r) # producer expenditure on i by j in r at agent's prices #;
Update (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    EVFA(i,j,r) = pfe(i,j,r) * qfe(i,j,r);
Read
    EVFA from file GTAPDATA header "EVFA";

Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    pfd(i,j,s) # price index for domestic purchases of i by j in region s #;
Variable (orig_level=VDFM)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    qfd(i,j,s)  # domestic good i demanded by industry j in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VDFA(i,j,r) # purchases of domestic i for use by j in region r #;
Update (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VDFA(i,j,r) = pfd(i,j,r) * qfd(i,j,r);
Read
    VDFA from file GTAPDATA header "VDFA";

!Farzad: Buiofuels 2015 extended this to impose RFS throught firms!
Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfd0(i,j,r) # tax on domestic i purchased by j in r #;

Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfd(i,j,r) # tax on domestic i purchased by j in r including RFS tax#;

Variable (all,r,REG)
    tfbio(r) # tax on fuel used by firms to impliment RFSS throught firms#;

Equation TFDSHIFTNBIO
# no RFS tax on non biooil #
(all,i,NBIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfd(i,j,r) = tfd0(i,j,r);

Set BLENDER_INDS (Blender);

Subset
    BLENDER_INDS is subset of ALL_INDS;

Set NBL_INDS=ALL_INDS-BLENDER_INDS; 

Equation TFDSHIFTBIO
# no RFS tax on non blender industries#
(all,i,BIOOIL_COMM)(all,j,NBL_INDS)(all,r,REG)
    tfd(i,j,r) = tfd0(i,j,r);

Equation TFDSHIFTBIOB
# impost RFS tax on biooil#
(all,i,BIOOIL_COMM)(all,j,BLENDER_INDS)(all,r,REG)
    tfd(i,j,r) = tfd0(i,j,r) + tfbio(r);

!End Farzad 2015!


Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    pfm(i,j,s) # price index for imports of i by j in region s #;
Variable (orig_level=VIFM)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    qfm(i,j,s) # demand for i by industry j in region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VIFA(i,j,r) # purchases of imported i for use by j in region r #;
Update (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VIFA(i,j,r) = pfm(i,j,r) * qfm(i,j,r);
Read
    VIFA from file GTAPDATA header "VIFA";

!Farzad: Buiofuels 2015 extended this to impose RFS throught firms!
Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfm0(i,j,r) # tax on imported i purchased by j in r #;

Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfm(i,j,r) # tax on imported i purchased by j in r including RFS tax#;

Equation TFMSHIFTNBIO
# no RFS tax on non biooil #
(all,i,NBIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG)
    tfm(i,j,r) = tfm0(i,j,r);

Equation TFMSHIFTBIO
# no RFS tax on non blender industries#
(all,i,BIOOIL_COMM)(all,j,NBL_INDS)(all,r,REG)
    tfm(i,j,r) = tfm0(i,j,r);

Equation TFMSHIFTBIOB
# impost RFS tax on biooil#
(all,i,BIOOIL_COMM)(all,j,BLENDER_INDS)(all,r,REG)
    tfm(i,j,r) = tfm0(i,j,r) + tfbio(r);

!End Farzad 2015!


Variable (all,i,ENDWS_COMM)(all,j,ALL_INDS)(all,r,REG)
    pmes(i,j,r) # market price of sluggish endowment i used by j in r #;
Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFM(i,j,r) # producer expenditure on i by j in r valued at mkt prices #;
Update (all,i,ENDWM_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFM(i,j,r) = pm(i,r) * qfe(i,j,r);
Update (all,i,ENDWS_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFM(i,j,r) = pmes(i,j,r) * qfe(i,j,r);
Read
    VFM from file GTAPDATA header "VFM";

Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VIFM(i,j,r) # purchases of imports i for use by j in region r #;
Update (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VIFM(i,j,r) = pim(i,r) * qfm(i,j,r);
Read
    VIFM from file GTAPDATA header "VIFM";

Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VDFM(i,j,r) # purchases of domestic i for use by j in region r #;
Update (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VDFM(i,j,r) = pm(i,r) * qfd(i,j,r);
Read
    VDFM from file GTAPDATA header "VDFM";


!<
    Global Bank
    -----------
>!

Variable (all,r,REG)
    kb(r) # beginning-of-period capital stock in r #;
Variable (all,r,REG)
    pcgds(r) # price of investment goods = ps("cgds",r) #;
Coefficient (ge 0)(all,r,REG)
    VDEP(r) # value of capital depeciation in r (exogenous) #;
Update (all,r,REG)
    VDEP(r) = kb(r) * pcgds(r);
Read
    VDEP from file GTAPDATA header "VDEP";
!<
    Value of capital depreciation is used to compute the (exogenous)
    depreciation rate and therefore does not appear in update.
>!


!<
    International Trade and Transport
    ---------------------------------
>!

Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pms(i,r,s) # domestic price for good i supplied from r to region s #;
Variable (orig_level=VXMD)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    qxs(i,r,s) # export sales of commodity i from r to region s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIMS(i,r,s) # imports of i from r to s valued at domestic mkt prices #;
Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIMS(i,r,s) = pms(i,r,s) * qxs(i,r,s);
Read
    VIMS from file GTAPDATA header "VIMS";

Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pcif(i,r,s) # CIF world price of commodity i supplied from r to s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIWS(i,r,s) # imports of i from r to s valued CIF (tradeables only) #;
Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIWS(i,r,s) = pcif(i,r,s) * qxs(i,r,s);
Read
    VIWS from file GTAPDATA header "VIWS";

Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pfob(i,r,s) # FOB world price of commodity i supplied from r to s #;
Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VXWD(i,r,s) # exports of i from r to s valued FOB (tradeables only) #;
Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VXWD(i,r,s) = pfob(i,r,s) * qxs(i,r,s);
Read
    VXWD from file GTAPDATA header "VXWD";

Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VXMD(i,r,s)
    # exports of i from r to s valued at mkt prices (tradeables only) #;
Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VXMD(i,r,s) = pm(i,r) * qxs(i,r,s);
Read
    VXMD from file GTAPDATA header "VXMD";

Variable (orig_level=VST)(all,m,MARG_COMM)(all,r,REG)
    qst(m,r) # sales of m from r to international transport #;
Coefficient (ge 0)(all,m,MARG_COMM)(all,r,REG)
    VST(m,r)
    # exprts of m from r for int'l trnsport valued at mkt p (tradeables only) #;
Update (all,m,MARG_COMM)(all,r,REG)
    VST(m,r) = pm(m,r) * qst(m,r);
Read
    VST from file GTAPDATA header "VST";



!<
    ----------------
    Common VARIABLES
    ----------------

    Common variables are defined as variables which are used in more than one
    module.  For example, the variable y(r) is used in the Goverment
    Consumption, Private Consumption, Firms, Regional Household and
    Investment, Global Bank and Savings modules.  Appendices, e.g., Summary
    Indices, are not included in this definition.
>!

Variable (all,r,REG)
    y(r) # regional household income in region r #;
Variable (all,r,REG)
    p(r) # income deflator #;
Variable (all,r,REG)
    pop(r) # regional population #;
Variable (all,i,ENDWS_COMM)(all,j,ALL_INDS)(all,r,REG)
    qoes(i,j,r) # supply of sluggish endowment i used by j in r #;
Variable (all,i,ENDW_COMM)(all,r,REG)
    endwslack(i,r) # slack variable in endowment market clearing condition #;
!<
    This is exogenous, unless the user wishes to employ a partial equilibrium
    closure in which the price of one or more of the primary factors is fixed.
>!

Variable (all,r,REG)
    pgov(r) # price index for gov't hhld expenditure in region r #;
Variable (all,r,REG)
    yg(r)
    # regional government consumption expenditure in region r #;
Variable (all,r,REG)
    ug(r) # per capita utility from gov't expend. in region r #;
Variable (all,r,REG)
    ppriv(r)
    # price index for private consumption expenditure in region r #;
Variable (all,r,REG)
    uepriv(r)
    # elasticity of cost wrt utility from private consumption #;
Variable (all,r,REG)
    yp(r) # regional private consumption expenditure in region r #;
Variable (all,r,REG)
    up(r) # per capita utility from private expend. in region r #;
Variable (all,i,NSAV_COMM)(all,r,REG)
    to(i,r) # output (or income) tax in region r #;
!<
    Note:  It is important that the user NOT shock the tax on capital goods
    output, as this will cause an inconsistency in the update relationship for
    VOM(cgds).
>!
Variable (orig_level=VIM)(all,i,TRAD_COMM)(all,s,REG)
    qim(i,s) # aggregate imports of i in region s, market price weights #;
Variable
    globalcgds # global supply of capital goods for NET investment #;
Variable
    pcgdswld # world average price of capital goods (net investment weights) #;


!<
    The following variables could be dropped when converting to levels
    equation for income.  They are only needed for the linearized equation.
    The idea here is to look at the ratio of taxes to income in order to
    preserve homogeneity in prices.  (We could also look at changes in tax
    revenue, but then a uniform price increase would change this variable.)
    Obviously a simple percentage change variable doesn't work, since many
    taxes are initially zero.  The basic logic of this approach is as follows:

    Let R be the ratio of taxes to income: R = T/Y, then:
        dR = d(T/Y) = R(t - y)/100
    multiply through by Y to get:
        YdR = dT - Ty/100
    This ratio change is computed for each tax type and for total taxes.  Then
    the change in tax revenue itself may be computed as:
        dT = YdR + Ty/100
    in order to determine regional income.
>!

Variable (change) (all,r,REG)
    del_taxrgc(r) # change in ratio of government consumption tax to INCOME #;
Variable (change) (all,r,REG)
    del_taxrpc(r) # change in ratio of private consumption tax to INCOME #;
Variable (change) (all,r,REG)
    del_taxriu(r) # change in ratio of tax on intermediate usage to INCOME #;
Variable (change) (all,r,REG)
    del_taxrfu(r) # change in ratio of tax on primary factor usage to INCOME #;
Variable (change) (all,r,REG)
    del_taxrout(r) # change in ratio of output tax to INCOME #;
Variable (change) (all,r,REG)
    del_taxrexp(r) # change in ratio of export tax to INCOME #;
Variable (change) (all,r,REG)
    del_taxrimp(r) # change in ratio of import tax to INCOME #;
Variable (change) (all,r,REG)
    del_taxrinc(r) # change in ratio of income tax to INCOME #;


!<
    -------------------
    Common COEFFICIENTS
    -------------------

    Key Derivatives of the Base Data
    Regional Expenditure and Income
    Indirect Tax Receipts
    Miscellaneous Coefficients

    Common Coefficients are defined as coefficients which are used in more
    than one module.  For example, ESUBD(i) is used in the Goverment
    Household, Private Household, and Firms modules.
>!


!<
    Key Derivatives of the Base Data
    --------------------------------
>!

! By-products: In this section, need to recognize difference
  between commodities and industries and introduce VOMZ !

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    VDM(i,r) # domestic sales of i in r at mkt prices (tradeables only) #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    VDM(i,r) = VDPM(i,r) + VDGM(i,r) + sum(j,ALL_INDS, VDFM(i,j,r));
Coefficient (all,i,NSAV_COMM)(all,r,REG)
    VOM(i,r) # value of commodity i output in region r at market prices #;
Formula (all,i,ENDW_COMM)(all,r,REG)
    VOM(i,r) = sum(j,ALL_INDS, VFM(i,j,r));
Formula (all,m,MARG_COMM)(all,r,REG)
    VOM(m,r) = VDM(m,r) + sum(s,REG, VXMD(m,r,s)) + VST(m,r);
Formula (all,i,NMRG_COMM)(all,r,REG)
    VOM(i,r) = VDM(i,r) + sum(s,REG, VXMD(i,r,s));

!SOYF_revised the following select and VOMZ!
!<< added new pathways!
Coefficient (all,j,ETBD_INDS)(all,r,REG)
VOMZ(j,r) #T_Sales of ethanolC&vol_soy&vol_oth industries in r at market price#;
Coefficient (all,s,ETBD_INDS)(all,t,ETBD_INDS)
SELECT(s,t) # Switch index between industries of ethanolC and Veg_Oil#;
Formula (all,s,ETBD_INDS)(all,t,ETBD_INDS)
SELECT(s,t)=0.0;
Formula (all,s,ETBD_INDS)
SELECT(s,s)=1.0;
!------------------------------------------------------------------------------!
Formula (all,j,ETBD_INDS)(all,r,REG)
     VOMZ(j,r) = SELECT(j,"EthanolC")*sum(k,ETHA_COMM,VOM(k,r))+
                SELECT(j,"EthanolS")*sum(k,ETHAS_COMM,VOM(k,r))+
                SELECT(j,"Vol_Soy")*sum(k,BIOD_COMM,VOM(k,r))+
                SELECT(j,"Vol_Palm")*sum(k,BIOP_COMM,VOM(k,r))+
                SELECT(j,"Vol_Rape")*sum(k,BIOR_COMM,VOM(k,r))+
                SELECT(j,"Vol_Oth")*sum(k,BIOC_COMM,VOM(k,r))+
                SELECT(j,"GRNATJ")*sum(k,GRNATJ_COMM,VOM(k,r))+
                SELECT(j,"SUGATJ")*sum(k,SUGATJ_COMM,VOM(k,r))+
                SELECT(j,"GRNETJ")*sum(k,GRNETJ_COMM,VOM(k,r))+
                SELECT(j,"SUGETJ")*sum(k,SUGETJ_COMM,VOM(k,r))+
                SELECT(j,"SUGSIP")*sum(k,SUGSIP_COMM,VOM(k,r))+
                SELECT(j,"CAMHRJ")*sum(k,CAMHRJ_COMM,VOM(k,r))+
                SELECT(j,"CRNHRJ")*sum(k,CRNHRJ_COMM,VOM(k,r));

Coefficient (all,i,DEMD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFAD(i,j,r) # producer expend. on i by j in r valued at agent's prices #;
Formula (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFAD(i,j,r) = EVFA(i,j,r);
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    VFAD(i,j,s) = VDFA(i,j,s) + VIFA(i,j,s);

Coefficient (all,i,NSAV_COMM)(all,r,REG)
    VOA(i,r) # value of commodity i output in region r at agent's prices #;
Formula (all,i,ENDW_COMM)(all,r,REG)
    VOA(i,r) = EVOA(i,r);
Formula (all,j,NETBD_INDS)(all,r,REG)
    VOA(j,r)=sum(i,DEMD_COMM,VFAD(i,j,r));

! TH: Now need to read in outputs since these 
are multiproduct sectors and costs don't tell us product revenues. !

Coefficient (all,j,ETBD_INDS)(all,r,REG)
   VOAZ(j,r) #O_p of ethanol&Vol_soy&Vol_Oth&Vol_Palm ind at agent's prices#;
Formula (all,j,ETBD_INDS)(all,r,REG)
   VOAZ(j,r)=sum(i,DEMD_COMM,VFAD(i,j,r));

Variable (all,k,ETBD_COMM)(all,r,REG)
    updtrevshare(k,r) # percentage change in revenue shares for ETBD comms #;

Coefficient (all,k,ETHA_COMM)(all,r,REG)
    REVSHARE(k,r) # ethanol output shares at agent's prices#;
Update (all,k,ETHA_COMM)(all,r,REG)
    REVSHARE(k,r) = updtrevshare(k,r) ;
Read
    REVSHARE from file GTAPDATA header "REVE";
Formula (all,k,ETHA_COMM)(all,r,REG)
    VOA(k,r) = REVSHARE(k,r) * VOAZ("EthanolC",r);

Coefficient (all,k,ETHAS_COMM)(all,r,REG)
    REVSHARS(k,r) # Sorghum ethanol output shares at agent's prices#;
Update (all,k,ETHAS_COMM)(all,r,REG)
    REVSHARS(k,r) = updtrevshare(k,r) ;
Read
    REVSHARS from file GTAPDATA header "REVS";
Formula (all,k,ETHAS_COMM)(all,r,REG)
    VOA(k,r) = REVSHARS(k,r) * VOAZ("EthanolS",r);

Coefficient (all,k,BIOD_COMM)(all,r,REG)
    REVSHARB(k,r) # Vol_Soy output shares at agent's prices#;
Update (all,k,BIOD_COMM)(all,r,REG)
    REVSHARB(k,r) = updtrevshare(k,r) ;
Read
    REVSHARB from file GTAPDATA header "REVB";
Formula (all,k,BIOD_COMM)(all,r,REG)
    VOA(k,r) = REVSHARB(k,r) * VOAZ("Vol_Soy",r);

Coefficient (all,k,BIOR_COMM)(all,r,REG)
    REVSHARR(k,r) # Vol_Rape output shares at agent's prices#;
Update (all,k,BIOR_COMM)(all,r,REG)
    REVSHARR(k,r) = updtrevshare(k,r) ;
Read
    REVSHARR from file GTAPDATA header "REVR";
Formula (all,k,BIOR_COMM)(all,r,REG)
    VOA(k,r) = REVSHARR(k,r) * VOAZ("Vol_Rape",r);

!SOYF_added the floowing lines for vol_oth!
Coefficient (all,k,BIOC_COMM)(all,r,REG)
    REVSHARC(k,r) # Vol_Oth output shares at agent's prices#;
Update (all,k,BIOC_COMM)(all,r,REG)
    REVSHARC(k,r) = updtrevshare(k,r) ;
Read
    REVSHARC from file GTAPDATA header "REVC";
Formula (all,k,BIOC_COMM)(all,r,REG)
    VOA(k,r) = REVSHARC(k,r) * VOAZ("Vol_Oth",r);

Coefficient (all,k,BIOP_COMM)(all,r,REG)
    REVSHARP(k,r) # Vol_Palm output shares at agent's prices#;
Update (all,k,BIOP_COMM)(all,r,REG)
    REVSHARP(k,r) = updtrevshare(k,r) ;
Read
    REVSHARP from file GTAPDATA header "REVP";
Formula (all,k,BIOP_COMM)(all,r,REG)
    VOA(k,r) = REVSHARP(k,r) * VOAZ("Vol_Palm",r);
!------------------------------------------------------------------------------!
!<< begin compute revenue for new biofuels!

Coefficient (all,k,GRNATJ_COMM)(all,r,REG)
    REVSHARJ1(k,r) # GRNATJ output shares at agent's prices#;
Update (all,k,GRNATJ_COMM)(all,r,REG)
    REVSHARJ1(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ1 from file GTAPDATA header "REJ1";
Formula (all,k,GRNATJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ1(k,r) * VOAZ("GRNATJ",r);

Coefficient (all,k,GRNETJ_COMM)(all,r,REG)
    REVSHARJ5(k,r) # GRNETJ output shares at agent's prices#;
Update (all,k,GRNETJ_COMM)(all,r,REG)
    REVSHARJ5(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ5 from file GTAPDATA header "REJ5";
Formula (all,k,GRNETJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ5(k,r) * VOAZ("GRNETJ",r);

Coefficient (all,k,SUGATJ_COMM)(all,r,REG)
    REVSHARJ2(k,r) # SUGATJ output shares at agent's prices#;
Update (all,k,SUGATJ_COMM)(all,r,REG)
    REVSHARJ2(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ2 from file GTAPDATA header "REJ2";
Formula (all,k,SUGATJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ2(k,r) * VOAZ("SUGATJ",r);

Coefficient (all,k,SUGETJ_COMM)(all,r,REG)
    REVSHARJ7(k,r) # SUGETJ output shares at agent's prices#;
Update (all,k,SUGETJ_COMM)(all,r,REG)
    REVSHARJ7(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ7 from file GTAPDATA header "REJ7";
Formula (all,k,SUGETJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ7(k,r) * VOAZ("SUGETJ",r);

Coefficient (all,k,SUGSIP_COMM)(all,r,REG)
    REVSHARJ3(k,r) # SUGSIP output shares at agent's prices#;
Update (all,k,SUGSIP_COMM)(all,r,REG)
    REVSHARJ3(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ3 from file GTAPDATA header "REJ3";
Formula (all,k,SUGSIP_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ3(k,r) * VOAZ("SUGSIP",r);

Coefficient (all,k,CAMHRJ_COMM)(all,r,REG)
    REVSHARJ4(k,r) # MSCFTJ output shares at agent's prices#;
Update (all,k,CAMHRJ_COMM)(all,r,REG)
    REVSHARJ4(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ4 from file GTAPDATA header "REJ4";
Formula (all,k,CAMHRJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ4(k,r) * VOAZ("CAMHRJ",r);

Coefficient (all,k,CRNHRJ_COMM)(all,r,REG)
    REVSHARJ6(k,r) # POPFTJ output shares at agent's prices#;
Update (all,k,CRNHRJ_COMM)(all,r,REG)
    REVSHARJ6(k,r) = updtrevshare(k,r) ;
Read
    REVSHARJ6 from file GTAPDATA header "REJ6";
Formula (all,k,CRNHRJ_COMM)(all,r,REG)
    VOA(k,r) = REVSHARJ6(k,r) * VOAZ("CRNHRJ",r);
!------------------------------------------------------------------------------!


!<< end compute revenue for new biofuels!

Formula (all,h,CGDS_COMM)(all,r,REG)
    VOM(h,r) = VOA(h,r);

! End By-products !

!<
    Regional Expenditure and Income
    -------------------------------

    Regional income is allocated between private consumption expenditure,
    government consumption expenditure, and saving.


    Expenditure of Regional Household
    .................................

               Regional household(h.h.)
                Expenditure = Income
                         _/|\_
                       _/  |  \_
                     _/    |    \_
                   _/      |      \_
                 _/        |        \_
       Private h.h.        |        Government h.h.
       ( PRIVEXP )         |          ( GOVEXP )
          _/\_             |              _/\_
        _/    \_           |            _/    \_
       /        \          |           /        \
    Domestic  Imported   Savings    Domestic    Imported
     Goods     Goods     ( SAVE )    Goods       Goods
    ( VDPA )  ( VIPA )              ( VDGA )    ( VIGA )

    Note: The coefficients at the ends of branches are
          Base Data, e.g., VDPA, SAVE.
>!

! government consumption expenditure, GOVEXP !
Coefficient (all,i,TRAD_COMM)(all,r,REG)
    VGA(i,r) # government consn expenditure on i in r at agent's prices #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    VGA(i,s) = VDGA(i,s) + VIGA(i,s);
Coefficient (all,r,REG)
    GOVEXP(r) # government expenditure in region r #;
Formula (all,r,REG)
    GOVEXP(r) = sum(i,TRAD_COMM, VGA(i,r));

! ECONS: Change VPA to VPAD !

! private consumption expenditure, PRIVEXP !
Coefficient (all,i,TRAD_COMM)(all,r,REG)
    VPAD(i,r) # private hhld expenditure on i in r valued at agent's prices #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    VPAD(i,s) = VDPA(i,s) + VIPA(i,s);
Coefficient (all,r,REG)
    PRIVEXP(r) # private consumption expenditure in region r #;
Formula (all,r,REG)
    PRIVEXP(r) = sum(i,TRAD_COMM, VPAD(i,r));

! aggregate expenditure + saving = aggregate income !
Coefficient (all,r,REG)
    INCOME(r) # level of expenditure, which equals NET income in region r #;
Formula (all,r,REG)
    INCOME(r) = PRIVEXP(r) + GOVEXP(r) + SAVE(r);


!<
    Indirect Tax Receipts
    ---------------------
>!

Coefficient (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    DFTAX(i,j,r) # ordinary tax on intermediate usage of domestic product #;
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    DFTAX(i,j,r) = VDFA(i,j,r) - VDFM(i,j,r);

Coefficient (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    IFTAX(i,j,r) # ordinary tax on intermediate usage of imports #;
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    IFTAX(i,j,r) = VIFA(i,j,r) - VIFM(i,j,r);

!Farzad: Buifules 2015: separate fro Boioil and non biooil! 
Coefficient (all,r,REG)
 TIUNBIO(r) # ordinary tax on intermediate usage for non biooil products#;
Formula (all,r,REG)
 TIUNBIO(r) = sum(j,ALL_INDS, sum(i,NBIOOIL_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));

Coefficient (all,r,REG)
 TIUBIO(r) # ordinary tax on intermediate usage for biooil products#;
Formula (all,r,REG)
 TIUBIO(r) = sum(j,ALL_INDS, sum(i,BIOOIL_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));

Coefficient (all,r,REG)
    TIU(r) # ordinary tax on intermediate usage #;

Formula (all,r,REG)
  TIU(r) = TIUNBIO(r) + TIUBIO(r);

!Formula (all,r,REG)
    TIU(r) = sum(j,ALL_INDS, sum(i,TRAD_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));!

!<
    Taxes on Private Consumption
    - - - - - - - - - - - - - -
>!

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    DPTAX(i,r) # ordinary tax on private consumption of domestic product #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    DPTAX(i,r) = VDPA(i,r) - VDPM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    IPTAX(i,r) # ordinary tax on private consumption of imports #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    IPTAX(i,r) = VIPA(i,r) - VIPM(i,r);

! BIOFUELS: Separate this out for biofuels !

Coefficient (all,r,REG)
    TPCNBIO(r) # ordinary tax on private consumption of non-biooil products #;
Formula (all,r,REG)
    TPCNBIO(r) = sum(i,NBIOOIL_COMM, DPTAX(i,r) + IPTAX(i,r));

Coefficient (all,r,REG)
    TPCBIO(r) # ordinary tax on private consumption #;
Formula (all,r,REG)
    TPCBIO(r) = sum(i,BIOOIL_COMM, DPTAX(i,r) + IPTAX(i,r));

Coefficient (all,r,REG)
    TPC(r) # ordinary tax on private consumption #;
Formula (all,r,REG)
    TPC(r) = TPCNBIO(r) + TPCBIO(r);

!<
    Taxes on Government Consumption
    - - - - - - - - - - - - - - - -
>!

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    DGTAX(i,r) # ordinary tax on government consumption of domestic product #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    DGTAX(i,r) = VDGA(i,r) - VDGM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    IGTAX(i,r) # ordinary tax on government consumption of imports #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    IGTAX(i,r) = VIGA(i,r) - VIGM(i,r);

Coefficient (all,r,REG)
    TGC(r) # ordinary tax on government consumption #;
Formula (all,r,REG)
    TGC(r) = sum(i,TRAD_COMM, DGTAX(i,r) + IGTAX(i,r));


!<
    Other Taxes
    - - - - - -
>!

Coefficient (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    ETAX(i,j,r) # tax on use of endowment good i by industry j in region r #;
Formula (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    ETAX(i,j,r) = VFAD(i,j,r) - VFM(i,j,r);
Coefficient (all,r,REG)
    TFU(r) # firms' tax payments on primary factor usage in r #;
Formula (all,r,REG)
    TFU(r) = sum(i,ENDW_COMM, sum(j,ALL_INDS, ETAX(i,j,r)));

Coefficient (all,i,NSAV_COMM)(all,r,REG)
    PTAX(i,r) # output tax on good i in region r #;
Formula (all,i,NSAV_COMM)(all,r,REG)
    PTAX(i,r) = VOM(i,r) - VOA(i,r);


! Farzad 2015: BIOFUELS: Separate this out for biofuels !
 
Coefficient (all,r,REG)
    TOUTNBIO(r) # ordinary output tax of non-biooil products #;
Formula (all,r,REG)
    TOUTNBIO(r) = sum(i,NBIOOIL_COMM, PTAX(i,r));
 
Coefficient (all,r,REG)
    TOUTBIO(r) # ordinary output tax on biooil products #;
Formula (all,r,REG)
    TOUTBIO(r) = sum(i,BIOOIL_COMM, PTAX(i,r));
 
Coefficient (all,r,REG)
    TOUT(r) # production tax payments in r #;

Formula (all,r,REG)

    TOUT(r) = TOUTNBIO(r) + TOUTBIO(r);

!Farzad 2015: Notice that TOUT was originaly defined over PROD_COMM
 in the following original formulat. But in the obove formual I defined it  
over TRAD_COMM which is the sum of biofuels and non biofules   

Formula (all,r,REG)
    TOUT(r) = sum(i,PROD_COMM, PTAX(i,r));!


! Farzad 2015: BIOFUELS end !

Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    XTAXD(i,r,s) # tax on exports of good i from source r to destination s #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    XTAXD(i,r,s) = VXWD(i,r,s) - VXMD(i,r,s);
Coefficient (all,r,REG)
    TEX(r) # export tax payments in r #;
Formula (all,r,REG)
    TEX(r) = sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s)));

Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    MTAX(i,r,s) # tax on imports of good i from source r in destination s #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    MTAX(i,r,s) = VIMS(i,r,s) - VIWS(i,r,s);
Coefficient (all,r,REG)
    TIM(r) # import tax payments in r #;
Formula (all,r,REG)
    TIM(r) = sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r)));


!<
    Miscellaneous Coefficients
    --------------------------
>!

! domestic/imported substitution elasticity !
Coefficient (parameter)(all,i,TRAD_COMM)
    ESUBD(i)
    # region-generic el. of sub. domestic/imported for all agents #;
Read
    ESUBD from file GTAPPARM header "ESBD";

! net global investment expenditure !
Coefficient (all,r,REG)
    REGINV(r) # regional GROSS investment in r (value of "cgds" output) #;
Formula (all,r,REG)
    REGINV(r) = sum(k,CGDS_COMM, VOA(k,r));
Coefficient (all,r,REG)
    NETINV(r) # regional NET investment in region r #;
Formula (all,r,REG)
    NETINV(r) = sum(k,CGDS_COMM, VOA(k,r)) - VDEP(r);
Coefficient
    GLOBINV # global expenditures on net investment #;
Formula
    GLOBINV = sum(r,REG, NETINV(r));



!<
    =======
    Modules
    =======

    1. Government Consumption
    2. Private Consumption
    3. Firms
    4. Investment, Global Bank, and Savings
    5. International Trade
    6. International Transport Services
    7. International Emissions Trade
    8. Regional Household
    9. Equilibrium Conditions
>!


!<
    -------------------------
    1. Government Consumption
    -------------------------

    1-0. Module-Specific Variables
    1-1. Demands for Composite Goods
    1-2. Composite Tradeables
>!


!<
    1-0. Module-Specific Variables
    ------------------------------

    only used in this Government Consumption module
>!

Variable (all,i,TRAD_COMM)(all,r,REG)
    pg(i,r) # government consumption price for commodity i in region r #;
Variable (all,i,TRAD_COMM)(all,r,REG)
    qg(i,r) # government hhld demand for commodity i in region r #;


!<
    1-1. Demands for Composite Goods
    --------------------------------
>!

Equation GPRICEINDEX
# definition of price index for aggregate gov't purchases (HT 40) #
(all,r,REG)
    pgov(r) = sum(i,TRAD_COMM, [VGA(i,r) / GOVEXP(r)] * pg(i,r));

Equation GOVDMNDS
# government consumption demands for composite commodities (HT 41) #
(all,i,TRAD_COMM)(all,r,REG)
    qg(i,r) - pop(r) = ug(r) - [pg(i,r) - pgov(r)];

Equation GOVU
# utility from government consumption in r #
(all,r,REG)
    yg(r) - pop(r) = pgov(r) + ug(r);


!<
    1-2. Composite Tradeables
    -------------------------
>!


Equation GHHDPRICE
# taxation of government consumption of domestic product #
(all,i,TRAD_COMM)(all,r,REG)
    pgd(i,r)= pm(i,r) + tgd(i,r);


Equation GHHIPRICES
# taxation of government consumption of imports #
(all,i,TRAD_COMM)(all,r,REG)
    pgm(i,r) = pim(i,r) + tgm(i,r);

!FRAZAD:CRP: - nonzero divide added !
Zerodivide (nonzero_by_zero) default 0;
Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,s,REG)
    GMSHR(i,s) # share of imports for gov't hhld at agent's prices #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    GMSHR(i,s) = VIGA(i,s) / VGA(i,s);

Zerodivide (zero_by_zero) off;
Zerodivide (nonzero_by_zero) off;

Equation GCOMPRICE
# government consumption price for composite commodities (HT 42) #
(all,i,TRAD_COMM)(all,s,REG)
    pg(i,s) =  GMSHR(i,s) * pgm(i,s) + [1 - GMSHR(i,s)] * pgd(i,s);

Equation GHHLDAGRIMP
# government consumption demand for aggregate imports (HT 43) #
(all,i,TRAD_COMM)(all,s,REG)
    qgm(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgm(i,s)];

Equation GHHLDDOM
# government consumption demand for domestic goods (HT 44) #
(all,i,TRAD_COMM)(all,s,REG)
    qgd(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgd(i,s)];

Equation TGCRATIO
# change in ratio of government consumption tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrgc(r) + TGC(r) * y(r)
        = sum(i,TRAD_COMM,
            VDGA(i,r) * tgd(i,r) + DGTAX(i,r) * [pm(i,r) + qgd(i,r)])
        + sum(i,TRAD_COMM,
            VIGA(i,r) * tgm(i,r) + IGTAX(i,r) * [pim(i,r) + qgm(i,r)]);

! ECONS: The private hhld module has been rearranged
     to accommodate the GTAP-E approach to nesting and to
     add an energy composite!

!<
    -----------------------------
    2. Private Consumption Module
    -----------------------------

    2-0. Module-Specific Variables
    2-1. Composite Tradeables
    2-2. Notational Links
    2-3. Composite Energy Nest
    2-4. Utility from Private Consumption
    2-5. Allen Partials, Price and Income Elasticities, Composite Demand
>!


!<
    2-0. Module-Specific Variables
    ------------------------------

    only used in this Private Consumption module
>!

Set
    SUBCDE_COMM # subconsumption aggregates entering the CDE # (henergy, hvol);
Set
    SUBLOW_COMM # lower level subconsumption aggregates # (hbiooil,electricity0);
Set
    SUBC_COMM # subconsumption aggregates # = SUBCDE_COMM union SUBLOW_COMM;
Set
    HHLD_COMM # commodities demanded by hhlds # = TRAD_COMM union SUBC_COMM;
Set
    NEGY_COMM # non-energy commodities  # = TRAD_COMM - EGY_COMM;
Set
    CDE_COMM # top level private consumption #
    maximum size 10 read elements from file GTAPSETS header "CDE";
!<< The "CDE" in GTAPSETS is revised accordingly"!

Subset CDE_COMM is subset of HHLD_COMM ;

Coefficient (all,i,HHLD_COMM)(all,r,REG)
    VPA(i,r) # consumer expend. on i by j in r valued at agent's prices #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    VPA(i,r) = VPAD(i,r);

! Note that VPA(henergy,r) will be assigned below. !

Coefficient (all,i,SUBC_COMM)(all,r,REG)
    VPAS(i,r) # hhld expend. on i in r valued at agent's prices #;

Variable (all,i,TRAD_COMM)(all,r,REG)
    ppt(i,r) # private consumption price for commodity i in region r #;
Variable (all,i,TRAD_COMM)(all,r,REG)
    qpt(i,r) # private hhld demand for commodity i in region r #;

! The following price and quantity variables are used in the CDE module !

Variable (all,i,HHLD_COMM)(all,r,REG)
    pp(i,r) # private consumption price for commodity i in region r #;
Variable (all,i,HHLD_COMM)(all,r,REG)
    qp(i,r) # private hhld demand for commodity i in region r #;

!<
    2-1. Composite Tradeables
    -------------------------
>!

Variable (all,r,REG)
    tp(r) # comm.-, source-gen. shift in tax on private cons. #;
!<
    The variable tp(r) can be swapped with del_ttaxr(r) in order to generate a
    tax replacement scenario, whereby taxes remain a constant share of
    national income.
>!
Variable (all,i,TRAD_COMM)(all,r,REG)
    consslack(i,r) # variable introduced to fix consumption at the base level #;

Variable (all,i,TRAD_COMM)(all,r,REG)
    tpd(i,r) # comm.-, source-spec. shift in tax on private cons. of dom. #;

! BIOFUELS: need to introduce an offsetting tax for renewable fuel mandates !

Variable (all,r,REG)
    tpbio(r) # comm.-, source-gen. tax to implement RFSS #;
Equation TPDSHIFTNBIO
# permits uniform consumption tax change #
(all,i,NBIOOIL_COMM)(all,r,REG)
    atpd(i,r) = tpd(i,r) + tp(r) + consslack(i,r);

Equation TPDSHIFTBIO
# permits uniform consumption tax change #
(all,i,BIOOIL_COMM)(all,r,REG)
    atpd(i,r) = tpd(i,r) + tp(r) + tpbio(r) + consslack(i,r);

! And do the same for tpm below. !


Equation PHHDPRICE
# taxation of private consumption of domestic product #
(all,i,TRAD_COMM)(all,r,REG)
    ppd(i,r) = pm(i,r) + atpd(i,r);

! BIOFUELS: need to introduce an offsetting tax for renewable fuel mandates !

Variable (all,i,TRAD_COMM)(all,r,REG)
    tpm(i,r) # comm.-, source-spec. shift in tax on private cons. of imp. #;
Equation TPMSHIFTNBIO
# permits uniform consumption tax change #
(all,i,NBIOOIL_COMM)(all,r,REG)
    atpm(i,r) = tpm(i,r) + tp(r) + consslack(i,r);

Equation TPMSHIFTBIO
# permits uniform consumption tax change #
(all,i,BIOOIL_COMM)(all,r,REG)
    atpm(i,r) = tpm(i,r) + tp(r) + tpbio(r) + consslack(i,r);

! BIOFUELS: end of modifications !


Equation PHHIPRICES
# taxation of private consumption of imports #
(all,i,TRAD_COMM)(all,r,REG)
    ppm(i,r) = pim(i,r) + atpm(i,r);

! BIOFUELS: Separate out the biofuels component of this to permit  
    implementation of a RFS !

Variable (change) (all,r,REG)
    del_taxrpcnbio(r) # change in ratio cons tax on nonbiooil to INCOME #;
Variable (change) (all,r,REG)
    del_taxrpcbio(r) # change in ratio cons tax on biooil to INCOME #;

Equation TPCRATIONBIO
# change in ratio of private consumption tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrpcnbio(r) + TPCNBIO(r) * y(r)
        = sum(i,NBIOOIL_COMM,
            VDPA(i,r) * atpd(i,r) + DPTAX(i,r) * [pm(i,r) + qpd(i,r)])
        + sum(i,NBIOOIL_COMM,
            VIPA(i,r) * atpm(i,r) + IPTAX(i,r) * [pim(i,r) + qpm(i,r)]);

Equation TPCRATIOBIO
# change in ratio of private consumption tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrpcbio(r) + TPCBIO(r) * y(r)
        = sum(i,BIOOIL_COMM,
            VDPA(i,r) * atpd(i,r) + DPTAX(i,r) * [pm(i,r) + qpd(i,r)])
        + sum(i,BIOOIL_COMM,
            VIPA(i,r) * atpm(i,r) + IPTAX(i,r) * [pim(i,r) + qpm(i,r)]);

Equation TPCRATIO
# change in ratio of private consumption tax payments to regional income #
(all,r,REG)
    del_taxrpc(r) 
        = del_taxrpcnbio(r) + del_taxrpcbio(r);

! BIOFUELS end !

Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,s,REG)
    PMSHR(i,s) # share of imports for priv hhld at agent's prices #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    PMSHR(i,s) = VIPA(i,s) / VPA(i,s);
Zerodivide (zero_by_zero) off;

Equation PCOMPRICE
# private consumption price for composite commodities (HT 47) #
(all,i,TRAD_COMM)(all,s,REG)
    ppt(i,s) = PMSHR(i,s) * ppm(i,s) + [1 - PMSHR(i,s)] * ppd(i,s);

Equation PHHLDDOM
# private consumption demand for domestic goods (HT 48) #
(all,i,TRAD_COMM)(all,s,REG)
    qpd(i,s) = qpt(i,s) + ESUBD(i) * [ppt(i,s) - ppd(i,s)];

Equation PHHLDAGRIMP
# private consumption demand for aggregate imports (HT 49) #
(all,i,TRAD_COMM)(all,s,REG)
    qpm(i,s) = qpt(i,s) + ESUBD(i) * [ppt(i,s) - ppm(i,s)];


!<
    2-2. Notational Links
    ---------------------
>!

Formula (all,i,TRAD_COMM)(all,r,REG)
    VPA(i,r) = VPAD(i,r);

! Equations linking qph with qp and pph with pp for non-energy commodities
    follow. The energy commodities are demanded at the qp level. !

Equation E_QPT
# linking equation for quantities #
(all,i,TRAD_COMM)(all,r,REG)
    qpt(i,r) = qp(i,r) ;

Equation E_PPT
# linking variable for prices #
(all,i,TRAD_COMM)(all,r,REG)
    ppt(i,r) = pp(i,r) ;

!<
    2-3.1 Biofuels Nest
    ------------------
>!

!Farzad 2015: First add a variables to account for energy content of ethanol!
!<<The nest for HHD was not changed, since the blender was added!
 Variable (all,i,BIOOIL_COMM)(all,r,REG)
    ahenergy(i,r) # factor to adjust energy content of biofuels in region r#;

Formula (all,r,REG)
    VPAS("hbiooil",r) = sum(i,BIOOIL_COMM, VPAD(i,r));
Formula (all,r,REG)
    VPA("hbiooil",r) = VPAS("hbiooil",r);

Coefficient
    SIZE_HBIOIL # size of BIOOIL_COMM set #;
Formula
    SIZE_HBIOIL = sum(i,BIOOIL_COMM, 1);

Coefficient (all,i,BIOOIL_COMM)(all,r,REG)
    CSHHBIOIL(i,r)
    # share of i in cost to j of henergy subproduct #;
Formula (all,i,BIOOIL_COMM)(all,r,REG: VPAS("hbiooil",r) = 0)
    CSHHBIOIL(i,r) = 1.0 / SIZE_HBIOIL;
Formula (all,i,BIOOIL_COMM)(all,r,REG: VPAS("hbiooil",r) > 0)
    CSHHBIOIL(i,r) = VPA(i,r) / VPAS("hbiooil",r);

Equation HBIOILPRICE # price of henergy #
(all,r,REG)
    pp("hbiooil",r)
        = sum(k,BIOOIL_COMM, CSHHBIOIL(k,r)* [pp(k,r)-ahenergy(k,r)]);

Coefficient (parameter) (all,r,REG)
    ELHBIOIL(r)
    # elasticity of substitution in biooil subconsumption #;
Read
    ELHBIOIL from file GTAPPARM header "ELHB";

Equation HBIOILDEMAND
# demand for inputs into biooil subconsumption #
(all,i,BIOOIL_COMM)(all,r,REG)
    qp(i,r) = -ahenergy(i,r)+qp("hbiooil",r)
        - ELHBIOIL(r) * [pp(i,r)-ahenergy(i,r) - pp("hbiooil",r)];



!------------------------------------------------------------------------------!
!
   2-3.2 Biofuels Nest
    ------------------!

!Xin added electricity0 nest here!

Formula (all,r,REG)
    VPAS("electricity0",r) = sum(i,ELEC_COMM, VPAD(i,r));
Formula (all,r,REG)
    VPA("electricity0",r) = VPAS("electricity0",r);

Coefficient
    SIZE_HELEC # size of ELEC_COMM set #;
Formula
    SIZE_HELEC = sum(i,ELEC_COMM, 1);

Coefficient (all,i,ELEC_COMM)(all,r,REG)
    CSHHELEC(i,r)
    # share of i in cost to j of elec subproduct #;
Formula (all,i,ELEC_COMM)(all,r,REG: VPAS("electricity0",r) = 0)
    CSHHELEC(i,r) = 1.0 / SIZE_HELEC;
Formula (all,i,ELEC_COMM)(all,r,REG: VPAS("electricity0",r) > 0)
    CSHHELEC(i,r) = VPA(i,r) / VPAS("electricity0",r);

Equation HELECPRICE # price of henergy #
(all,r,REG)
    pp("electricity0",r)= sum(k,ELEC_COMM, CSHHELEC(k,r)* pp(k,r));

Coefficient (parameter) (all,r,REG)
    ELELEC(r)
    # elasticity of substitution in biooil subconsumption #;
Read
    ELELEC from file GTAPPARM header "ELEC";

Equation HELECDEMAND
# demand for inputs into biooil subconsumption #
(all,i,ELEC_COMM)(all,r,REG)
    qp(i,r) = qp("electricity0",r)
        - ELELEC(r) * [pp(i,r)- pp("electricity0",r)];

!------------------------------------------------------------------------------!

!<
    2-4. Energy Nest
    ----------------
>!

! biofuels: replace oil-pcts, ethanol and biodiesel with biooil composite !
!------------------------------------------------------------------------------!
!electricity is renamed to electricity0 to aggregate all electricities! 

Set
    HEGY_COMM # inputs into aggregate hhld energy consumption #
   (coal, oil, gas, electricity0, hbiooil);

Subset
    HEGY_COMM is subset of HHLD_COMM;

Formula (all,r,REG)
    VPAS("henergy",r) = sum(i,HEGY_COMM, VPA(i,r));
Formula (all,r,REG)
    VPA("henergy",r) = VPAS("henergy",r);

Coefficient
    SIZE_HEGY # size of HEGY_COMM set #;
Formula
    SIZE_HEGY = sum(i,HEGY_COMM, 1);

Coefficient (all,i,HEGY_COMM)(all,r,REG)
    CSHEGY(i,r)
    # share of i in cost to j of henergy subproduct #;
Formula (all,i,HEGY_COMM)(all,r,REG: VPAS("henergy",r) = 0)
    CSHEGY(i,r) = 1.0 / SIZE_HEGY;
Formula (all,i,HEGY_COMM)(all,r,REG: VPAS("henergy",r) > 0)
    CSHEGY(i,r) = VPA(i,r) / VPAS("henergy",r);

Equation HEGYPRICE # price of henergy #
(all,r,REG)
    pp("henergy",r)
        = sum(k,HEGY_COMM, CSHEGY(k,r)* pp(k,r));

Coefficient (parameter) (all,r,REG)
    ELEGY(r)
    # elasticity of substitution in henergy subconsumption #;
Read
    ELEGY from file GTAPPARM header "ELEG";

Equation HEGYDEMAND
# demand for inputs into henergy subconsumption #
(all,i,HEGY_COMM)(all,r,REG)
    qp(i,r) = qp("henergy",r)
        - ELEGY(r) * [pp(i,r) - pp("henergy",r)];

!<
    2-5. Vegetable Oils Nest
    ------------------------

>!

Set
    HVOL_COMM # inputs into aggregate hhld veg. oils consumption #
   (Vol_Soy1, Vol_Palm1, Vol_Rape1, Vol_Oth1);

Subset
    HVOL_COMM is subset of HHLD_COMM;

Formula (all,r,REG)
    VPAS("hvol",r) = sum(i,HVOL_COMM, VPA(i,r));
Formula (all,r,REG)
    VPA("hvol",r) = VPAS("hvol",r);

Coefficient
    SIZE_HVOL # size of HVOL_COMM set #;
Formula
    SIZE_HVOL = sum(i,HVOL_COMM, 1);

Coefficient (all,i,HVOL_COMM)(all,r,REG)
    CSHHVOL(i,r)
    # share of i in cost to j of veg. oils subproduct #;
Formula (all,i,HVOL_COMM)(all,r,REG: VPAS("hvol",r) = 0)
    CSHHVOL(i,r) = 1.0 / SIZE_HVOL;
Formula (all,i,HVOL_COMM)(all,r,REG: VPAS("hvol",r) > 0)
    CSHHVOL(i,r) = VPA(i,r) / VPAS("hvol",r);

Equation HVOLPRICE # price of veg. oils #
(all,r,REG)
    pp("hvol",r)
        = sum(k,HVOL_COMM, CSHHVOL(k,r)* pp(k,r));

Coefficient (parameter) (all,r,REG)
    ELHVOL(r)
    # elasticity of substitution in veg. oils subconsumption #;
Read
    ELHVOL from file GTAPPARM header "ELHL";

Equation HVOLDEMAND
# demand for inputs into veg. oils subconsumption #
(all,i,HVOL_COMM)(all,r,REG)
    qp(i,r) = qp("hvol",r)
        - ELHVOL(r) * [pp(i,r) - pp("hvol",r)];


!<
    2-6 Utility from Private Consumption
    -------------------------------------
>!

! elasticity of cost wrt utility from private consumption !

Coefficient (all,i,CDE_COMM)(all,r,REG)
    CONSHR(i,r) # share of private hhld consumption devoted to good i in r #;
Formula (all,i,CDE_COMM)(all,r,REG)
    CONSHR(i,r) = VPA(i,r) / sum(k,CDE_COMM, VPA(k,r));
Coefficient (parameter)(all,i,CDE_COMM)(all,r,REG)
    INCPAR(i,r)
    # expansion parameter in the CDE minimum expenditure function #;
Read
    INCPAR from file GTAPPARM header "INCP";
Coefficient (all,r,REG)
    UELASPRIV(r)
    # elasticity of cost wrt utility from private consumption #;
Formula (all,r,REG)
    UELASPRIV(r) = sum(i,CDE_COMM, CONSHR(i,r) * INCPAR(i,r));

Equation PHHLDINDEX
# price index for private consumption expenditure #
(all,r,REG)
    ppriv(r) = sum(i,CDE_COMM, CONSHR(i,r) * pp(i,r));

Equation PRIVATEU
# computation of utility from private consumption in r (HT 45) #
(all,r,REG)
    yp(r) - pop(r) = ppriv(r) + UELASPRIV(r) * up(r);
!<
    This equation determines private consumption utility for a representative
    household in region r, based on the per capita private expenditure
    function.  (HT 45)
>!

Coefficient (all,i,CDE_COMM)(all,r,REG)
    XWCONSHR(i,r)
    # expansion-parameter-weighted consumption share #;
Formula (all,i,CDE_COMM)(all,r,REG)
    XWCONSHR(i,r) = CONSHR(i,r) * INCPAR(i,r) / UELASPRIV(r);

Equation UTILELASPRIV
# elasticity of expenditure wrt utility from private consumption #
(all,r,REG)
    uepriv(r)
        = sum(i,CDE_COMM, XWCONSHR(i,r) * [pp(i,r) + qp(i,r) - yp(r)]);


!<
    2-7. Allen Partials, Price and Income Elasticities, Composite Demand
    --------------------------------------------------------------------
>!

Coefficient (parameter)(all,i,CDE_COMM)(all,r,REG)
    SUBPAR(i,r)
    # substitution parameter in CDE minimum expenditure function #;
Read
    SUBPAR from file GTAPPARM header "SUBP";

!<
    (HT F1 - F3)
>!
Coefficient (all,i,CDE_COMM)(all,r,REG)
    ALPHA(i,r) # 1 - sub. parameter in the CDE minimum expenditure function #;
Formula (all,i,CDE_COMM)(all,r,REG)
    ALPHA(i,r) = 1 - SUBPAR(i,r);

Zerodivide (nonzero_by_zero) default 1;
Zerodivide (zero_by_zero) default 1;
Coefficient (all,i,CDE_COMM)(all,k,CDE_COMM)(all,r,REG)
    APE(i,k,r) # Allen partial elst. of sub. between composite i and k in r #;
Formula (all,i,CDE_COMM)(all,k,CDE_COMM)(all,r,REG)
    APE(i,k,r)
        = ALPHA(i,r) + ALPHA(k,r) - sum(n,CDE_COMM, CONSHR(n,r) * ALPHA(n,r));
Formula (all,i,CDE_COMM)(all,r,REG)
    APE(i,i,r)
        = 2.0 * ALPHA(i,r)
        - sum(n,CDE_COMM, CONSHR(n,r) * ALPHA(n,r))
        - ALPHA(i,r) / CONSHR(i,r);
Zerodivide (nonzero_by_zero) off;
Zerodivide (zero_by_zero) off;

Coefficient (all,i,CDE_COMM)(all,r,REG)
    EY(i,r) # income elast. of private hhld demand for i in r (HT F4) #;
Formula (all,i,CDE_COMM)(all,r,REG)
    EY(i,r)
        =   [1.0 / sum(n,CDE_COMM, CONSHR(n,r) * INCPAR(n,r))]
            * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
                + sum(n,CDE_COMM, CONSHR(n,r) * INCPAR(n,r) * ALPHA(n,r))]
        + [ALPHA(i,r) - sum(n,CDE_COMM, CONSHR(n,r) * ALPHA(n,r))];

Coefficient (all,i,CDE_COMM)(all,k,CDE_COMM)(all,r,REG)
    EP(i,k,r)
    # uncomp. elast. of private hhld demand for i wrt price of k in r (HT F5) #;
Formula (all,i,CDE_COMM)(all,k,CDE_COMM)(all,r,REG)
    EP(i,k,r) = 0;
Formula (all,i,CDE_COMM)(all,k,CDE_COMM)(all,r,REG)
    EP(i,k,r) = [APE(i,k,r) - EY(i,r)] * CONSHR(k,r);

Equation PRIVDMNDS
# private consumption demands for composite commodities (HT 46) #
(all,i,CDE_COMM)(all,r,REG)
    qp(i,r) - pop(r)
        = sum(k,CDE_COMM, EP(i,k,r) * pp(k,r)) + EY(i,r) * [yp(r) - pop(r)];
!<
    Private consumption demands for composite commodities.  Demand system is
    on a per capita basis.  Here, yp(r) - pop(r) is % change in per capita
    income.  (HT 46)
>!

! ECONS -- end composite energy nest code !

!<
    --------
    3. Firms
    --------

    To implement the production system, we define a set "SUBPR_COMM" of
    subproducts, corresponding to the various composites of TP-16, the
    value-added-energy composite, the capital-energy composite, and so on
    (we call them "subproducts" not "composites" to avoid confusion with the
    domestic-import and import-import composites).  We include subproducts
    with endowments and tradables in a set "FIRM_COMM" of commodities
    demanded by firms.


    Set structure
    -------------

    |--------------------------------------------------|
    |                    FIRM_COMM                     |
    |--------------------------------------------------|
    |              DEMD_COMM               |SUBPR_COMM |
    |--------------------------------------|-----------|
    | ENDW_COMM |       TRAD_COMM          |
    |---------------------------------------

 biofuels: note the change in production structure. 

    Production structure
    --------------------

                                     qo(j,r)  [ao(j,r)]     TOTAL OUTPUT NEST
                                     /\
                                    /  \  <----- CES
                                   /    \
                                  /      \
                                 /        \
                    endowment-energy       non-energy inputs
Val.-add.-en. nest    /| \                                 /\
    CES ----->       / |  \                               /  \  <------ CES
                    /  |   \                             /    \
                   /   |    \                           /      \
                  /    |     \                         /        \
               Land  Labor  K-E subproduct         Domestic     Foreign
                              /\
                             /  \
                            /    \                  Capital-energy nest
                           /      \      <--------- CES (subst. el. ELKE)
                          /        \
                         /          \
                        /            \
                       /              \
                      K             energy subproduct
                                                /\         Energy nest
                                               /  \ <--- CES (subst. el. ELEN)
                                              /    \
                                             /      \
                                            /        \
                                           /          \
                            (add subnest)electricity  non-electr. energy
                                                        /\
    Non-electricity energy nest                        /  \
    CES (subst. el. ELNEL)  ---------------->         /    \
                                                     /      \
                                                    /        \
                                           non-coal energy   coal
                                                /\
    Non-coal energy nest     ------------>     /  \
    CES (subst. el. ELNCOAL)                  /    \
                                             /      \
                                            /        \
                                           /          \
                                 crude oil, gas, bio-oil products

biofuels: note the change here

                                                /\
    bio energy nest          ------------>     /  \
    CES (subst. el. ELBIOOIL)                 /    \
                                             /      \
                                            /        \
                                           /          \
                                 petroleum prdts, Blender, eth1 eth2, biod..



    3-0. Module-Specific Variables
    3-1. Factor Employment Taxation
    3-2. Composite Intermediates Nest
    3-3. Notational Links
    3-4. Input-Augmenting Technological Change
    3-5. Non-Coal Energy Nest
    3-6. Non-Electricity Energy Nest
    3-7. Energy Nest
    3-8. Capital-Energy Nest
    3-9. Value-Added-Energy Nest
    3-10. Top of the Production Structure
    3-11. Output Taxation
>!


!<
    3-0. Module-Specific Variables
    ------------------------------

    only used in this Firms Module or the Summary Indices or Welfare
    appendices
>!

! biofuels: add biooil to this set !
! AEZ: add land to SUBPR_COMM, this will be another nest !
!SOYF_modify the following set to include ore nest in the following nest!
! By-products: add cddg, obdbs, obdbo, obdb, and feed to the subproducts!
!FARZAD:CRP: added land0 and land into the subproduct set!
!<<< Add electricity0 here!
Set
 SUBPR_COMM # subproducts # (vaen,land0,land,ken,eny,nely,ncoal,biooil,cddgc,
cddgs, cddg, obdbs, obdbp, obdbr, obdbo, obdb, obcd, lvfeed, crfeed, feed, vol,
electricity0);

Set
    FIRM_COMM # commodities demanded by firms # = DEMD_COMM union SUBPR_COMM;

Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    pft(i,j,r) # firms' price for commodity i for use by j in r #;
Variable (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    qft(i,j,r) # demand for commodity i for use by j in region r #;
Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    pf(i,j,r) # firms' price for commodity i for use by j in r #;
Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) # demand for commodity i for use by j in r #;
Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    af(i,j,r) # factor i augmenting tech change in sector j of r #;
Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    ams(i,r,s) # import i from region r augmenting tech change in region s #;

Coefficient (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFA(i,j,r) # producer expend. on i by j in r valued at agent's prices #;

Coefficient (all,i,SUBPR_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFAS(i,j,r) # producer expend. on i by j in r valued at agent's prices #;


!<
    3-1. Factor Employment Taxation
    -------------------------------
>!

Variable (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    tf(i,j,r) # tax on primary factor i used by j in region r #;
Equation MPFACTPRICE # eq'n links domestic and firm demand prices (HT 16) #
(all,i,ENDWM_COMM)(all,j,ALL_INDS)(all,r,REG)
    pfe(i,j,r) = tf(i,j,r) + pm(i,r);

Equation SPFACTPRICE # eq'n links domestic and firm demand prices (HT 17) #
(all,i,ENDWS_COMM)(all,j,ALL_INDS)(all,r,REG)
    pfe(i,j,r) = tf(i,j,r) + pmes(i,j,r);

Equation TFURATIO
# change in ratio of tax payments on factor usage to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrfu(r) + TFU(r) * y(r)
        = sum(i,ENDWM_COMM, sum(j,ALL_INDS, VFAD(i,j,r) * tf(i,j,r)))
        + sum(i,ENDWM_COMM, sum(j,ALL_INDS,
            ETAX(i,j,r) * [pm(i,r) + qfe(i,j,r)]))
        + sum(i,ENDWS_COMM, sum(j,ALL_INDS, VFAD(i,j,r) * tf(i,j,r)))
        + sum(i,ENDWS_COMM, sum(j,ALL_INDS,
            ETAX(i,j,r) * [pmes(i,j,r) + qfe(i,j,r)]));


!<
    3-2. Composite Intermediates Nest
    ---------------------------------
>!



Equation DMNDDPRICE
# taxation of intermediate usage of domestic product #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    pfd(i,j,r) = pm(i,r) + tfd(i,j,r);


Equation DMNDIPRICES
# taxation of intermediate usage of imports #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    pfm(i,j,r) = pim(i,r) + tfm(i,j,r);

! Farzad 2015: BIOFUELS: Separate out the biofuels component of this to permit  
    implementation of a RFS !

Variable (change) (all,r,REG) del_taxriunbio(r)
#change in ratio of tax payments on nbiooil intermed.goods to regional income #;
Variable (change) (all,r,REG) del_taxriubio(r)
#change in ratio of tax payments on biooil intermed. goods to regional income #;

Equation TIURATIONBIO
#change in ratio of tax payments on nbiooil intermed.goods to regional income#
(all,r,REG)
    100.0 * INCOME(r) * del_taxriunbio(r) + TIUNBIO(r) * y(r)
        = sum(i,NBIOOIL_COMM, sum(j,ALL_INDS,
            VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
        + sum(i,NBIOOIL_COMM, sum(j,ALL_INDS,
            VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));

Equation TIURATIOBIO
#change in ratio of tax payments on biooil intermed. goods to regional income#
(all,r,REG)
    100.0 * INCOME(r) * del_taxriubio(r) + TIUBIO(r) * y(r)
        = sum(i,BIOOIL_COMM, sum(j,ALL_INDS,
            VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
        + sum(i,BIOOIL_COMM, sum(j,ALL_INDS,
            VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));

Equation TIURATIO
# change in ratio of tax payments on intermediate goods to regional income #
(all,r,REG)

del_taxriu(r) 
        = del_taxriunbio(r) + del_taxriubio(r);

!Equation TIURATIO
# change in ratio of tax payments on intermediate goods to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxriu(r) + TIU(r) * y(r)
        = sum(i,TRAD_COMM, sum(j,ALL_INDS,
            VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
        + sum(i,TRAD_COMM, sum(j,ALL_INDS,
           VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));!

!Farzad 2015 End!




Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    FMSHR(i,j,s) # share of firms' imports in dom. composite, agent's prices #;
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    FMSHR(i,j,s) = VIFA(i,j,s) / VFAD(i,j,s);
Equation ICOMPRICE
# industry price for composite commodities (HT 30) #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    pft(i,j,r) = FMSHR(i,j,r) * pfm(i,j,r) + [1 - FMSHR(i,j,r)] * pfd(i,j,r);
Zerodivide (zero_by_zero) off;

Equation INDIMP
# industry j demands for composite import i (HT 31) #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    qfm(i,j,s) = qft(i,j,s) - ESUBD(i) * [pfm(i,j,s) - pft(i,j,s)];

Equation INDDOM
# industry j demands for domestic good i (HT 32) #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,s,REG)
    qfd(i,j,s) = qft(i,j,s) - ESUBD(i) * [pfd(i,j,s) - pft(i,j,s)];


!<
    3-3. Notational Links
    ---------------------
>!

Formula (all,i,DEMD_COMM)(all,j,ALL_INDS)(all,r,REG)
    VFA(i,j,r) = VFAD(i,j,r);

Equation PFEEQ # Input endowment prices into the production system. #
(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    pf(i,j,r) = pfe(i,j,r);

Equation PFTEQ # Input tradables prices into the production system. #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    pf(i,j,r) = pft(i,j,r);

Equation QFEEQ # Output endowment quantities from the production system. #
(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    qfe(i,j,r) = qf(i,j,r);

Equation QFTEQ # Output tradables quantities from the production system. #
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    qft(i,j,r) = qf(i,j,r);


!<
    3-4. Input-Augmenting Technological Change
    ------------------------------------------
>!

!Farzad 2015: The following tech change is introduced to adjust the energy
 content of ethanol!
Variable (all,i,FIRM_COMM)(all,r,REG)
    afenergy(i,r) # factor i augmenting tech change, worldwide #;
Variable (all,i,FIRM_COMM)
    afcom(i) # factor i augmenting tech change, worldwide #;
Variable (all,j,ALL_INDS)
    afsec(j) # factor augmenting tech change in sector j, worldwide #;
Variable (all,r,REG)
    afreg(r) # factor augmenting tech change in region r #;
Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    afall(i,j,r) # input i augmenting tech change in sector j of r #;

!SOYF: Defining techchange for cropland pasture. To use this off yield for 
cropland paasture!

Set AEZ_COMM
   Read elements from file GTAPSETS header "AEZ";
Subset
    AEZ_COMM is subset of ENDW_COMM;

Set NAEZ=FIRM_COMM-AEZ_COMM;

Set PASTCR (Pasturecrop);

Subset 
    PASTCR is subset of ALL_INDS;

Set NONPASTCR =ALL_INDS-PASTCR;

Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    afpasture(i,j,r) # pasture tech change of r by aez#;

Coefficient (parameter)(all,r,REG)
    PASTUREEL(r)  # pasture tech change of r by aez#;
Read PASTUREEL from file GTAPPARM header "PAEL";


!<<Begin Add codes to further adjust cropland pasture yield !

Coefficient (parameter)
    PAELADJUST  # pasture tech change adjustment factor#;
Read PAELADJUST from file GTAPPARM header "PAAD";


Coefficient (parameter)
    (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)  
    PASTUREON(i,j,r) # pasture tech ON_OFF#; 
    !In the following read in PAOF for off case and read in PAON for on case!
Read PASTUREON from file GTAPPARM header "PAON";

Variable (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
   upadvmiscshare(i,j,r) # percentage change in share of advf_Misc#;

Coefficient (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    ADVMISCSHARE(i,j,r) # Advf_Fuel share in eth+advf_Mics#;

Update (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    ADVMISCSHARE(i,j,r) = upadvmiscshare(i,j,r) ;

Read
    ADVMISCSHARE from file GTAPDATA header "ADFS";

Zerodivide (zero_by_zero) default 0;
zerodivide (nonzero_by_zero) default 0;

Coefficient (all,i,AEZ_COMM)(all,r,REG) 
MISCSHA0(i,r)
#sahre of misc in value added of misc plus swit#;

Coefficient (all,i,AEZ_COMM)(all,r,REG) 
MISCSHA(i,r)
#sahre of misc in value added of misc plus swit plus cropland pasture #;

Coefficient (all,i,AEZ_COMM)(all,r,REG) 
SWITSHA0(i,r)
#sahre of swit in value added of misc plus swit#;

Coefficient (all,i,AEZ_COMM)(all,r,REG) 
SWITSHA(i,r)
#sahre of swit in value added of misc plus swit plus cropland pasture #;


Coefficient (all,i,AEZ_COMM)(all,r,REG) 
CROPPASSHA(i,r)
#sahre of crop_pasture in value added of misc plus swit plus crop-pasture#;

Formula
(all,i,AEZ_COMM)(all,r,REG)
MISCSHA0(i,r)=EVFA(i,"Miscanthus",r)/
       (EVFA(i,"Miscanthus",r)+EVFA(i,"Switchgrass",r));

Formula
(all,i,AEZ_COMM)(all,r,REG)
MISCSHA(i,r)=EVFA(i,"Miscanthus",r)/
       (EVFA(i,"Miscanthus",r)+EVFA(i,"Switchgrass",r)+EVFA(i,"Pasturecrop",r));
Formula
(all,i,AEZ_COMM)(all,r,REG)
SWITSHA0(i,r)=EVFA(i,"Switchgrass",r)/
       (EVFA(i,"Miscanthus",r)+EVFA(i,"Switchgrass",r));

Formula
(all,i,AEZ_COMM)(all,r,REG)
SWITSHA(i,r)=EVFA(i,"Switchgrass",r)/
       (EVFA(i,"Miscanthus",r)+EVFA(i,"Switchgrass",r)+EVFA(i,"Pasturecrop",r));

Formula
(all,i,AEZ_COMM)(all,r,REG)
CROPPASSHA(i,r)=EVFA(i,"Pasturecrop",r)/
       (EVFA(i,"Miscanthus",r)+EVFA(i,"Switchgrass",r)+EVFA(i,"Pasturecrop",r));
Zerodivide (zero_by_zero) off;
zerodivide (nonzero_by_zero) off;

Equation E_advfmiscshare1 # update equation for adfv_misc shares  #
    (all,i,AEZ_COMM)(all,r,REG)
     upadvmiscshare(i,"Pasturecrop",r) = 
+[MISCSHA0(i,r)*qf(i,"Miscanthus",r)+SWITSHA0(i,r)*qf(i,"Switchgrass",r)]
-[MISCSHA(i,r)*qf(i,"Miscanthus",r)+SWITSHA(i,r)*qf(i,"Switchgrass",r)+
CROPPASSHA(i,r)*qf(i,"Pasturecrop",r)];

Equation E_advfmiscshare2 # update equation for adfv_misc shares  #
    (all,i,NAEZ)(all,j,ALL_INDS)(all,r,REG)
     upadvmiscshare(i,j,r) = 0;

Equation E_advfmiscshare3 # update equation for adfv_misc shares  #
    (all,i,AEZ_COMM)(all,j,NONPASTCR)(all,r,REG)
     upadvmiscshare(i,j,r) = 0;
!<<end!


!<<modify the first equation!
Equation PASTUREAF1 
# Determine tech change in cropland paasture sector #
(all,i,AEZ_COMM)(all,r,REG)
afpasture(i,"Pasturecrop",r)=PASTUREEL(r)*
                 (1+PAELADJUST*ADVMISCSHARE(i,"Pasturecrop",r))
                 * PASTUREON(i,"Pasturecrop",r)*pf(i,"Pasturecrop",r);

Equation PASTUREAF2 
# Determine tech in NAEZ in all sectors #
(all,i,NAEZ)(all,j,ALL_INDS)(all,r,REG)
afpasture(i,j,r)=0;

Equation PASTUREAF3
# Determine tech change in AEZ for non cropland paasture sectors #
(all,i,AEZ_COMM)(all,j,NONPASTCR)(all,r,REG)
afpasture(i,j,r)=0;



Equation AFWORLD
# sector/region specific rate of factor i augmenting tech change #
(all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    af(i,j,r) = afcom(i)+afsec(j)+afreg(r)+afall(i,j,r)+afpasture(i,j,r)+
    afenergy(i,r);

! By-products: New demand nests for feedstuffs !
!------------------------------------------------------------------------------!
!Xin added GRNATJ_M and GRNETJ_Mwhich is DDGS here!
!<
    3-5i1a. Oth_CrGr-DDGS feed sub product for livestock
    -------------------------------------------------------------
>!

Zerodivide (zero_by_zero) default 1;
zerodivide (nonzero_by_zero) default 1;
Set CDDGC_COMM # Oth_CrGr and DDGS-based feeds #
    (Oth_CrGr, DDGS, GRNATJ_M,GRNETJ_M);
Subset
    CDDGC_COMM is subset of TRAD_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("CDDGC",j,r) = sum(i,CDDGC_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("CDDGC",j,r) = VFAS("CDDGC",j,r);
 
Coefficient (all,i,CDDGC_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDGC(i,j,r)
    # share of i in cost to j of CDDGC feed subproduct #;
Formula (all,i,CDDGC_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDGC(i,j,r) = VFA(i,j,r) / VFAS("CDDGC",j,r);
 
Equation CDDGCPRICE # price of CDDGC feed#
(all,j,ALL_INDS)(all,r,REG)
    pf("CDDGC",j,r)
        = sum(k,CDDGC_COMM, CSHCDDGC(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELCDDGC(j,r)
    # elasticity of substitution in CDDGC feed subproduction #;
Read
    ELCDDGC from file GTAPPARM header "CDGC";
 
Equation CDDGCDEMAND
# demand for inputs into energy feed subproduction #
(all,i,CDDGC_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("CDDGC",j,r)
        - ELCDDGC(j,r) * [pf(i,j,r) - af(i,j,r) - pf("CDDGC",j,r)];
 
!<
    3-5i1b. Sorghum-DDGSs feed sub product for livestock
    -------------------------------------------------------------
>!
 
Set CDDGS_COMM # Sorghum and DDGSS-based feeds #
    (Sorghum, DDGSS);
Subset
    CDDGS_COMM is subset of TRAD_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("CDDGS",j,r) = sum(i,CDDGS_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("CDDGS",j,r) = VFAS("CDDGS",j,r);
 
Coefficient (all,i,CDDGS_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDGS(i,j,r)
    # share of i in cost to j of CDDGS feed subproduct #;
Formula (all,i,CDDGS_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDGS(i,j,r) = VFA(i,j,r) / VFAS("CDDGS",j,r);
 
Equation CDDGSPRICE # price of CDDGS feed#
(all,j,ALL_INDS)(all,r,REG)
    pf("CDDGS",j,r)
        = sum(k,CDDGS_COMM, CSHCDDGS(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
 
Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELCDDGS(j,r)
    # elasticity of substitution in CDDGS feed subproduction #;
Read
    ELCDDGS from file GTAPPARM header "CDGS";
 
Equation CDDGSDEMAND
# demand for inputs into energy feed subproduction #
(all,i,CDDGS_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("CDDGS",j,r)
        - ELCDDGS(j,r) * [pf(i,j,r) - af(i,j,r) - pf("CDDGS",j,r)];

!<
    3-5i1. CDDGC-CDDGS feed sub product for livestock
    -------------------------------------------------------------
>!
 
Set CDDG_COMM # CDDGC and CDDGS -based feeds #
    (CDDGC, CDDGS);
Subset
    CDDG_COMM is subset of FIRM_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("CDDG",j,r) = sum(i,CDDG_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("CDDG",j,r) = VFAS("CDDG",j,r);
 
Coefficient (all,i,CDDG_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDG(i,j,r)
    # share of i in cost to j of CDDG feed subproduct #;
Formula (all,i,CDDG_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCDDG(i,j,r) = VFA(i,j,r) / VFAS("CDDG",j,r);
 
Equation CDDGPRICE # price of CDDG feed#
(all,j,ALL_INDS)(all,r,REG)
    pf("CDDG",j,r)
        = sum(k,CDDG_COMM, CSHCDDG(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
 
Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELCDDG(j,r)
    # elasticity of substitution in CDDG feed subproduction #;
Read
    ELCDDG from file GTAPPARM header "CDDG";
 
Equation CDDGDEMAND
# demand for inputs into energy feed subproduction #
(all,i,CDDG_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("CDDG",j,r)
        - ELCDDG(j,r) * [pf(i,j,r) - af(i,j,r) - pf("CDDG",j,r)];
 
!<
    3-5i2a. Sobeans-VOBPS feed sub product for livestock
    ----------------------------------------------------------------
    SOYF: Modified the following nest for soy
>!
Set OBDBS_COMM # Soybeans and VOBPS - based feeds #
    (Soybeans, VOBPS);
Subset
    OBDBS_COMM is subset of TRAD_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBDBS",j,r) = sum(i,OBDBS_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBDBS",j,r) = VFAS("OBDBS",j,r);

Coefficient (all,i,OBDBS_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBS(i,j,r)
    # share of i in cost to j of OBDBS feed subproduct #;
Formula (all,i,OBDBS_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBS(i,j,r) = VFA(i,j,r) / VFAS("OBDBS",j,r);

Equation OBDBSPRICE # price of OBDBS feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBDBS",j,r)
        = sum(k,OBDBS_COMM, CSHOBDBS(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBDBS(j,r)
    # elasticity of substitution in OBDBS feed subproduction #;
Read
    ELOBDBS from file GTAPPARM header "OBDS";

Equation OBDBSDEMAND
# demand for inputs into energy feed subproduction #
(all,i,OBDBS_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBDBS",j,r)
        - ELOBDBS(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBDBS",j,r)];

!<
    3-5i2b. Palmf-VOBPP feed sub product for livestock
    ----------------------------------------------------------------
    SOYF: Modified the following nest for soy
>!
Set OBDBP_COMM # Palmf and VOBPP - based feeds #
    (Palmf, VOBPP);
Subset
    OBDBP_COMM is subset of TRAD_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBDBP",j,r) = sum(i,OBDBP_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBDBP",j,r) = VFAS("OBDBP",j,r);

Coefficient (all,i,OBDBP_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBP(i,j,r)
    # share of i in cost to j of OBDBP feed subproduct #;
Formula (all,i,OBDBP_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBP(i,j,r) = VFA(i,j,r) / VFAS("OBDBP",j,r);

Equation OBDBPPRICE # price of OBDBP feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBDBP",j,r)
        = sum(k,OBDBP_COMM, CSHOBDBP(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBDBP(j,r)
    # elasticity of substitution in OBDBP feed subproduction #;
Read
    ELOBDBP from file GTAPPARM header "OBDP";

Equation OBDBPDEMAND
# demand for inputs into energy feed subproduction #
(all,i,OBDBP_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBDBP",j,r)
        - ELOBDBP(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBDBP",j,r)];

!<
    3-5i2C. Rapeseed-VOBPR feed sub product for livestock
    ----------------------------------------------------------------
    added the following nest for rapeseed
>!
Set OBDBR_COMM # Rapeseed and VOBPR - based feeds #
    (Rapeseed, VOBPR);
Subset
    OBDBR_COMM is subset of TRAD_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBDBR",j,r) = sum(i,OBDBR_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBDBR",j,r) = VFAS("OBDBR",j,r);
 
Coefficient (all,i,OBDBR_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBR(i,j,r)
    # share of i in cost to j of OBDBR feed subproduct #;
Formula (all,i,OBDBR_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBR(i,j,r) = VFA(i,j,r) / VFAS("OBDBR",j,r);
 
Equation OBDBORRICE # price of OBDBR feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBDBR",j,r)
        = sum(k,OBDBR_COMM, CSHOBDBR(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
 
Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBDBR(j,r)
    # elasticity of substitution in OBDBR feed subproduction #;
Read
    ELOBDBR from file GTAPPARM header "OBDR";
 
Equation OBDBRDEMAND
# demand for inputs into energy feed subproduction #
(all,i,OBDBR_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBDBR",j,r)
        - ELOBDBR(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBDBR",j,r)];
 
!<
    3-5i2D. Oth_Oilseeds-VOBPO feed sub product for livestock
    ----------------------------------------------------------------
    SOYF: added the following nest for other seed
>!
Set OBDBO_COMM # Oth_oilseeds and VOBPO - based feeds #
    (Oth_Oilseeds, VOBPO);
Subset
    OBDBO_COMM is subset of TRAD_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBDBO",j,r) = sum(i,OBDBO_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBDBO",j,r) = VFAS("OBDBO",j,r);
 
Coefficient (all,i,OBDBO_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBO(i,j,r)
    # share of i in cost to j of OBDBO feed subproduct #;
Formula (all,i,OBDBO_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDBO(i,j,r) = VFA(i,j,r) / VFAS("OBDBO",j,r);
 
Equation OBDBOPRICE # price of OBDBO feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBDBO",j,r)
        = sum(k,OBDBO_COMM, CSHOBDBO(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
 
Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBDBO(j,r)
    # elasticity of substitution in OBDBO feed subproduction #;
Read
    ELOBDBO from file GTAPPARM header "OBDO";
 
Equation OBDBODEMAND
# demand for inputs into energy feed subproduction #
(all,i,OBDBO_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBDBO",j,r)
        - ELOBDBO(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBDBO",j,r)];
 
!<
    3-5i2. Oilseeds-VOBP feed sub product for livestock
    ----------------------------------------------------------------
    SOYF: added the following nest to combine OBDBS&OBDBO
>!
!<<Xin added CAMHRJ_M,CRNHRJ_M for meal substutitions!
Set OBDB_COMM # Combine OBDBS, OBDBO, OBDBR, and OBDBP- based feeds #
    (OBDBO, OBDBS, OBDBP, OBDBR,CAMHRJ_M,CRNHRJ_M);
Subset
    OBDB_COMM is subset of FIRM_COMM;
 
Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBDB",j,r) = sum(i,OBDB_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBDB",j,r) = VFAS("OBDB",j,r);
 
Coefficient (all,i,OBDB_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDB(i,j,r)
    # share of i in cost to j of OBDB feed subproduct #;
Formula (all,i,OBDB_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBDB(i,j,r) = VFA(i,j,r) / VFAS("OBDB",j,r);
 
Equation OBDBPRICE # price of OBDB feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBDB",j,r)
        = sum(k,OBDB_COMM, CSHOBDB(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
 
Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBDB(j,r)
    # elasticity of substitution in OBDB feed subproduction #;
Read
    ELOBDB from file GTAPPARM header "OBDB";
 
Equation OBDBDEMAND
# demand for inputs into energy feed subproduction #
(all,i,OBDB_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBDB",j,r)
        - ELOBDB(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBDB",j,r)];
 

!<
    3-5i3. OBDBCDDG feed sub product for livestock
    ----------------------------------------------------------------
>!
Set OBCD_COMM # OBDB and CDDG - based feeds #
    (OBDB, CDDG);
Subset
    OBCD_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("OBCD",j,r) = sum(i,OBCD_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("OBCD",j,r) = VFAS("OBCD",j,r);

Coefficient (all,i,OBCD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBCD(i,j,r)
    # share of i in cost to j of OBCD feed subproduct #;
Formula (all,i,OBCD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHOBCD(i,j,r) = VFA(i,j,r) / VFAS("OBCD",j,r);

Equation OBCDPRICE # price of OBCD feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("OBCD",j,r)
        = sum(k,OBCD_COMM, CSHOBCD(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELOBCD(j,r)
    # elasticity of substitution in OBCD feed subproduction #;
Read
    ELOBCD from file GTAPPARM header "OBCD";

Equation OBCDDEMAND
# demand for inputs into OBCD feed subproduction #
(all,i,OBCD_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("OBCD",j,r)
        - ELOBCD(j,r) * [pf(i,j,r) - af(i,j,r) - pf("OBCD",j,r)];

!<
    3-5i4. Livestock-based feed sub product for livestock
    ------------------------------------------------------------------
>!
Set LVFEED_COMM # livestock-based feed subproduction #
    (Dairy_Farms, Ruminant, Nonruminant, Proc_Dairy, Proc_Rum, proc_NonRum);
Subset
    LVFEED_COMM is subset of TRAD_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("lvfeed",j,r) = sum(i,LVFEED_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("lvfeed",j,r) = VFAS("lvfeed",j,r);

Coefficient (all,i,LVFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHLVFEED(i,j,r)
    # share of i in cost to j of livestock-based feed subproduct #;
Formula (all,i,LVFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHLVFEED(i,j,r) = VFA(i,j,r) / VFAS("lvfeed",j,r);

Equation LVFEEDPRICE # price of livestock-based feed #
(all,j,ALL_INDS)(all,r,REG)
    pf("lvfeed",j,r)
        = sum(k,LVFEED_COMM, CSHLVFEED(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELLVFEED(j,r)
    # elasticity of substitution in OBDB feed subproduction #;
Read
    ELLVFEED from file GTAPPARM header "LVFD";

Equation LVFEEDDEMAND
# demand for inputs into livestock-based feed subproduction #
(all,i,LVFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("lvfeed",j,r)
        - ELLVFEED(j,r) * [pf(i,j,r) - af(i,j,r) - pf("lvfeed",j,r)];


!<
    3-5i5. Crop-based feed sub product for livestock
    ------------------------------------------------
>!

Set CRFEED_COMM # crop-based feed subproduct #
    (Paddy_rice, Wheat, Sugar_Crop, OthAgri);
Subset
    CRFEED_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("crfeed",j,r) = sum(i,CRFEED_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("crfeed",j,r) = VFAS("crfeed",j,r);

Coefficient (all,i,CRFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCRFEED(i,j,r)
    # share of i in cost to j of crop-based feed subproduct #;
Formula (all,i,CRFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHCRFEED(i,j,r) = VFA(i,j,r) / VFAS("crfeed",j,r);

Equation CRFEEDPRICE # price of crop-based feed subproduct#
(all,j,ALL_INDS)(all,r,REG)
    pf("crfeed",j,r)
        = sum(k,CRFEED_COMM, CSHCRFEED(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELCRFEED(j,r)
    # elasticity of substitution in crop-based feed subproduction #;
Read
    ELCRFEED from file GTAPPARM header "CRFD";

Equation CRFEEDDEMAND
# demand for inputs into crop-based feed subproduction #
(all,i,CRFEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("crfeed",j,r)
        - ELCRFEED(j,r) * [pf(i,j,r) - af(i,j,r) - pf("crfeed",j,r)];

!<
    3-5i5. Feedstuff sub product for livestock
    ------------------------------------------
>!

Set
    FEED_COMM # feedstuffs commodities # 
    (obcd, crfeed, lvfeed, Proc_feed );
Subset
    FEED_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("feed",j,r) = sum(i,FEED_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("feed",j,r) = VFAS("feed",j,r);

Coefficient (all,i,FEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHFEED(i,j,r)
    # share of i in cost to j of feed subproduct #;
Formula (all,i,FEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHFEED(i,j,r) = VFA(i,j,r) / VFAS("feed",j,r);

Equation FEEDPRICE # price of energy feed#
(all,j,ALL_INDS)(all,r,REG)
    pf("feed",j,r)
        = sum(k,FEED_COMM, CSHFEED(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELFEED(j,r)
    # elasticity of substitution in feed subproduction #;
Read
    ELFEED from file GTAPPARM header "EFED";

Equation FEEDDEMAND
# demand for inputs into energy feed subproduction #
(all,i,FEED_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("feed",j,r)
        - ELFEED(j,r) * [pf(i,j,r) - af(i,j,r) - pf("feed",j,r)];

! By-products: New demand nests for feedstuffs ends here !

! Biofuels: Create biooil composite produced from biofuels and oilproducts !

!<<New nests was not added, but may be added later here!


!<
    3-5a. Bio-oil Energy Nest
    -------------------------
>!

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("biooil",j,r) = sum(i,BIOOIL_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("biooil",j,r) = VFAS("biooil",j,r);

Coefficient
    SIZE_BIOOIL # size of BIOOIL_COMM set #;
Formula
    SIZE_BIOOIL = sum(i,BIOOIL_COMM, 1);

Coefficient (all,i,BIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHBIOOIL(i,j,r)
    # share of i in cost to j of biooil energy subproduct #;
Formula (all,i,BIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("biooil",j,r) = 0)
    CSHBIOOIL(i,j,r) = 1.0 / SIZE_BIOOIL;
Formula (all,i,BIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("biooil",j,r) > 0)
    CSHBIOOIL(i,j,r) = VFA(i,j,r) / VFAS("biooil",j,r);

Equation BIOOILPRICE # price of biooil energy #
(all,j,ALL_INDS)(all,r,REG)
    pf("biooil",j,r)
        = sum(k,BIOOIL_COMM, CSHBIOOIL(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELBIOOIL(j,r)
    # elasticity of substitution in biooil energy subproduction #;
Read
    ELBIOOIL from file GTAPPARM header "ELBO";

Equation BIOOILDEMAND
# demand for inputs into biooil energy subproduction #
(all,i,BIOOIL_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("biooil",j,r)
        - ELBIOOIL(j,r) * [pf(i,j,r) - af(i,j,r) - pf("biooil",j,r)];





!<
    3-5b. Non-Coal Energy Nest
    -------------------------
>!

! biofuels: replace oil-pcts with biooil composite!

Set
    NCOAL_COMM # inputs into non-coal energy subproduction #
    (oil, gas, biooil);

Subset
    NCOAL_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("ncoal",j,r) = sum(i,NCOAL_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("ncoal",j,r) = VFAS("ncoal",j,r);

Coefficient
    SIZE_NCOAL # size of NCOAL_COMM set #;
Formula
    SIZE_NCOAL = sum(i,NCOAL_COMM, 1);

Coefficient (all,i,NCOAL_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHNCOAL(i,j,r)
    # share of i in cost to j of non-coal energy subproduct #;
Formula (all,i,NCOAL_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("ncoal",j,r) = 0)
    CSHNCOAL(i,j,r) = 1.0 / SIZE_NCOAL;
Formula (all,i,NCOAL_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("ncoal",j,r) > 0)
    CSHNCOAL(i,j,r) = VFA(i,j,r) / VFAS("ncoal",j,r);

Equation NCOALPRICE # price of non-coal energy #
(all,j,ALL_INDS)(all,r,REG)
    pf("ncoal",j,r)
        = sum(k,NCOAL_COMM, CSHNCOAL(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELNCOAL(j,r)
    # elasticity of substitution in non-coal energy subproduction #;
Read
    ELNCOAL from file GTAPPARM header "ELNC";

Equation NCOALDEMAND
# demand for inputs into non-coal energy subproduction #
(all,i,NCOAL_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("ncoal",j,r)
        - ELNCOAL(j,r) * [pf(i,j,r) - af(i,j,r) - pf("ncoal",j,r)];


!<
    3-6. Non-Electricity Energy Nest
    --------------------------------
>!

Set
    NELY_COMM # inputs into non-electricity energy subproduction #
    (coal, ncoal);
Subset
    NELY_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("nely",j,r) = sum(i,NELY_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("nely",j,r) = VFAS("nely",j,r);

Coefficient
    SIZE_FUEL # size of NELY_COMM set #;
Formula
    SIZE_FUEL = sum(i,NELY_COMM, 1);

Coefficient (all,i,NELY_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHNELY(i,j,r)
    # share of i in cost to j of non-electricity energy subproduct #;
Formula (all,i,NELY_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("nely",j,r) = 0)
    CSHNELY(i,j,r) = 1.0 / SIZE_FUEL;
Formula (all,i,NELY_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("nely",j,r) > 0)
    CSHNELY(i,j,r) = VFA(i,j,r) / VFAS("nely",j,r);

Equation NELYPRICE # price of non-electricity energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("nely",j,r) =
        sum(k,NELY_COMM, CSHNELY(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELNEL(j,r)
    # elasticity of substitution in non-electricity energy subproduction #;
Read
    ELNEL from file GTAPPARM header "ELNE";

Equation NELYDEMAND
# demand for inputs into non-electricity energy subproduction #
(all,i,NELY_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("nely",j,r)
        - ELNEL(j,r) * [pf(i,j,r) - af(i,j,r) - pf("nely",j,r)];

!-----------------------------------------------------------------------------!
!<<Xin added electricity next!
!<
    3-6.2. Electricity Energy Nest
    --------------------------------
>!

!Subset
    ELEC_COMM is subset of FIRM_COMM;!

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("electricity0",j,r) = sum(i,ELEC_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("electricity0",j,r) = VFAS("electricity0",j,r);

Coefficient
    SIZE_ELEC # size of NELY_COMM set #;
Formula
    SIZE_ELEC = sum(i,ELEC_COMM, 1);

Coefficient (all,i,ELEC_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSELEC(i,j,r)
    # share of i in cost to j of non-electricity energy subproduct #;
Formula (all,i,ELEC_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("electricity0",j,r) = 0)
    CSELEC(i,j,r) = 1.0 / SIZE_ELEC;
Formula (all,i,ELEC_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("electricity0",j,r) > 0)
    CSELEC(i,j,r) = VFA(i,j,r) / VFAS("electricity0",j,r);

Equation ELECPRICE # price of non-electricity energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("electricity0",j,r) =
        sum(k,ELEC_COMM, CSELEC(k,j,r) * [pf(k,j,r) - af(k,j,r)]);
!parameter ELELEC defined earlier!
Equation ELECDEMAND
# demand for inputs into non-electricity energy subproduction #
(all,i,ELEC_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("electricity0",j,r)
        - ELELEC(r) * [pf(i,j,r) - af(i,j,r) - pf("electricity0",j,r)];

!<
    3-7. Energy Nest
    ----------------
>!
!<<<<Xin add electricity0 here!

Set
    ENY_COMM # inputs into energy subproduction # (electricity0, nely);
Subset
    ENY_COMM is subset of FIRM_COMM;

Coefficient
    SIZE_ENY # size of ENY_COMM set #;
Formula
    SIZE_ENY = sum(i,ENY_COMM, 1);

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("eny",j,r) = sum(i,ENY_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("eny",j,r) = VFAS("eny",j,r);

Coefficient (all,i,ENY_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHENY(i,j,r) # share of i in cost to j of energy subproduct #;
Formula (all,i,ENY_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("eny",j,r) = 0)
    CSHENY(i,j,r) = 1.0 / SIZE_ENY;
Formula (all,i,ENY_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("eny",j,r) > 0)
    CSHENY(i,j,r) = VFA(i,j,r) / VFAS("eny",j,r);

Equation ENYPRICE # price of energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("eny",j,r) = sum(k,ENY_COMM, CSHENY(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELEN(j,r) # elasticity of substitution in energy subproduction #;
Read
    ELEN from file GTAPPARM header "ELEN";

Equation ENYDEMAND # demand for inputs into energy subproduction #
(all,i,ENY_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("eny",j,r)
        - ELEN(j,r) * [pf(i,j,r) - af(i,j,r) - pf("eny",j,r)];


!<
    3-8. Capital-Energy Nest
    ------------------------
>!

Set
    KEN_COMM # inputs into capital-energy subproduction # (capital, eny);
Subset
    KEN_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("ken",j,r) = sum(i,KEN_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("ken",j,r) = VFAS("ken",j,r);

Coefficient
    SIZE_KEN # size of KEN_COMM set #;
Formula
    SIZE_KEN = sum(i,KEN_COMM, 1);

Coefficient (all,i,KEN_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHKEN(i,j,r) # share of i in cost to j of capital-energy subproduct #;
Formula (all,i,KEN_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("ken",j,r) = 0)
    CSHKEN(i,j,r) = 1.0 / SIZE_KEN;
Formula (all,i,KEN_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("ken",j,r) > 0)
    CSHKEN(i,j,r) = VFA(i,j,r) / VFAS("ken",j,r);

Equation CAPENPRICE # price of capital-energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("ken",j,r)
        = sum(k,KEN_COMM, CSHKEN(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELKE(j,r) # elasticity of substitution in capital-energy subproduction #;
Read
    ELKE from file GTAPPARM header "ELKE";

Equation CAPENDEMAND # demand for inputs into capital-energy subproduction #
(all,i,KEN_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r)= -af(i,j,r) + qf("ken",j,r)
        - ELKE(j,r) * [pf(i,j,r) - af(i,j,r) - pf("ken",j,r)];

Zerodivide (zero_by_zero) off;
zerodivide (nonzero_by_zero) off;

!<
    3-9a. Land use nest
>!

! AEZ: 'Land' is expanded to 18 AEZ elements in VAEN_COMM !
!FARZAD:CRP: I changed land to land0 !

!SOYF: moved to the section which I defined af for cropland pasture!
!Set AEZ_COMM
   Read elements from file GTAPSETS header "AEZ";
Subset
    AEZ_COMM is subset of ENDW_COMM;!

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("land0",j,r) = sum(i,AEZ_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("land0",j,r) = VFAS("land0",j,r);

Coefficient
    SIZE_AEZ # size of AEZ_COMM set #;
Formula
    SIZE_AEZ = sum(i,AEZ_COMM, 1);

Coefficient (all,i,AEZ_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHAEZ(i,j,r)
    # share of i AEZ in cost to j of AEZ subproduct nest #;
Formula (all,i,AEZ_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("land0",j,r) = 0)
    CSHAEZ(i,j,r) = 1.0 / SIZE_AEZ;
Formula (all,i,AEZ_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("land0",j,r) > 0)
    CSHAEZ(i,j,r) = VFA(i,j,r) / VFAS("land0",j,r);

Equation AEZPRICE # price of value-added-energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("land0",j,r)
        = sum(k,AEZ_COMM, CSHAEZ(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter)(all,j,ALL_INDS)
    ESAEZ(j) # elasticity of substitution in AEZ nest # ;
Read
    ESAEZ from file GTAPPARM header "EAEZ";



!Farzad: Moved this from another palce!  
!>!
Set
    CROP_INDS # crop commodities #
    maximum size 10 read elements from file GTAPSETS header "CROP";
Subset
    CROP_INDS is subset of TRAD_COMM;
Set
    FOREST_INDS # forestry commodities #
    maximum size 10 read elements from file GTAPSETS header "FOR";
Set
    GRAZE_INDS # ruminant grazing commodities #
    maximum size 15 read elements from file GTAPSETS header "GRAZ";
Set
    AGRLAND_INDS # land-using agr commodities # = CROP_INDS UNION GRAZE_INDS; 
Subset
    AGRLAND_INDS is subset of ALL_INDS;
Set
    NONAGRLAND # non land-using industries # = ALL_INDS - AGRLAND_INDS;
Set
    LAND_INDS # commodities produced using land # = 
    FOREST_INDS UNION AGRLAND_INDS; 
Subset
    LAND_INDS is subset of ALL_INDS;
Set
    NLAND_INDS # commodities produced NOT using land # = 
    ALL_INDS - LAND_INDS; 
Set 
    NCROP_INDS # non-crop commodities produced using land # =
    ALL_INDS - CROP_INDS;
!>!

!Farzad: I changed ALL_IND to LAND_INDS to make qf(AEZ) for nonland exogen!
Equation AEZDEMAND
# demand for inputs into value-added-energy subproduction #
(all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("land0",j,r)
        - ESAEZ(j) * [pf(i,j,r) - af(i,j,r) - pf("land0",j,r)];

!FARZAD: CRP: END!

!FARZAD: I added the new nest here to combine land and pasturcrop!
!< Start CRP - Pasturecrop and Pasturecover nest  >!

Set
    PSTUR_COMM # inputs into Pasturecrop-cover subproduction #
                                          (land0, pasturecrop);
Subset
    PSTUR_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("land",j,r) = sum(i,PSTUR_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("land",j,r) = VFAS("land",j,r);

Coefficient
    SIZE_PSTUR # size of PSTUR_COMM set #;
Formula
    SIZE_PSTUR = sum(i,PSTUR_COMM, 1);

Coefficient (all,i,PSTUR_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHPSTUR(i,j,r) #share of i in cost to j of pasturecrop-cover subproduct #;
Formula (all,i,PSTUR_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("land",j,r) = 0)
    CSHPSTUR(i,j,r) = 1.0 / SIZE_PSTUR;
Formula (all,i,PSTUR_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("land",j,r) > 0)
    CSHPSTUR(i,j,r) = VFA(i,j,r) / VFAS("land",j,r);

Equation PSTURPRICE # price of pasturecrop-cover subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("land",j,r)
        = sum(k,PSTUR_COMM, CSHPSTUR(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    EPSTUR(j,r) # elast of substitution in pasturecrop-cover subproduction #;
Read
    EPSTUR from file GTAPPARM header "EPSR";

Equation PSTURDEMAND #demand for inputs into pasturecrop-cover subproduction #
(all,i,PSTUR_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r)= -af(i,j,r) + qf("land",j,r)
        - EPSTUR(j,r) * [pf(i,j,r) - af(i,j,r) - pf("land",j,r)];

!< End CRP >Farzad!

!<Oils nest>!

Set
    Vol_COMM # inputs into energy subproduction # 
    (Vol_Soy1,Vol_Palm1,Vol_Rape1,Vol_Oth1);
Subset
    Vol_COMM is subset of FIRM_COMM;

Coefficient
    SIZE_VOL # size of Vol_COMM set #;
Formula
    SIZE_VOL = sum(i,Vol_COMM, 1);

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("vol",j,r) = sum(i,Vol_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("vol",j,r) = VFAS("vol",j,r);

Coefficient (all,i,Vol_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHVOL(i,j,r) # share of i in cost to j of veg. oil subproduct #;
Formula (all,i,Vol_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("vol",j,r) = 0)
    CSHVOL(i,j,r) = 1.0 / SIZE_ENY;
Formula (all,i,Vol_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("vol",j,r) > 0)
    CSHVOL(i,j,r) = VFA(i,j,r) / VFAS("vol",j,r);

Equation PRICE # price of veg. oil subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("vol",j,r) = sum(k,VOL_COMM, CSHVOL(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ELVOL(j,r) # elasticity of substitution in veg. oils subproduction #;
Read
    ELVOL from file GTAPPARM header "ELVL";

Equation VOLDEMAND # demand for inputs into veg. oils subproduction #
(all,i,VOL_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("vol",j,r)
        - ELVOL(j,r) * [pf(i,j,r) - af(i,j,r) - pf("vol",j,r)];


!<
    3-9b. Value-Added-Energy Nest
    ----------------------------
>!

Set
    VAEN_COMM # inputs into value-added-energy subproduction #
    (land, UnSkLab, SkLab, natres, ken);
Subset
    VAEN_COMM is subset of FIRM_COMM;

Formula (all,j,ALL_INDS)(all,r,REG)
    VFAS("vaen",j,r) = sum(i,VAEN_COMM, VFA(i,j,r));
Formula (all,j,ALL_INDS)(all,r,REG)
    VFA("vaen",j,r) = VFAS("vaen",j,r);

Coefficient
    SIZE_VAEN # size of VAEN_COMM set #;
Formula
    SIZE_VAEN = sum(i,VAEN_COMM, 1);

Coefficient (all,i,VAEN_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHVAEN(i,j,r)
    # share of i in cost to j of value-added-energy subproduct #;
Formula (all,i,VAEN_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("vaen",j,r) = 0)
    CSHVAEN(i,j,r) = 1.0 / SIZE_VAEN;
Formula (all,i,VAEN_COMM)(all,j,ALL_INDS)(all,r,REG: VFAS("vaen",j,r) > 0)
    CSHVAEN(i,j,r) = VFA(i,j,r) / VFAS("vaen",j,r);

Equation VAENPRICE # price of value-added-energy subproduct #
(all,j,ALL_INDS)(all,r,REG)
    pf("vaen",j,r)
        = sum(k,VAEN_COMM, CSHVAEN(k,j,r) * [pf(k,j,r) - af(k,j,r)]);

!SSA Yield Stuff!


ZERODIVIDE (ZERO_BY_ZERO) DEFAULT 0 ;
ZERODIVIDE DEFAULT 1 ;

Coefficient (all,j,ALL_INDS)(all,r,reg)
    TOTALC(j,r);
Formula (all,j,ALL_INDS)(all,r,reg)
    TOTALC(j,r) = 
            sum(i, demd_comm,(VFA(i,j,r)));
Coefficient (all,j,ALL_INDS)(all,r,reg)
    LANDCOST(j,r);
Formula (all,j,ALL_INDS)(all,r,reg)
    LANDCOST(j,r) = 
            sum(a, AEZ_COMM,(VFA(a,j,r)));

Coefficient(all,j,ALL_INDS)(all,r,reg)
    THETAi(j,r) #Endowment's cost share in value-added#;
Formula(all,j,ALL_INDS)(all,r,reg)
    THETAi(j,r) = LANDCOST(j,r)/TOTALC(j,r);

Coefficient (parameter)(all,j,ALL_INDS)(all,r,REG)
    YDONOFF(j,r) #Turn off the yield calibrated ESUBVA's by setting to zero#;
Read YDONOFF from file GTAPPARM header "YD01";

Coefficient (parameter)(all,r,REG)
    YDREGSCALE(r) #Scale up or down the target yield elast for a region#;
Read YDREGSCALE from file GTAPPARM header "YDRS";

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    YDE_Target(j,r) #Scalar yield elasticity target, read from PARM for SSA#;
Read YDE_Target from file GTAPPARY header "YDEL";


Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ESUBVA1(j,r)
    # elasticity of substitution in value-added-energy subproduction #;
Read
    ESUBVA1 from file GTAPPARM header "ESBV";


! CRP - nonzero default changed from 0 to 1 !
zerodivide (nonzero_by_zero) default 1;
zerodivide (zero_by_zero) default 0;

Coefficient (parameter) (all,j,ALL_INDS)(all,r,REG)
    ESUBVA(j,r)
    # elasticity of substitution in value-added-energy subproduction #;
Formula(initial) (all,j,ALL_INDS)(all,r,REG)
    ESUBVA(j,r) = if(THETAi(j,r)*YDONOFF(j,r) le 0, ESUBVA1(j,r))
                + if(THETAi(j,r)*YDONOFF(j,r) gt 0,
                     YDREGSCALE(r)*YDE_Target(j,r)/
                                        [(1/THETAi(j,r))-1]);

zerodivide (zero_by_zero) off;
zerodivide (nonzero_by_zero) off;


!SSA Yield Stuff!


Equation VAENDEMAND
# demand for inputs into value-added-energy subproduction #
(all,i,VAEN_COMM)(all,j,ALL_INDS)(all,r,REG)
    qf(i,j,r) = -af(i,j,r) + qf("vaen",j,r)
        - ESUBVA(j,r) * [pf(i,j,r) - af(i,j,r) - pf("vaen",j,r)];


!<
    3-10. Top of the Production Structure
    -------------------------------------
>!


! By-products: change the top level commodities, add feed !
!SOYF: added Vol_Soy1 and Vol_Oth1 into the top_comm !
!<<added Miscanthus,Switchgrass,Stover to the top_comm!
Set
    TOP_COMM # inputs into top of production structure #
    (vaen,Miscanthus,Switchgrass,Poplar,Camelina,Carinata, Forestry, 
    Bev_Sug, Proc_Rice,Proc_Food,NTrdServices,OthPrimSect, en_int_ind, oth_ind_se,
     vol,feed);

Subset
    TOP_COMM is subset of FIRM_COMM;

!Farzad added in 2015 to take care of energy content of blend!
!<<added new biofuels into blender!
Set
    BLEND_COMM # Inputs into blend #
    (Oil_Pcts, ethanol1, ethanol2, ethanol3, biod_Soy, Biod_Palm, Biod_Rape,
     Biod_Oth,GRNATJ_J,GRNETJ_J,SUGATJ_J,SUGETJ_J,SUGSIP_J,SOYHRJ,RAPHRJ,PLMHRJ,CAMHRJ_J,
    CRNHRJ_J,MSCFTJ,SWGFTJ,POPFTJ,MSCATJ,SWGATJ);

Subset
    BLEND_COMM is subset of TRAD_COMM;

VARIABLE (LEVELS) (all,i,BLEND_COMM)(all,r,REG)
    BIOOIL0(i,r)
    # volume of biofuels usage in Quad Btu LHV #;
Read
    BIOOIL0 from file GTAPDATA header "BOI0";
!
COEFFICIENT  (all,i,BLEND_COMM)(all,r,REG) 
TOTUSE0(i,r)  # total use of fuels in blend #;
FORMULA 
(all,i,BLEND_COMM)(all,r,REG)
    TOTUSE0(i,r) = 
    VIFM(i,"Blender",r) + VDFM(i,"Blender",r); 
Equation E_BIOUSE0
(all,i,BLEND_COMM)(all,r,REG)
    TOTUSE0(i,r) * biooiluse0(i,r) = VIFM(i,"Blender",r) * qfm(i,"Blender",r)+
                                     VDFM(i,"Blender",r) * qfd(i,"Blender",r);
!
Zerodivide (zero_by_zero) default 0;
coefficient(all,i,BLEND_COMM)(all,r,REG) 
TOTUSE0SHR1(i,r);
coefficient(all,i,BLEND_COMM)(all,r,REG) 
TOTUSE0SHR2(i,r);
FORMULA (all,i,BLEND_COMM)(all,r,REG) 
TOTUSE0SHR1(i,r)=VIFM(i,"Blender",r)/[VIFM(i,"Blender",r) + VDFM(i,"Blender",r)];
FORMULA (all,i,BLEND_COMM)(all,r,REG) 
TOTUSE0SHR2(i,r)=VDFM(i,"Blender",r)/[VIFM(i,"Blender",r) + VDFM(i,"Blender",r)];
Zerodivide (zero_by_zero) off;
Variable (all,i,BLEND_COMM)(all,r,REG)
    biooiluse0(i,r)
    # change in volume of biooils usage #;
Equation E_BIOUSE0
(all,i,BLEND_COMM)(all,r,REG)
     biooiluse0(i,r) = TOTUSE0SHR1(i,r) * qfm(i,"Blender",r)+
                                     TOTUSE0SHR2(i,r) * qfd(i,"Blender",r);
Equation E_BIOOIL0
(all,i,BLEND_COMM)(all,r,REG)
    p_BIOOIL0(i,r) = biooiluse0(i,r);

Coefficient (parameter) (all,i,BLEND_COMM)
GASOLINEQ (i) # 1/0.67 for ethanol and 1 for the rest read from PARM file#;
Read GASOLINEQ from file GTAPPARM header "GASO";

Coefficient (parameter)
    ECONOFF #Turn on & off energy content impact: 1=on 0=off#;
Read ECONOFF from file GTAPPARM header "EC01";

Variable (LEVELS, Change) (all,r,REG)
    SHREFF(r)
    # share of energy content over volumetirc in total liquid fuels #;
!<<question here ? why use GASOLINEQ!
Formula & Equation (LEVELS) E_SHREFF (all,r,REG)
    SHREFF(r) = 
 sum(i,BLEND_COMM, BIOOIL0(i,r))/sum(i,BLEND_COMM, BIOOIL0(i,r)*GASOLINEQ(i));

Variable (all,j,ALL_INDS)(all,r,REG)
    aoblend(j,r)
    # change in productivity of blend #;

Equation AOBELND0 (all,j,NBL_INDS)(all,r,REG)
    aoblend(j,r) = 0;

Equation AOBELND1 (all,j,BLENDER_INDS)(all,r,REG)
    aoblend(j,r) = ECONOFF*100*c_SHREFF(r);
!End Farzad modification!

Variable (all,j,ALL_INDS)(all,r,REG)
    ao(j,r) # output augmenting technical change in sector j of r #;
Variable (all,j,ALL_INDS)
    aosec(j) # output augmenting tech change of sector j, worldwide #;
Variable (all,r,REG)
    aoreg(r) # output augmetning tech change in region r #;
Variable (all,j,ALL_INDS)(all,r,REG)
    aoall(j,r) # output augmenting technical change in sector j of r #;
Equation AOWORLD
# sector/region specific average rate of output augmenting tech change #
(all,j,ALL_INDS)(all,r,REG)
    ao(j,r) = aosec(j) + aoreg(r) + aoall(j,r)+aoblend(j,r);

! SSA yield stuff !

Coefficient (Parameter)(all,j,ALL_INDS)
    ESUBT1(j) # elasticity of substitution at top of production structure #;
Read
    ESUBT1 from file GTAPPARM header "ESBT";
Coefficient (Parameter)(all,j,ALL_INDS)(all,r,REG)
    ESUBT(j,r);
Formula(Initial) (all,j,ALL_INDS)(all,r,REG)
    ESUBT(j,r) = if(YDONOFF(j,r) le 0, ESUBT1(j))
                    +if(YDONOFF(j,r) gt 0, ESUBVA(j,r));

! end SSA yield stuff !

Variable (all,j,ALL_INDS)(all,r,REG)
    profitslack(j,r) # slack variable in the zero profit equation #;
!<
    This is exogenous, unless the user wishes to specify output in a given
    region exogenously.
>!

Coefficient (all,j,ALL_INDS)(all,r,REG)
    VFATOT(j,r) # total cost of inputs into j in r #;
Formula (all,j,ALL_INDS)(all,r,REG)
    VFATOT(j,r) = sum(i,TOP_COMM, VFA(i,j,r));

Coefficient
    SIZE_TOP # size of TOP_COMM set #;
Formula
    SIZE_TOP = sum(i,TOP_COMM, 1);

Coefficient (all,i,TOP_COMM)(all,j,ALL_INDS)(all,r,REG)
    CSHTOP(i,j,r) # share of i in total costs of j in r #;
Formula (all,i,TOP_COMM)(all,j,ALL_INDS)(all,r,REG: VFATOT(j,r) = 0.0)
    CSHTOP(i,j,r) = 1.0 / SIZE_TOP;
Formula (all,i,TOP_COMM)(all,j,ALL_INDS)(all,r,REG: VFATOT(j,r) > 0.0)
    CSHTOP(i,j,r) = VFA(i,j,r) / VFATOT(j,r);

! By-products: modify zero profits for multiproduct sectors. !

!<
    Industry zero pure profits condition (HT 6).  This condition permits us to
    determine the endogenous output level for each of the non-endowment
    sectors, excepting when profitslack is itself endogenous.  The level of
    activity in the endowment sectors is exogenously determined.
>!

Equation ZEROPROFITS1 # industry zero pure profits condition #
(all,j,NETBD_INDS)(all,r,REG)
    ps(j,r) + ao(j,r)
        = sum(i,TOP_COMM, CSHTOP(i,j,r) * [pf(i,j,r) - af(i,j,r)])
            + profitslack(j,r);

Variable (all,j,ETBD_INDS)(all,r,REG)
     pz(j,r) # ETBD_INDS price in region r #;

!SOYF modified the followig for vol_soy and vol_oth!
!<< add new coproducts!
!------------------------------------------------------------------------------!
Equation pzprice # aggregate price for ethanol industry #
(all,j,ETBD_INDS)(all,r,REG)
     pz(j,r)=SELECT(j,"EthanolC")*sum(k,ETHA_COMM,REVSHARE(k,r)*ps(k,r))+
             SELECT(j,"EthanolS")*sum(k,ETHAS_COMM,REVSHARS(k,r)*ps(k,r))+
             SELECT(j,"Vol_Soy")*sum(k,BIOD_COMM,REVSHARB(k,r)*ps(k,r))+
             SELECT(j,"Vol_Palm")*sum(k,BIOP_COMM,REVSHARP(k,r)*ps(k,r))+
             SELECT(j,"Vol_Rape")*sum(k,BIOR_COMM,REVSHARR(k,r)*ps(k,r))+
             SELECT(j,"Vol_Oth")*sum(k,BIOC_COMM,REVSHARC(k,r)*ps(k,r))+
             SELECT(j,"GRNATJ")*sum(k,GRNATJ_COMM,REVSHARJ1(k,r)*ps(k,r))+
             SELECT(j,"GRNETJ")*sum(k,GRNETJ_COMM,REVSHARJ5(k,r)*ps(k,r))+
             SELECT(j,"SUGATJ")*sum(k,SUGATJ_COMM,REVSHARJ2(k,r)*ps(k,r))+
             SELECT(j,"SUGETJ")*sum(k,SUGETJ_COMM,REVSHARJ7(k,r)*ps(k,r))+
             SELECT(j,"SUGSIP")*sum(k,SUGSIP_COMM,REVSHARJ3(k,r)*ps(k,r))+
             SELECT(j,"CAMHRJ")*sum(k,CAMHRJ_COMM,REVSHARJ4(k,r)*ps(k,r))+
             SELECT(j,"CRNHRJ")*sum(k,CRNHRJ_COMM,REVSHARJ6(k,r)*ps(k,r));

  
Variable (orig_level=VOMZ)(all,j,ETBD_INDS)(all,r,REG)
    qz(j,r) # ETBD_INDS output level in region r #;   

! TH: update revenue shares !

Equation E_revshare # update equation for revenue shares  #
(all,k,ETHA_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
                        - [pz("EthanolC",r) + qz("EthanolC",r)];
 
 
Equation E_revshars # update equation for revenue shares  #
(all,k,ETHAS_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
                        - [pz("EthanolS",r) + qz("EthanolS",r)];
 
!SOYF: modified the following!
Equation E_revsharb # update equation for revenue shares  #
(all,k,BIOD_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("Vol_Soy",r) + qz("Vol_Soy",r)] ;
 
!SOYF: Added th efollowing!
Equation E_revsharp # update equation for revenue shares  #
(all,k,BIOP_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("Vol_Palm",r) + qz("Vol_Palm",r)] ;
 
!SOYF: Added th efollowing!
Equation E_revsharr # update equation for revenue shares  #
(all,k,BIOR_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("Vol_Rape",r) + qz("Vol_Rape",r)] ;
 
!SOYF: Added th efollowing!
Equation E_revsharc # update equation for revenue shares  #
(all,k,BIOC_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("Vol_Oth",r) + qz("Vol_Oth",r)] ;

!<< begin:added the following!
Equation E_REVSHARJ1 # update equation for revenue shares  #
(all,k,GRNATJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("GRNATJ",r) + qz("GRNATJ",r)] ;

Equation E_REVSHARJ5 # update equation for revenue shares  #
(all,k,GRNETJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("GRNETJ",r) + qz("GRNETJ",r)] ; 

Equation E_REVSHARJ2 # update equation for revenue shares  #
(all,k,SUGATJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("SUGATJ",r) + qz("SUGATJ",r)] ;

Equation E_REVSHARJ7 # update equation for revenue shares  #
(all,k,SUGETJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("SUGETJ",r) + qz("SUGETJ",r)] ;


 Equation E_REVSHARJ3 # update equation for revenue shares  #
(all,k,SUGSIP_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("SUGSIP",r) + qz("SUGSIP",r)] ;

Equation E_REVSHARJ4 # update equation for revenue shares  #
(all,k,CAMHRJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("CAMHRJ",r) + qz("CAMHRJ",r)] ;

Equation E_REVSHARJ6 # update equation for revenue shares  #
(all,k,CRNHRJ_COMM)(all,r,REG)
     updtrevshare(k,r) = [ps(k,r) + qo(k,r)]
    - [pz("CRNHRJ",r) + qz("CRNHRJ",r)] ;
!<<end!


 
Equation ZEROPROFITS2 # industry zero pure profits condition #
(all,j,ETBD_INDS)(all,r,REG)
     pz(j,r)+ ao(j,r)
        = sum(i,TOP_COMM, CSHTOP(i,j,r) * [pf(i,j,r) - af(i,j,r)])
            + profitslack(j,r);

COEFFICIENT (parameter) (all,j,ETBD_INDS) ETRAETBD(j)
 # elasticity of transformation among outputs #;
Read
    ETRAETBD from file GTAPPARM header "ETBD";
 
 
Variable (all,i,ETHA_COMM)(all,r,REG)
    ethslack(i,r) # ETHA_COMM slack variable #;
 
Variable (all,i,ETHAS_COMM)(all,r,REG)
    ethsslack(i,r) # ETHAS_COMM slack variable #;
 
!SOYF: Made a change in the name of following variable!
Variable (all,i,BIOD_COMM)(all,r,REG)
    biodsslack(i,r) # BIOD_COMM slack variable #;
 
!SOYF: added the following variable!
Variable (all,i,BIOP_COMM)(all,r,REG)
    biodpslack(i,r) # BIOP_COMM slack variable #;
 
!SOYF: added the following variable!
Variable (all,i,BIOR_COMM)(all,r,REG)
    biodrslack(i,r) # BIOR_COMM slack variable #;
 
!SOYF: added the following variable!
Variable (all,i,BIOC_COMM)(all,r,REG)
    biodoslack(i,r) # BIOC_COMM slack variable #;

!<<added slacks!
Variable (all,i,GRNATJ_COMM)(all,r,REG)
    biojrslack(i,r) # GRNATJ_COMM slack variable #;
Variable (all,i,SUGATJ_COMM)(all,r,REG)
    biojpslack(i,r) # SUGATJ_COMM slack variable #;
Variable (all,i,GRNETJ_COMM)(all,r,REG)
    biojrslack1(i,r) # GRNETJ_COMM slack variable #;
Variable (all,i,SUGETJ_COMM)(all,r,REG)
    biojpslack1(i,r) # SUGETJ_COMM slack variable #;
Variable (all,i,SUGSIP_COMM)(all,r,REG)
    biojsslack(i,r) # SUGSIP_COMM slack variable #;

Variable (all,i,CAMHRJ_COMM)(all,r,REG)
    biodmslack(i,r) # MSCFTJ_COMM slack variable #;
Variable (all,i,CRNHRJ_COMM)(all,r,REG)
    biojgslack(i,r) # POPFTJ_COMM slack variable #;

Equation qoethacomme
# production of ethanol1 and ddgs #
(all,i,ETHA_COMM)(all,r,REG)
qo(i,r)=qz("EthanolC",r)+ETRAETBD("EthanolC")*(pz("EthanolC",r)-ps(i,r))
        + ethslack(i,r);
 
Equation qoethacomms
# production of ethanol3 and ddgss #
(all,i,ETHAS_COMM)(all,r,REG)
qo(i,r)=qz("EthanolS",r)+ETRAETBD("EthanolS")*(pz("EthanolS",r)-ps(i,r))
        + ethsslack(i,r);
 
!SOYF: modified the following!
Equation qoethacommb
# production of Vol_soy and VOBPS #
(all,i,BIOD_COMM)(all,r,REG)
qo(i,r)=qz("Vol_Soy",r)+ETRAETBD("Vol_Soy")*(pz("Vol_Soy",r)-ps(i,r))
        + biodsslack(i,r);
 
!SOYF: added the following!
Equation qoethacommp
# production of Vol_Palm and VOBPP #
(all,i,BIOP_COMM)(all,r,REG)
qo(i,r)=qz("Vol_Palm",r)+ETRAETBD("Vol_Palm")*(pz("Vol_Palm",r)-ps(i,r))
        + biodpslack(i,r);
 
!SOYF: added the following!
Equation qoethacommr
# production of Vol_Rape and VOBPR #
(all,i,BIOR_COMM)(all,r,REG)
qo(i,r)=qz("Vol_Rape",r)+ETRAETBD("Vol_Rape")*(pz("Vol_Rape",r)-ps(i,r))
        + biodrslack(i,r);
 
!SOYF: added the following!
Equation qoethacommc
# production of Vol_oth and VOBPO #
(all,i,BIOC_COMM)(all,r,REG)
qo(i,r)=qz("Vol_Oth",r)+ETRAETBD("Vol_Oth")*(pz("Vol_Oth",r)-ps(i,r))
        + biodoslack(i,r);


!<<added new coproducts!
Equation qoethacommjr
# production of GRNATJ_J,GRNATJ_M #
(all,i,GRNATJ_COMM)(all,r,REG)
qo(i,r)=qz("GRNATJ",r)+ETRAETBD("GRNATJ")*(pz("GRNATJ",r)-ps(i,r))
        + biojrslack(i,r);

Equation qoethacommjr1
# production of GRNETJ_J,GRNETJ_M #
(all,i,GRNETJ_COMM)(all,r,REG)
qo(i,r)=qz("GRNETJ",r)+ETRAETBD("GRNETJ")*(pz("GRNETJ",r)-ps(i,r))
        + biojrslack1(i,r);

Equation qoethacommjp
# production of SUGATJ_J,SUGATJ_N #
(all,i,SUGATJ_COMM)(all,r,REG)
qo(i,r)=qz("SUGATJ",r)+ETRAETBD("SUGATJ")*(pz("SUGATJ",r)-ps(i,r))
        + biojpslack(i,r);

Equation qoethacommjp1
# production of SUGETJ_J,SUGETJ_M #
(all,i,SUGETJ_COMM)(all,r,REG)
qo(i,r)=qz("SUGETJ",r)+ETRAETBD("SUGETJ")*(pz("SUGETJ",r)-ps(i,r))
        + biojpslack1(i,r);

Equation qoethacommjs
# production of SUGSIP_J,SUGSIP_N #
(all,i,SUGSIP_COMM)(all,r,REG)
qo(i,r)=qz("SUGSIP",r)+ETRAETBD("SUGSIP")*(pz("SUGSIP",r)-ps(i,r))
        + biojsslack(i,r);

Equation qoethacommdm
# production of CAMHRJ_J,CAMHRJ_M #
(all,i,CAMHRJ_COMM)(all,r,REG)
qo(i,r)=qz("CAMHRJ",r)+ETRAETBD("CAMHRJ")*(pz("CAMHRJ",r)-ps(i,r))
        + biodmslack(i,r);


Equation qoethacommjg
# production of CRNHRJ_J,CRNHRJ_M #
(all,i,CRNHRJ_COMM)(all,r,REG)
qo(i,r)=qz("CRNHRJ",r)+ETRAETBD("CRNHRJ")*(pz("CRNHRJ",r)-ps(i,r))
        + biojgslack(i,r);
!<<end!

 
Equation TOPDEMAND1
# sector demands for factor-energy subproduct and intermediate inputs #
(all,i,TOP_COMM)(all,j,NETBD_INDS)(all,r,REG)
    qf(i,j,r)= -af(i,j,r) + qo(j,r) - ao(j,r)
        - ESUBT(j,r) * [pf(i,j,r) - af(i,j,r) - ps(j,r) - ao(j,r)];
 
Equation TOPDEMAND2
# sector demands for factor-energy subproduct and intermediate inputs #
(all,i,TOP_COMM)(all,j,ETBD_INDS)(all,r,REG)
    qf(i,j,r)= -af(i,j,r) + qz(j,r) - ao(j,r)
        - ESUBT(j,r) * [pf(i,j,r) - af(i,j,r)- pz(j,r) - ao(j,r)];
 
! By-products: multiproduct modifications end here !
 
!<
    3-11. Output Taxation
    ---------------------
>!

! Farzad 2015: BIOFUELS: Separate out the biofuels component of this to permit  
    implementation of a RFS by using a subsidy on output of biofuels !

Equation OUTPUTPRICES
# Eq'n links pre- and post-tax supply prices for all inductries (HT 15) #
(all,i,PROD_COMM)(all,r,REG)
    ps(i,r) = to(i,r) + pm(i,r);

!<
    This equation links pre- and post-tax supply prices for all industries.
    This captures the effect of output taxes.  TO(i,r) < 1 in the case of a
    tax.  (HT 15)
>!

Variable (change) (all,r,REG)
    del_taxroutnbio(r) # change in ratio output tax on nonbiooil to INCOME #;
Variable (change) (all,r,REG)
    del_taxroutbio(r) # change in ratio output tax on biooil to INCOME #;

Equation TOUTRATIONBIO
# change in ratio of output tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxroutnbio(r) + TOUTNBIO(r) * y(r)
        = sum(i,NBIOOIL_COMM,
            VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]); 

Equation TOUTRATIOBIO
# change in ratio of output tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxroutbio(r) + TOUTBIO(r) * y(r)
        = sum(i,BIOOIL_COMM,
            VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]); 

Equation TOUTRATIO
# change in ratio of private consumption tax payments to regional income #
(all,r,REG)
    del_taxrout(r) 
        = del_taxroutnbio(r) + del_taxroutbio(r);

 ! Farzad 2015: BIOFUELS end !

!<
    ---------------------------------------
    4. Investment, Global Bank, and Savings
    ---------------------------------------

    Capital stock and rate of return equations follow.  They correspond to the
    Investment Equations of Table 8 in Hertel and Tsigas.

    4-0. Module-Specific Variables
    4-1. Equations of Notational Convenience
    4-2. Rate of Return Equations
    4-3. Capital Accumulation
    4-4. Global Bank
    4-5. Price Index of Aggregate Global Composite Capital Goods
    4-6. Price of Saving
>!


!<
    4-0. Module-Specific Variables
    ------------------------------

    only used in this Investment, Global Bank and Savings module
>!

Variable (all,r,REG)
    rental(r) # rental rate on capital = ps("capital",r) #;
Variable (all,r,REG)
    ke(r) # end-of-period capital stock in r #;
Variable (all,r,REG)
    rore(r) # expected net rate of return on capital stock in r #;
Variable (all,r,REG)
    rorc(r) # current net rate of return on capital stock in r #;
Variable (all,r,REG)
    qcgds(r) # output of capital goods sector = qo("cgds",r) #;


!<
    4-1. Equations of Notational Convenience
    ----------------------------------------
>!

Variable (all,r,REG)
    ksvces(r) # capital services = qo("capital",r) #;
Equation KAPSVCES
# eq'n defines a variable for capital services (HT 52) #
(all,r,REG)
    ksvces(r)
        = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * qo(h,r));
!<
    This equation defines a variable for capital services, for convenience.
    (There is really only one capital services item.) (HT 52)
>!

Equation KAPRENTAL
# eq'n defines a variable for capital rental rate (HT 53) #
(all,r,REG)
    rental(r)
        = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * ps(h,r));

Equation CAPGOODS
# eq'n defines a variable for gross investment (HT 54) #
(all,r,REG)
    qcgds(r)
        = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * qo(h,r));
!<
    This equation defines a variable for gross investment, for convenience.
    There is really only one capital goods item.
>!

Equation PRCGOODS
# eq'n defines the price of cgds (HT 55) #
(all,r,REG)
    pcgds(r) = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * ps(h,r));

Equation KBEGINNING
# associates change in cap. services w/ change in cap. stock (HT 56) #
(all,r,REG)
    kb(r) = ksvces(r);
!<
    This equation associates any change in capital services during the period
    with a change in capital stock.  Full capacity utilization is assumed.
>!

Coefficient (ge 0)(all,r,REG)
    VKB(r) # value of beginning-of-period capital stock in region r #;
Update (all,r,REG)
    VKB(r) = pcgds(r) * kb(r);
Read
    VKB from file GTAPDATA header "VKB";
!<
    VKB(r) is used only in this sub-module, so its data are read here.  The
    associated variables, pcgds(r) and kb(r), are used across modules, so they
    have been defined as common variables.
>!

Coefficient (all,r,REG)
    INVKERATIO(r)
    # ratio of gross investment to end-of-period capital stock in r #;
Formula (all,r,REG)
    INVKERATIO(r) = REGINV(r) / [VKB(r) + NETINV(r)];

Equation KEND
# Ending capital stock equals beginning stock plus net investment.  (HT 10) #
(all,r,REG)
    ke(r) = INVKERATIO(r) * qcgds(r) + [1.0 - INVKERATIO(r)] * kb(r);


!<
    4-2. Rate of Return Equations
    -----------------------------
>!

Coefficient (all,r,REG)
    GRNETRATIO(r) # ratio of GROSS/NET rates of return on capital in r #;
Formula (all,r,REG)
    GRNETRATIO(r)
        = sum(h,ENDWC_COMM, VOA(h,r))
        / [sum(h,ENDWC_COMM, VOA(h,r)) - VDEP(r)];
!<
    NOTE: VOA("capital",r) is GROSS returns to capital.
>!
Equation RORCURRENT
# current rate of return on capital in region r (HT 57) #
(all,r,REG)
    rorc(r) = GRNETRATIO(r) * [rental(r) - pcgds(r)];

Coefficient (parameter)(all,r,REG)
    RORFLEX(r)
    # flexibility of expected net ROR on capital stock in r wrt investment #;
Read
    RORFLEX from file GTAPPARM header "RFLX";
!<
    RORFLEX is the flexibility of the expected net rate of return on the
    capital stock, in region r, with respect to investment.  If a region's
    capital stock increases by 1%, then it is expected that the net rate of
    return on capital will decline by RORFLEX %.  A larger absolute value for
    this parameter will reduce the tendency of international investment flows
    to respond to changes in expected rates of return.
>!

Equation ROREXPECTED
# expected rate of return depends on the current return and investment (HT 58) #
(all,r,REG)
    rore(r) = rorc(r) - RORFLEX(r) * [ke(r) - kb(r)];


!<
    4-3. Capital Accumulation
    -------------------------

    based on the theory laid out in GTAP Technical Paper #7
>!

Variable (all,i,ENDWC_COMM)(all,r,REG)
    EXPAND(i,r) # change in investment levels relative to endowment stock #;
Equation BALDWIN
# change in investment levels relative to endowment stock #
(all,i,ENDWC_COMM)(all,r,REG)
    EXPAND(i,r) = qcgds(r) - qo(i,r);


!<
    4-4. Global Bank
    ----------------
>!

Coefficient (integer,parameter)
    RORDELTA
    # binary coefficient to switch mechanism of allocating investment funds #;
Read
    RORDELTA from file GTAPPARM header "RDLT";
!<
    RORDELTA is a binary coefficient which determines the mechanism of
    allocating investment funds across regions.  When RORDELTA = 1, investment
    funds are allocated across regions to equate the change in the expected
    rates of return (i.e., rore(r)).  When RORDELTA = 0, investment funds are
    allocated across regions to maintain the existing composition of capital
    stocks.
>!

Variable
    rorg # global net rate of return on capital stock #;
Variable (all,r,REG)
    cgdslack(r) # slack variable for qcgds(r) #;
!<
    This is exogenous, unless the user wishes to exogenously fix the level of
    gross investment in a region, in which case it can be swapped with
    cgdslack.
>!
Equation RORGLOBAL
# either gross investment or expected rate of return in region r (HT 59) #
(all,r,REG)
    RORDELTA * rore(r)
    + [1 - RORDELTA]
    * [[REGINV(r) / NETINV(r)] * qcgds(r) - [VDEP(r) / NETINV(r)] * kb(r)]
        = RORDELTA * rorg + [1 - RORDELTA] * globalcgds + cgdslack(r);
!<
    This equation determines either gross investment or the expected rate of
    return in each region, depending on the setting for the binary RORDELTA
    parameter.
>!

Equation GLOBALINV
# either expected global rate of return or global net investment (HT 11) #
    RORDELTA * globalcgds + [1 - RORDELTA] * rorg
        = RORDELTA
        * sum(r,REG,
            [REGINV(r) / GLOBINV] * qcgds(r) - [VDEP(r) / GLOBINV] * kb(r))
        + [1 - RORDELTA] * sum(r,REG, [NETINV(r) / GLOBINV] * rore(r));
!<
    This equation computes either the change in global net investment (when
    RORDELTA = 1), or the change in the expected global rate of return on
    capital (when RORDELTA = 0).
>!


!<
    4-5. Price Index of Aggregate Global Composite Capital Goods
    ------------------------------------------------------------
>!

Equation PRICGDS
# eq'n generates a price index for the aggregate global cgds composite (HT 60) #
    pcgdswld = sum(r,REG, [NETINV(r) / GLOBINV] * pcgds(r));


!<
    4-6. Price of Saving
    --------------------
>!

Variable (all,r,REG)
    psaveslack(r) # slack variable for the savings price equation #;
!<
    This is exogenous under the normal closure.  However, in order to
    replicate simulations from the GTAP book, where there was a single savings
    price, psaveslack may be swapped with psave in order to fix the latter.
    In this case, pcgdswld must be the numeraire so that each region faces the
    same price of savings.
>!

Equation SAVEPRICE
# savings price #
(all,r,REG)
    psave(r)
        = pcgds(r)
        + sum(s,REG, [[NETINV(s) - SAVE(s)] / GLOBINV] * pcgds(s))
        + psaveslack(r);
!<
    In contrast to the GTAP book, the price of savings is now region-specific
    and it changes at the same rate as the price of regional investment, plus
    an adjustment factor which accounts for the fact that savings and
    investment are not equal at the regional level.
>!


!<
    ----------------------
    5. International Trade
    ----------------------

    5-1. Export Prices
    5-2. Demand for Imports
>!


!<
    5-1. Export Prices
    ------------------
>!

Variable (all,i,TRAD_COMM)(all,r,REG)
    tx(i,r) # dest.-gen. change in subsidy on exports of i from r #;
Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    txs(i,r,s) # dest.-spec. change in subsidy on exports of i from r to s #;
!<
    The variable txs captures changes in the power of bilateral export taxes.
    However, the presence of a destination-generic export subsidy shift (tx)
    also permits the user to swap a single export tax shock with another
    target variable.  It is most naturally swapped with the variable qo to
    insulate domestic producers from the world market.
>!

Equation EXPRICES
# eq'n links agent's and world prices (HT 27) #
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pfob(i,r,s) = pm(i,r) - tx(i,r) - txs(i,r,s);

Equation TEXPRATIO
# change in ratio of export tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrexp(r) + TEX(r) * y(r)
        = sum(i,TRAD_COMM, sum(s,REG,
            VXMD(i,r,s) * [-tx(i,r) - txs(i,r,s)]
            + XTAXD(i,r,s) * [pfob(i,r,s) + qxs(i,r,s)]));


!<
    5-2. Demand for Imports
    -----------------------

    Composite Imports Nest: Table 3 of Hertel and Tsigas
>!

Variable (all,i,TRAD_COMM)(all,s,REG)
    tm(i,s) # source-gen. change in tax on imports of i into s #;
Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    tms(i,r,s) # source-spec. change in tax on imports of i from r into s #;
!<
    The variable tms captures changes in the power of bilateral import taxes.
    However, the presence of a source-generic import tariff shift (tm) also
    permits the user to swap a single import tariff shock with another target
    variable.  In particular, to insulate domestic producers from import price
    changes, it may be swapped with the relative price variable pr -- see
    below.
>!

Equation MKTPRICES
# eq'n links domestic and world prices (HT 24) #
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pms(i,r,s) = tm(i,s) + tms(i,r,s) + pcif(i,r,s);

Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    MSHRS(i,r,s) # share of imports from r in import bill of s at mkt prices #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    MSHRS(i,r,s) = VIMS(i,r,s) / sum(k,REG, VIMS(i,k,s));
Zerodivide (zero_by_zero) off;

Equation DPRICEIMP
# price for aggregate imports (HT 28) #
(all,i,TRAD_COMM)(all,s,REG)
    pim(i,s) = sum(k,REG, MSHRS(i,k,s) * [pms(i,k,s) - ams(i,k,s)]);

Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
    pr(i,r) # ratio of domestic to imported prices in r #;
Equation PRICETGT
# eq'n defines target price ratio to be attained via the variable levy (HT 25) #
(all,i,TRAD_COMM)(all,s,REG)
    pr(i,s) = pm(i,s) - pim(i,s);
!<
    This equation defines the target price ratio to be attained via the
    variable levy.  This price ratio is the ratio of domestic to average
    imported goods' price.  Note that the way this price ratio is defined, it
    includes intraregional imports as well.  In most applications, regions
    will represent groups of individual countries.  However, in the case of
    the EU, this is problematic, since recent versions of the database have
    incorporated intra-EU trade flows.  Therefore, when aggregated to the EU
    level, the composite import price includes both intra-EU and outside
    imports.  So some modification is needed to handle the EU case.
>!

Coefficient (parameter)(all,i,TRAD_COMM)
    ESUBM(i)
    # region-generic el. of sub. among imports of i in Armington structure #;
Read
    ESUBM from file GTAPPARM header "ESBM";

Equation IMPORTDEMAND
# regional demand for disaggregated imported commodities by source (HT 29)  #
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    qxs(i,r,s)
        = -ams(i,r,s) + qim(i,s)
        - ESUBM(i) * [pms(i,r,s) - ams(i,r,s) - pim(i,s)];

Equation TIMPRATIO
# change in ratio of import tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrimp(r) + TIM(r) * y(r)
        = sum(i,TRAD_COMM, sum(s,REG,
            VIMS(i,s,r) * [tm(i,r) + tms(i,s,r)]
            + MTAX(i,s,r) * [pcif(i,s,r) + qxs(i,s,r)]));


!<
    -----------------------------------
    6. International Transport Services
    -----------------------------------

    6-0. Module-Specific Variables and Coefficients
    6-1. Demand for Global Transport Services
    6-2. Supply of Transport Services
>!


!<
    6-0. Module-Specific Variables and Coefficients
    -----------------------------------------------

    only used in this International Transport Services module
>!

Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    qtmfsd(m,i,r,s) # international usage margin m on i from r to s #;
!<
    International margin usage, by Margin, Freight, Source, and Destination,
    i.e., the percent change in usage of m in transport of i from r to s.
>!
Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    atmfsd(m,i,r,s) # tech change in m's shipping of i from region r to s #;
!<
    Technical progress in shipping by Margin, Freight, Source, and
    Destination.  This is endogenous and driven by the following mode-,
    product-, source-, and destination-specific determinants.
>!
Variable (all,m,TRAD_COMM)
    atm(m) # tech change in mode m, worldwide #;
Variable (all,i,TRAD_COMM)
    atf(i) # tech change shipping of i, worldwide #;
Variable (all,r,REG)
    ats(r) # tech change shipping from region r #;
Variable (all,s,REG)
    atd(s) # tech change shipping to s #;
Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    atall(m,i,r,s) # tech change in m's shipping of i from region r to s #;
Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    ptrans(i,r,s) # cost index for international transport of i from r to s #;
!<
    average cost index for margin services used in getting i from r to s
>!
Variable (all,m,MARG_COMM)
    qtm(m) # global margin usage #;
Variable (all,m,MARG_COMM)
    pt(m) # price of composite margins services, type #;
!<
    price index for commodity m in margin services usage
>!

Coefficient (ge 0) (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTMFSD(m,i,r,s)
    # int'l margin usage, by margin, freight, source, and destination #;
Update (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTMFSD(m,i,r,s) = pt(m) * qtmfsd(m,i,r,s);
Read
    VTMFSD from file GTAPDATA header "VTWR";

Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTFSD(i,r,s) # aggregate value of svces in the shipment of i from r to s #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTFSD(i,r,s) = sum(m,MARG_COMM, VTMFSD(m,i,r,s));
!<
    In a balanced data base, (all,i,TRAD_COMM)(all,r,REG)(all,s,REG),
    VIWS(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s).
>!

Coefficient (all,m,MARG_COMM)
    VTMUSE(m) # international margin services usage, by type #;
Formula (all,m,MARG_COMM)
    VTMUSE(m) = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG, VTMFSD(m,i,r,s))));

Coefficient (all,m,MARG_COMM)
    VTMPROV(m) # international margin services provision #;
Formula (all,m,MARG_COMM)
    VTMPROV(m) = sum(r,REG, VST(m,r));
!<
    In a balanced data base, VTMPROV = VTMUSE.
>!

Coefficient (all,r,REG)
    VTRPROV(r) # international margin supply, by region #;
Formula (all,r,REG)
    VTRPROV(r) = sum(m,MARG_COMM, VST(m,r));

Coefficient
    VT # international margin supply #;
Formula
    VT = sum(m,MARG_COMM, sum(r,REG, VST(m,r)));


!<
    6-1. Demand for Global Transport Services
    -----------------------------------------
>!

Equation QTRANS_MFSD
# bilateral demand for transport services  #
(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    qtmfsd(m,i,r,s) = qxs(i,r,s) - atmfsd(m,i,r,s);
!<
    This equation computes the bilateral demand for international
    transportation services.  It reflects the fact that the demand for
    services along any particular route is proportional to the quantity of
    merchandise shipped [i.e., QXS(i,r,s)].  It is here that we introduce the
    potential for input-augmenting tech change, atmfsd(m,i,r,s), which is
    commodity- and route-specific.  Thus, in the levels:
            ATMFSD(m,i,r,s) * QTMFSD(m,i,r,s) = QXS(i,r,s)
    where QTMFSD is the amount of composite margins services m used along this
    route.  Technological improvements are reflected by atmfsd(i,r,s) > 0, and
    these reduce the margins services required for this i,r,s triplet.  Tech.
    change also dampens the cost of shipping, thereby lowering the CIF price
    implied by a given FOB value (see 6-2).
>!

Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTMUSESHR(m,i,r,s) # share of i,r,s usage in global demand for m #;
Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTMUSESHR(m,i,r,s) = VTFSD(i,r,s) / VT;
Formula
    (all,m,MARG_COMM: VTMUSE(m) <> 0.0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTMUSESHR(m,i,r,s) = VTMFSD(m,i,r,s) / VTMUSE(m);

Equation TRANS_DEMAND
# global demand for margin m #
(all,m,MARG_COMM)
    qtm(m)
        = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
          VTMUSESHR(m,i,r,s) * qtmfsd(m,i,r,s))));


!<
    6-2. Supply of Transport Services
    ---------------------------------
>!

Coefficient (all,m,MARG_COMM)(all,r,REG)
    VTSUPPSHR(m,r) # share of region r in global supply of margin m #;
Formula (all,m,MARG_COMM)(all,r,REG)
    VTSUPPSHR(m,r) = VTRPROV(r) / VT;
Formula (all,m,MARG_COMM: VTMPROV(m) <> 0.0)(all,r,REG)
    VTSUPPSHR(m,r) = VST(m,r) / VTMPROV(m);

Equation PTRANSPORT
# generate price index for composite transportation services #
(all,m,MARG_COMM)
    pt(m) = sum(r,REG, VTSUPPSHR(m,r) * pm(m,r));
!<
    This equation generates a price index for transportation services based on
    zero profits.  NOTE:
    (1) Sales to international transportation are not subject to export tax.
        This is why we base the costs to the transport sector on market prices
        of the goods sold to international transportation.
    (2) We assume that the supply shares for margin services are uniform
        across freight, source of freight, and destination.
    (cf. HT#7)
>!

Coefficient
    VTUSE # international margin services usage #;
Formula
    VTUSE
        = sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
            VTMFSD(m,i,r,s)))));

Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VTFSD_MSH(m,i,r,s) # share of margin m in cost of getting i from r to s #;
Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
        (all,s,REG: VTFSD(i,r,s) > 0.0)
    VTFSD_MSH(m,i,r,s) = VTMFSD(m,i,r,s) / VTFSD(i,r,s);
Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
        (all,s,REG: VTFSD(i,r,s) = 0.0)
    VTFSD_MSH(m,i,r,s) = VTMUSE(m) / VTUSE;

Equation TRANSCOSTINDEX
#  generates flow-specific modal average cost of transport index (cf. HT7) #
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    ptrans(i,r,s)
        = sum(m,MARG_COMM, VTFSD_MSH(m,i,r,s) * [pt(m) - atmfsd(m,i,r,s)]);

Equation TRANSTECHANGE
#  generates flow-specific average rate of technical change #
(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    atmfsd(m,i,r,s) = atm(m) + atf(i) + ats(r) + atd(s) + atall(m,i,r,s);

Equation TRANSVCES
# generate demand for regional supply of global transportation service (HT 61) #
(all,m,MARG_COMM)(all,r,REG)
    qst(m,r) = qtm(m) + [pt(m) - pm(m,r)];
!<
    This equation generates the international transport sector's derived
    demand for regional supplies of transportation services.  It reflects a
    unitary elasticity of substitution between transportation services inputs
    from different regions.
>!

Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIWSCOST(i,r,s) # value of imports calculated as total cost of imports #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    VIWSCOST(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s);

Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    FOBSHR(i,r,s) # FOB share in VIW #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    FOBSHR(i,r,s) = VXWD(i,r,s) / VIWSCOST(i,r,s);
Zerodivide (zero_by_zero) off;

Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    TRNSHR(i,r,s) # transport share in VIW #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    TRNSHR(i,r,s) = VTFSD(i,r,s) / VIWSCOST(i,r,s);
Zerodivide (zero_by_zero) off;

Equation FOBCIF
# eq'n links FOB and CIF prices for good i shipped from region r to s (HT 26') #
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    pcif(i,r,s)
       = FOBSHR(i,r,s) * pfob(i,r,s)
       + TRNSHR(i,r,s) * ptrans(i,r,s);
!<
    This equation links export and import prices for each commodity/route
    triplet.  Note that technical change is embodied in ptrans(i,r,s) which is
    now a cost index, as opposed to (HT 26') where it represented the price of
    margins services.
>!


!<
    --------------------------------
    7. International Emissions Trade (deleted)
    --------------------------------
>!



!<
    ---------------------
    8. Regional Household
    ---------------------

    8-0. Module-Specific Coefficients
    8-1. Supply of Sluggish Endowments by the Regional Household
    8-2. Carbon Dioxide Emissions
    8-3. Carbon Tax Rate
    8-4. Carbon Tax Revenue
    8-5. Computation of Regional Income
    8-6. Regional Household Demand System
    8-7. Aggregate Utility
>!


!<
    8-0. Module-Specific Coefficients
    ---------------------------------

    only used in this Regional Household module
>!

Coefficient (all,r,REG)
    XSHRPRIV(r) # private expenditure share in regional income #;
Formula (all,r,REG)
    XSHRPRIV(r) = PRIVEXP(r) / INCOME(r);

Coefficient (all,r,REG)
    XSHRGOV(r) # government expenditure share in regional income #;
Formula (all,r,REG)
    XSHRGOV(r) = GOVEXP(r) / INCOME(r);

Coefficient (all,r,REG)
    XSHRSAVE(r) # saving share in regional income #;
Formula (all,r,REG)
    XSHRSAVE(r) = SAVE(r) / INCOME(r);


Variable (all,r,REG)
    dppriv(r) # private consumption distribution parameter #;
Variable (all,r,REG)
    dpgov(r) # government consumption distribution parameter #;
Variable (all,r,REG)
    dpsave(r) # saving distribution parameter #;
Variable (all,r,REG)
    uelas(r) # elasticity of cost of utility wrt utility #;


!<
    8-1. Supply of Endowments by the Regional Household
    ---------------------------------------------------
>!
!Farzad 2015: BIOFUELS: an offsetting tax on endowments incomes is included
to take care of RFS using tax on endowments and subsidy on biofules!

Variable (all,r,REG)
    towbio(r) # tax on endowments to implement RFSS #;

!Farzad: The following should be exogenous and towbio endowgenous with RFS 
implimentation using tax on endowmwnts!
Variable (all,r,REG)
    del_taxrbioendw(r) # ratio of incoome tax plus tax credit on biofules) #;

Equation FACTORINCPRICES
# eq'n links pre- and post-tax endowment supply prices (HT 15) #
(all,i,ENDW_COMM)(all,r,REG)
    ps(i,r) = to(i,r) + towbio(r) + pm(i,r);

Coefficient (all,r,REG)
    TINC(r) # income tax payments in r #;
Formula (all,r,REG)
    TINC(r) = sum(i,ENDW_COMM, PTAX(i,r));

Equation TINCRATIO
# change in ratio of income tax payments to regional income #
(all,r,REG)
    100.0 * INCOME(r) * del_taxrinc(r) + TINC(r) * y(r)
        = sum(i,ENDW_COMM,
            VOA(i,r) * [-to(i,r)-towbio(r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);

Equation REVNUETRAL
#Revenue neutral for RFS with tax ceredit on biofeuls and tax on endowments#
(all,r,REG)
del_taxrbioendw(r)= del_taxrinc(r)+del_taxroutbio(r);

! AEZ - create default share for REVSHR since some AEZs not present in region !

Coefficient (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    REVSHR(i,j,r);
Formula (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG: VOM(i,r) = 0)
    REVSHR(i,j,r) = 1.0 / SIZE_PROD;
Formula (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG: VOM(i,r) > 0)
    REVSHR(i,j,r) = VFM(i,j,r) / sum(k,ALL_INDS, VFM(i,k,r));

Equation ENDW_PRICE
# eq'n generates the composite price for sluggish endowments (HT 50) #
(all,i,ENDWS_COMM)(all,r,REG)
    pm(i,r) = sum(k,ALL_INDS, REVSHR(i,k,r) * pmes(i,k,r));

! GTAP-AEZ: Land Supply !

! first define some additional sets !

Set
    NAEZ_COMM
    # set of non-aez endowments # = ENDW_COMM - AEZ_COMM; 
Subset
    AEZ_COMM is subset of ENDWS_COMM;
Set
    SNAEZ_COMM 
    # non-land, sluggish commodities # = ENDWS_COMM - AEZ_COMM;
! Start-End CRP 
CROP_INDS has been expanded in Sets.har to include pasturecrop (& CRPxland) !

!Farzad: Moved this to another palce  
Set
    CROP_INDS # crop commodities #
    maximum size 10 read elements from file GTAPSETS header "CROP";
Subset
    CROP_INDS is subset of TRAD_COMM;
Set
    FOREST_INDS # forestry commodities #
    maximum size 10 read elements from file GTAPSETS header "FOR";
Set
    GRAZE_INDS # ruminant grazing commodities #
    maximum size 15 read elements from file GTAPSETS header "GRAZ";
Set
    AGRLAND_INDS # land-using agr commodities # = CROP_INDS UNION GRAZE_INDS; 
Subset
    AGRLAND_INDS is subset of ALL_INDS;
Set
    NONAGRLAND # non land-using industries # = ALL_INDS - AGRLAND_INDS;
Set
    LAND_INDS # commodities produced using land # = 
    FOREST_INDS UNION AGRLAND_INDS; 
Subset
    LAND_INDS is subset of ALL_INDS;
Set
    NLAND_INDS # commodities produced NOT using land # = 
    ALL_INDS - LAND_INDS; 
Set 
    NCROP_INDS # non-crop commodities produced using land # =
    ALL_INDS - CROP_INDS;!

! Star-End CRP !

!<<Two cropland nests!
!<<Indruce two cropsets: crop1 and crop2 to
 add new nest of pasturecrop and Miscanthus!
 
Set
    CROP2_INDS # nontraditional crop commodities# 
(Pasturecrop, Miscanthus, Switchgrass, Poplar);
Subset
    CROP2_INDS is subset of CROP_INDS;
Set
    CROP1_INDS # traditional crop commodities# = CROP_INDS - CROP2_INDS;
!<<End two cropland nests!


Subset CRP_LAND is subset of CROP_INDS;
Set 
    NCRP_INDS # non-CRP land categories # = CROP_INDS - CRP_LAND;

!<<The ETRAE is revised to be across all inds, to avoid cal. errors!
Coefficient (parameter)(all,i,ENDW_COMM)(all,j,ALL_INDS)
    ETRAE(i,j)
    # elst. of transformation for sluggish primary factor endowments #;
Read
    ETRAE from file GTAPPARM header "ETRE";
!<
    ETRAE is the elasticity of transformation for sluggish primary factor
    endowments.  It is non-positive, by definition.
>!

Equation NAEZEND_SUPPLY
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,SNAEZ_COMM)(all,j,ALL_INDS)(all,r,REG)
 qoes(i,j,r) = qo(i,r) - endwslack(i,r) + ETRAE(i,j) * [pm(i,r) - pmes(i,j,r)];


!<
    Land supply is nested
>!

!<<
    Land supply nest is as follow
    -------------------------------


               Misc & Swit      All others
               Pasturecrop      
                     Crop1      Crop2     Dairy  Ruminant
                         \      /            \    /
                          \    /             \   /
                           \  /              \  /
                            \/               \ /       
                      Cropland           pasture
                         \               /  
                          \             /
                           \           /
                            \         /
                             \       /
                              \     /
                               \   /
                     Forest     cropland-pasture mix 
                          \    /
                           \  /
                            \/    

>!

!Land transformation elastcities!
Coefficient (parameter)(all,r,REG)
    ETRAEL1_1(r)
    # elst. of transformation between forest and composite of cropland-pasture#;
Read
    ETRAEL1_1 from file GTAPPARL header "ET11";

Coefficient (parameter)(all,r,REG)
    ETRAEL1_2(r)
    # elst. of transformation between cropland and pasture land #;
Read
    ETRAEL1_2 from file GTAPPARL header "ET12";

Coefficient (parameter)(all,r,REG)
    ETRAEL2(r)
    # elst. of transformation for crop land in supply tree #;
Read
    ETRAEL2 from file GTAPPARL header "ETL2";

Coefficient (parameter)
    ETRAEL3
    # elst. of transformation for crop land in supply tree #;
Read
    ETRAEL3 from file GTAPPARM header "ETL3";

!Additional price and quantitiy variables!

Variable (all,i,AEZ_COMM)(all,r,REG)
    pmland(i,r) # market price of sluggish endowment in r #;

!Notice: qoland is qo(i,r) which is already defined!

Variable (all,i,AEZ_COMM)(all,r,REG)
    pmcrps(i,r) # market price of composite cropland and pasture land#;

Variable (all,i,AEZ_COMM)(all,r,REG)
    qocrps(i,r) # supply of composite land to cropland and psture land in r #;

Variable (all,i,AEZ_COMM)(all,r,REG)
    pmcropland(i,r) # market price of sluggish endowment in r #;

Variable (all,i,AEZ_COMM)(all,r,REG)
    qocropland(i,r) # supply of sluggish endowment in r #;

Variable (all,i,AEZ_COMM)(all,r,REG)
    pmgrazland(i,r) # market price of sluggish endowment in r #;

Variable (all,i,AEZ_COMM)(all,r,REG)
    qograzland(i,r) # supply of sluggish endowment in r #;

!Notice: qoforestry is qoes(i,"forestry",r) which is already defined!
!Notice: pmforestry is pmes(i,"forestry",r) which is already defined!

!The following varibale is added to represent shift in cropland supply
Due to multiple cropping and or cultivating unused land. a new section
is added to measure this variable!

Variable (all,i,AEZ_COMM)(all,r,REG)
    afsland(i,r)
    # change in productivity of land supply#;

! the following lines are used in the land use module !
Coefficient
    SIZE_LAND # size of LAND_COMM set #;
Formula
    SIZE_LAND = sum(i,LAND_INDS, 1);
 
Coefficient (all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG)
    REVSHR1(i,j,r);
Formula (all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG: VOM(i,r) = 0)
    REVSHR1(i,j,r) = 1.0 / SIZE_LAND;
Formula (all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG: VOM(i,r) > 0)
    REVSHR1(i,j,r) = VFM(i,j,r) / sum(k,LAND_INDS, VFM(i,k,r));
 
!Determine pmcropland!
Coefficient (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS(i,r) = sum(k,CROP_INDS, VFM(i,k,r));

Coefficient
    SIZE_CROP # size of CROP_COMM set #;
Formula
    SIZE_CROP = sum(i,CROP_INDS, 1);

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    REVSHRC(i,j,r);
Formula (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG: CROPRENTS(i,r) = 0)
    REVSHRC(i,j,r) = 1.0 / SIZE_CROP;
Formula (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG: CROPRENTS(i,r) > 0)
    REVSHRC(i,j,r) = VFM(i,j,r) / sum(k,CROP_INDS, VFM(i,k,r));

Equation CROPLAND_PRICE
# eq'n generates the composite price for sluggish endowments (HT 50) #
(all,i,AEZ_COMM)(all,r,REG)
pmcropland(i,r) = sum(k,CROP_INDS, REVSHRC(i,k,r)*pmes(i,k,r));
!End of pmcropland!

!Deteremine pmgrazland!
Coefficient (all,i,AEZ_COMM)(all,r,REG)
    GRAZERENTS(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG)
    GRAZERENTS(i,r) = sum(k,GRAZE_INDS, VFM(i,k,r));

Coefficient
    SIZE_GRAZE # size of CROP_COMM set #;
Formula
    SIZE_GRAZE = sum(i,GRAZE_INDS, 1);

Coefficient (all,i,AEZ_COMM)(all,j,GRAZE_INDS)(all,r,REG)
    REVSHRP(i,j,r);
Formula (all,i,AEZ_COMM)(all,j,GRAZE_INDS)(all,r,REG: GRAZERENTS(i,r) = 0)
    REVSHRP(i,j,r) = 1.0 / SIZE_GRAZE;
Formula (all,i,AEZ_COMM)(all,j,GRAZE_INDS)(all,r,REG: GRAZERENTS(i,r) > 0)
    REVSHRP(i,j,r) = VFM(i,j,r) / sum(k,GRAZE_INDS, VFM(i,k,r));

Equation GRAZLAND_PRICE
# eq'n generates the composite price for sluggish endowments (HT 50) #
(all,i,AEZ_COMM)(all,r,REG)
    pmgrazland(i,r) = sum(k,GRAZE_INDS, REVSHRP(i,k,r) * pmes(i,k,r));
!End of pmgrazland!

!Determine pmcrps!
Coefficient
 SIZE_CRPS # size of pasture and cropland nest set #;
Formula
 SIZE_CRPS = 2;

Coefficient (all,i,AEZ_COMM)(all,r,REG)
REVSHRCRPS1(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) = 0)
REVSHRCRPS1(i,r) = 1.0 / SIZE_CRPS;
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) > 0)
REVSHRCRPS1(i,r)=sum(j,CROP_INDS,VFM(i,j,r))/sum(k,AGRLAND_INDS, VFM(i,k,r));

Coefficient (all,i,AEZ_COMM)(all,r,REG)
REVSHRCRPS2(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) = 0)
REVSHRCRPS2(i,r) = 1.0 / SIZE_CRPS;
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) > 0)
REVSHRCRPS2(i,r)=sum(j,GRAZE_INDS,VFM(i,j,r))/sum(k,AGRLAND_INDS, VFM(i,k,r));

Equation CRPS_PRICE
# eq'n generates the composite price for cropland and pasture land #
(all,i,AEZ_COMM)(all,r,REG)
pmcrps(i,r) = REVSHRCRPS1(i,r)*(pmcropland(i,r)-afsland(i,r))+
              REVSHRCRPS2(i,r)*pmgrazland(i,r);
!End of pmcrps!

!Determine pmland!
Coefficient
 SIZE_FCRPS # size of Forest abd  CRPS nest set #;
Formula
 SIZE_FCRPS = 2;

Coefficient (all,i,AEZ_COMM)(all,r,REG)
REVSHRFCRPS1(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) = 0)
REVSHRFCRPS1(i,r) = 1.0 / SIZE_FCRPS;
Formula (all,i,AEZ_COMM)(all,r,REG: VOM(i,r) > 0)
REVSHRFCRPS1(i,r)=sum(j,AGRLAND_INDS,VFM(i,j,r))/sum(k,LAND_INDS, VFM(i,k,r));

Coefficient (all,i,AEZ_COMM)(all,r,REG)
REVSHRFCRPS2(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG)
REVSHRFCRPS2(i,r)=1-REVSHRFCRPS1(i,r);

Equation LAND_PRICE
# eq'n generates the composite price for land #
(all,i,AEZ_COMM)(all,r,REG)
pmland(i,r)=REVSHRFCRPS1(i,r)*pmcrps(i,r)+
            REVSHRFCRPS2(i,r)*pmes(i,"forestry",r);
!End of pmland!

!Bottom of land nest!
Equation CRPS_SUPPLY
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,r,REG)
 qocrps(i,r) = qo(i,r) - endwslack(i,r) 
    + ETRAEL1_1(r) * [pmland(i,r) - pmcrps(i,r)];

Equation OTHLAND_SUPPLY
# eq'n distributes the sluggish endowments across forestry and grazing #
(all,i,AEZ_COMM)(all,j,NONAGRLAND)(all,r,REG)
 qoes(i,j,r) =qo(i,r) - endwslack(i,r)
              + ETRAEL1_1(r) * [pmland(i,r) - pmes(i,j,r)];
!End of bottom of nest!

!Middle nest of land supply tree!
Equation CROPLAND_SUPPLY
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,r,REG)
 qocropland(i,r) = qocrps(i,r) -afsland(i,r)- endwslack(i,r) + 
                   ETRAEL1_2(r) * [pmcrps(i,r) - pmcropland(i,r)+afsland(i,r)];

Equation GRAZ_SUPPLY
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,r,REG)
 qograzland(i,r) = qocrps(i,r) - endwslack(i,r) 
                   + ETRAEL1_2(r) * [pmcrps(i,r) - pmgrazland(i,r)];
!End of middle nest!

!Top of land supply tree!


Equation INDGRAZ_SUPPLY
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,j,GRAZE_INDS)(all,r,REG)
 qoes(i,j,r) = qograzland(i,r) - endwslack(i,r)
    + ETRAEL3 * [pmgrazland(i,r) - pmes(i,j,r)];


!<<Begin: Add Crop1 and Crop2 here!
!<<ETRAEL 2 5 6 were differented by reg ETRAEL4 was deleted  !
!<<be careful with afsland!

!Revenue share for crops in crop1!

Coefficient (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS1(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS1(i,r) = sum(k,CROP1_INDS, VFM(i,k,r));
Coefficient
    SIZE_CROP1 # size of CROP1_INDS set #;
Formula
    SIZE_CROP1 = sum(i,CROP1_INDS, 1);
Coefficient (all,i,AEZ_COMM)(all,j,CROP1_INDS)(all,r,REG)
    REVSHR4(i,j,r);
Formula (all,i,AEZ_COMM)(all,j,CROP1_INDS)(all,r,REG: CROPRENTS1(i,r) = 0)
    REVSHR4(i,j,r) = 1.0 / SIZE_CROP1;
Formula (all,i,AEZ_COMM)(all,j,CROP1_INDS)(all,r,REG: CROPRENTS1(i,r) > 0)
    REVSHR4(i,j,r) = VFM(i,j,r) / sum(k,CROP1_INDS, VFM(i,k,r));

!Revenue share for crops in crop2!
Coefficient (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS2(i,r);
Formula (all,i,AEZ_COMM)(all,r,REG)
    CROPRENTS2(i,r) = sum(k,CROP2_INDS, VFM(i,k,r));
Coefficient
    SIZE_CROP2 # size of CROP2_INDS set #;
Formula
    SIZE_CROP2 = sum(i,CROP2_INDS, 1);
Coefficient (all,i,AEZ_COMM)(all,j,CROP2_INDS)(all,r,REG)
    REVSHR5(i,j,r);
Zerodivide (zero_by_zero) default 0;
Formula (all,i,AEZ_COMM)(all,j,CROP2_INDS)(all,r,REG: CROPRENTS2(i,r) = 0)
    REVSHR5(i,j,r) = 1.0 / SIZE_CROP2;
Formula (all,i,AEZ_COMM)(all,j,CROP2_INDS)(all,r,REG: CROPRENTS2(i,r) > 0)
    REVSHR5(i,j,r) = VFM(i,j,r) / sum(k,CROP2_INDS, VFM(i,k,r));
Zerodivide (zero_by_zero) off;

!Introduce q and p variables for two crop nests!
Variable (all,i,AEZ_COMM)(all,r,REG)
    qocropland1(i,r) # supply of sluggish endowment in r (traditional crops)#;
Variable (all,i,AEZ_COMM)(all,r,REG)
    pmcropland1(i,r) # market price of sluggish end. in r (traditional crops)#;
Variable (all,i,AEZ_COMM)(all,r,REG)
    qocropland2(i,r) # supply of sluggish endowment in r (mis & pasturecrop)#;
Variable (all,i,AEZ_COMM)(all,r,REG)
    pmcropland2(i,r) # market price of sluggish end. in r (mis & pasturecrop)#;

!Nesting crop1 and crop2 using ETRAEL2!

Equation CROPLAND_PRICE1
#eq'n generates the composite price for CROP1_INDS#
(all,i,AEZ_COMM)(all,r,REG)
    pmcropland1(i,r) = sum(k,CROP1_INDS, REVSHR4(i,k,r) * pmes(i,k,r));
Equation CROPLAND_SUPPLY1
# eq'n distributes the slugglish endowments across CROP1 and CROP2 Industries#
(all,i,AEZ_COMM)(all,r,REG)
    qocropland1(i,r)=qocropland(i,r)+afsland(i,r) - endwslack(i,r)
                 + ETRAEL2(r) * [pmcropland(i,r) - pmcropland1(i,r)];

Equation CROPLAND_PRICE2
# eq'n generates the composite price for CROP2_INDS#
(all,i,AEZ_COMM)(all,r,REG)
    pmcropland2(i,r) = sum(k,CROP2_INDS, REVSHR5(i,k,r) * pmes(i,k,r));
Equation CROPLAND_SUPPLY2
# eq'n distributes the slugglish endowments across CROP1 and CROP2 Industries#
(all,i,AEZ_COMM)(all,r,REG)
    qocropland2(i,r)=qocropland(i,r)+afsland(i,r) - endwslack(i,r)
                 + ETRAEL2(r) * [pmcropland(i,r) - pmcropland2(i,r)];


!Nesting crop1 using ETRAEL5!				 
Coefficient (parameter)(all,r,REG)
    ETRAEL5(r)
    # elst. of transformation for crop2 land in supply tree #;
Read
    ETRAEL5 from file GTAPPARL header "ETL5";

Equation INDCROPLAND_SUPPLY1
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,j,CROP1_INDS)(all,r,REG)
 qoes(i,j,r) = qocropland1(i,r) - endwslack(i,r)
    + ETRAEL5(r) * [pmcropland1(i,r) - pmes(i,j,r)];	

!Nesting crop2 using ETRAEL6!
Coefficient (parameter)(all,r,REG)
    ETRAEL6(r)
    # elst. of transformation for crop2 land in supply tree #;
Read
    ETRAEL6 from file GTAPPARL header "ETL6";

Equation INDCROPLAND_SUPPLY2
# eq'n distributes the sluggish endowments across sectors (HT 51) #
(all,i,AEZ_COMM)(all,j,CROP2_INDS)(all,r,REG)
 qoes(i,j,r) = qocropland2(i,r) - endwslack(i,r)
    + ETRAEL6(r) * [pmcropland2(i,r) - pmes(i,j,r)];	

!<<End two cropland nests!



!<
Double Cropping: we moved from del_H=del_Cropland to l=(H/L)*h+(B/L)*b
Find shift in qocropland due to multiple cropping or cultivating unused land
>!

!The following is moved from the bottom of code to here!
Set LCOVER4_INDS # set of land cover categories # 
  maximum size 10 read elements from file GTAPSETS header "LAND";
Set UNMNGLAND # set of unmanaged land # 
  maximum size 10 read elements from file GTAPSETS header "UNMG";
Set PASTURELAND # set of pasture land # 
  maximum size 10 read elements from file GTAPSETS header "PAST";
Subset UNMNGLAND is subset of LCOVER4_INDS ;
Set LCOVER_INDS # set of land cover categories to be used in model # 
        = LCOVER4_INDS - UNMNGLAND;
Set LCOVER2_INDS # first two land cover categories # 
        = FOREST_INDS + PASTURELAND;
Subset LCOVER2_INDS is subset of LCOVER_INDS ;
Subset FOREST_INDS is subset of LCOVER_INDS;
Set ACROP_INDS # aggregated cropsland cover # = LCOVER_INDS - LCOVER2_INDS ;
Set NONGRAZ_INDS # non grazing industries # = ACROP_INDS + FOREST_INDS;
Subset NONGRAZ_INDS is subset of LCOVER_INDS;
!End  of moving sets!

!The following is moved from the bottom of code to here!
Variable (LEVELS) (all,i,AEZ_COMM)(all,j,LCOVER4_INDS)(all,r,REG)
    LANDCOVER_L(i,j,r)
    # hectares of land by AEZ, sector and region #;

Read
    LANDCOVER_L from file GTAPDATA header "COVR";

Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    HARVSTAREA_L(i,j,r)
    # cropland harvested area #;

Read
    HARVSTAREA_L from file GTAPDATA header "AREA";

Coefficient (all,i,AEZ_COMM)(all,r,REG)
    HA_LCSHR(i,r)
    # share of harvested area in total land cover #;

Zerodivide (zero_by_zero) default 1;
Zerodivide (nonzero_by_zero) default 1;

Formula  
(all,i,AEZ_COMM)(all,r,REG)
    HA_LCSHR(i,r) = sum(k,CROP_INDS, HARVSTAREA_L(i,k,r))/
                    sum(k,ACROP_INDS, LANDCOVER_L(i,k,r)) ;

Zerodivide (zero_by_zero) off ;
Zerodivide (nonzero_by_zero) off;

!End of move!

Coefficient (all,i,AEZ_COMM)(all,r,REG)
    OTHER(i,r)
    # Area if idled land or double cropping #;

Formula  
(all,i,AEZ_COMM)(all,r,REG)
    OTHER(i,r) = sum(k,ACROP_INDS, LANDCOVER_L(i,k,r))-
                 sum(k,CROP_INDS, HARVSTAREA_L(i,k,r));

Coefficient (all,i,AEZ_COMM)(all,r,REG)
    CROPLAND(i,r)
    # Area of cropland #;

Formula  
(all,i,AEZ_COMM)(all,r,REG)
    CROPLAND(i,r) = sum(k,ACROP_INDS, LANDCOVER_L(i,k,r));

Variable (all,i,AEZ_COMM)(all,r,REG)
    qother(i,r)
    # percent change in area of Iddled-failur-double cropping#;

Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
    GAMA(i,r)
    #Ratio of changes in b_hat/h_hat obtained from historical observations#;

Read 
      GAMA from file GTAPPARM header "GAMA"; 

!The following variable is moved from the bottom of the code!
Variable (all,i,AEZ_COMM)(all,r,REG)
    harvstaez(i,r)
    # change in crop harvested area within aez #;

!A neative sign is implimented on the RHS of theis equation to have a positive
shock in land supply when we have double cropping or a reduction in ideled land.
Notice that to avoid singularity a tiny value (i.e. 1) is added to CROPLAN area 
and OTHER area.!    

Equation EAFSLAND
# Equation to determine percent changes in productivity of supply of land #
(all,i,AEZ_COMM)(all,r,REG)
 (CROPLAND(i,r)+1)*afsland(i,r)=-(OTHER(i,r)+1)*qother(i,r);

!Start CRP !

Variable (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)        real_pmes(i,j,r) 
     # real return to crop land j in region r - useful to monitor CRP lands #;
Equation REAL_PMESEQ
    # Eq'n defines the real return to crop land j in region r #
    (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)  
    real_pmes(i,j,r) = pmes(i,j,r) - ppriv(r);

Variable (all,j,CRP_LAND)(all,r,REG)                          SUMqoes(j,r)
    # Total CRP type of land (Oth_Ind_Se) in region in r #;
Equation SUMqoes_EQ
    # Total CRP land in region in r - summed over AEZ #
    (all,j,CRP_LAND)(all,r,REG)
    SUMqoes(j,r) = Sum(i,AEZ_COMM:EVFA(i,j,r)>0, qoes(i,j,r));

!End CRP !



!<
    8-5. Computation of Regional Income
    -----------------------------------
>!

Coefficient (all,r,REG)
    FY(r) # primary factor income in r net of depreciation #;
Formula (all,r,REG)
    FY(r) = sum(i,ENDW_COMM, VOM(i,r)) - VDEP(r);
Variable (all,r,REG)
    fincome(r) # factor income at market prices net of depreciation #;
Equation FACTORINCOME
# factor income at market prices net of depreciation #
(all,r,REG)
    FY(r) * fincome(r)
        = sum(i,ENDW_COMM, VOM(i,r) * [pm(i,r) + qo(i,r)])
        - VDEP(r)  * [pcgds(r) + kb(r)];

Variable (change)(all,r,REG)
    del_indtaxr(r) # change in ratio of indirect taxes to INCOME in r #;
Equation DINDTAXRATIO
# change in ratio of indirect taxes to INCOME in r #
(all,r,REG)
    del_indtaxr(r)
        = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
        + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r);

Variable (change)(all,r,REG)
    del_ttaxr(r) # change in ratio of taxes to INCOME in r #;
Equation DTAXRATIO
# change in ratio of taxes to INCOME in r #
(all,r,REG)
    del_ttaxr(r)
        = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
        + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r) + del_taxrinc(r);
!<
   This variable can be swapped with the commodity- and source-generic
   consumption tax shift, tp(r), in order to generate a tax replacement
   scenario, whereby taxes remain a constant share of national income.
>!

Variable (all,r,REG)
    incomeslack(r) # slack variable in the expression for regional income #;
!<
    This is exogenous, unless the user wishes to fix regional income.
>!

Coefficient (all,r,REG)
    INDTAX(r) # indirect tax receipts in r #;
Formula (all,r,REG)
    INDTAX(r) = TPC(r) + TGC(r) + TIU(r) + TFU(r) + TOUT(r) + TEX(r) + TIM(r);

Equation REGIONALINCOME
# regional income = sum of primary factor income and indirect tax receipts #
(all,r,REG)
    INCOME(r) * y(r)
        = FY(r) * fincome(r)
        + 100.0 * INCOME(r) * del_indtaxr(r)
        + INDTAX(r) * y(r)
        + INCOME(r) * incomeslack(r);
!<
    This equation computes regional income as the sum of primary factor
    payment and indirect tax receipts.  The first term computes the change in
    endowment income, net of depreciation.  The second and third terms compute
    the change in ordinary indirect tax revenue.  The fourth term computes the
    revenues/expenditures from carbon emissions trading.  The fifth term
    computes revenue from carbon taxes.
>!


!<
    8-6. Regional Household Demand System
    -------------------------------------
>!

Variable (all,r,REG)
    dpav(r) # average distribution parameter shift, for EV calc. #;
Equation DPARAV
# average distribution parameter shift #
(all,r,REG)
    dpav(r)
        = XSHRPRIV(r) * dppriv(r)
        + XSHRGOV(r) * dpgov(r)
        + XSHRSAVE(r) * dpsave(r);

Equation UTILITELASTIC
# elasticity of cost of utility wrt utility #
(all,r,REG)
    uelas(r) = XSHRPRIV(r) * uepriv(r) - dpav(r);

Equation PRIVCONSEXP
# private consumption expenditure #
(all,r,REG)
    yp(r) - y(r) = -[uepriv(r) - uelas(r)] + dppriv(r);

Equation GOVCONSEXP
# government consumption expenditure #
(all,r,REG)
    yg(r) - y(r) = uelas(r) + dpgov(r);

Equation SAVING
# saving #
(all,r,REG)
    psave(r) + qsave(r) - y(r) = uelas(r) + dpsave(r);


!<
    8-7. Aggregate Utility
    ----------------------
>!
Equation PRICEINDEXREG
    # price index for disposition of income by regional household #
    (all,r,REG)
    p(r)
        = XSHRPRIV(r) * ppriv(r)
        + XSHRGOV(r) * pgov(r)
        + XSHRSAVE(r) * psave(r);

Variable (all,r,REG)
    au(r) # input-neutral shift in utility function #;
Variable (all,r,REG)
    dpsum(r) # sum of the distribution parameters #;

Coefficient (all,r,REG)
    DPARSUM(r) # sum of distribution parameters #;
Read
    DPARSUM from file GTAPDATA header "DPSM";
Update (all,r,REG)
    DPARSUM(r) = dpsum(r);

Coefficient (all,r,REG)
    UTILELAS(r) # elasticity of cost of utility wrt utility #;
Formula (all,r,REG)
    UTILELAS(r)
        = [UELASPRIV(r) * XSHRPRIV(r) + XSHRGOV(r) + XSHRSAVE(r)] / DPARSUM(r);

Coefficient (all,r,REG)
    DPARPRIV(r) # private consumption distribution parameter #;
Formula (all,r,REG)
    DPARPRIV(r) = UELASPRIV(r) * XSHRPRIV(r) / UTILELAS(r);

Coefficient (all,r,REG)
    DPARGOV(r) # government consumption distribution parameter #;
Formula (all,r,REG)
    DPARGOV(r) = XSHRGOV(r) / UTILELAS(r);

Coefficient (all,r,REG)
    DPARSAVE(r) # saving distribution parameter #;
Formula (all,r,REG)
    DPARSAVE(r) = XSHRSAVE(r) / UTILELAS(r);

Coefficient (all,r,REG)
    UTILPRIV(r) # utility from private consumption #;
Formula (initial)(all,r,REG)
    UTILPRIV(r) = 1.0;
Update (all,r,REG)
    UTILPRIV(r) = up(r);

Coefficient (all,r,REG)
    UTILGOV(r) # utility from government consumption #;
Formula (initial)(all,r,REG)
    UTILGOV(r) = 1.0;
Update (all,r,REG)
    UTILGOV(r) = ug(r);

Coefficient (all,r,REG)
    UTILSAVE(r) # utility from saving #;
Formula (initial)(all,r,REG)
    UTILSAVE(r) = 1.0;
Update (change) (all,r,REG)
    UTILSAVE(r) = [[qsave(r) - pop(r)] / 100] * UTILSAVE(r);

Variable (all,r,REG)
    u(r) # per capita utility from aggregate hhld expend. in region r #;
Equation UTILITY
# regional household utility #
(all,r,REG)
    u(r)
        = au(r)
        + DPARPRIV(r) * loge(UTILPRIV(r)) * dppriv(r)
        + DPARGOV(r) * loge(UTILGOV(r)) * dpgov(r)
        + DPARSAVE(r) * loge(UTILSAVE(r)) * dpsave(r)
        + [1.0 / UTILELAS(r)] * [y(r) - pop(r) - p(r)];

Equation DISTPARSUM
# sum of the distribution parameters #
(all,r,REG)
    DPARSUM(r) * dpsum(r)
        = DPARPRIV(r) * dppriv(r)
        + DPARGOV(r) * dpgov(r)
        + DPARSAVE(r) * dpsave(r);


!<
    -------------------------
    9. Equilibrium Conditions
    -------------------------

    9-1. Market Clearing Conditions
    9-2. Walras' Law
>!


!<
    9-1. Market Clearing Conditions
    -------------------------------
>!
Zerodivide (zero_by_zero) default 0;

Coefficient (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHRDFM(i,j,r) # share of dom. prod. i used by sector j in r at mkt prices #;
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHRDFM(i,j,r) = VDFM(i,j,r) / VDM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SHRDPM(i,r) # share of domestic prod. of i used by private hhlds in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    SHRDPM(i,r) = VDPM(i,r) / VDM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SHRDGM(i,r) # share of imports of i used by gov't hhlds in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    SHRDGM(i,r) = VDGM(i,r) / VDM(i,r);
Zerodivide (zero_by_zero) off;

Variable (orig_level=VDM)(all,i,TRAD_COMM)(all,r,REG)
    qds(i,r) # domestic sales of commodity i in r #;
Equation MKTCLDOM
# eq'n assures market clearing for domestic sales (HT 3) #
(all,i,TRAD_COMM)(all,r,REG)
    qds(i,r)
        = sum(j,ALL_INDS, SHRDFM(i,j,r) * qfd(i,j,r))
        + SHRDPM(i,r) * qpd(i,r)
        + SHRDGM(i,r) * qgd(i,r);

Zerodivide (zero_by_zero) default 0;

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SHRDM(i,r) # share of domestic sales of i in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    SHRDM(i,r) = VDM(i,r) / VOM(i,r);

Coefficient (all,m,MARG_COMM)(all,r,REG)
    SHRST(m,r) # share of sales of m to global transport services in r #;
Formula (all,m,MARG_COMM)(all,r,REG)
    SHRST(m,r) = VST(m,r) / VOM(m,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    SHRXMD(i,r,s) # share of export sales of i to s in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    SHRXMD(i,r,s) = VXMD(i,r,s) / VOM(i,r);


Variable (all,i,TRAD_COMM)(all,r,REG)
    tradslack(i,r) # slack variable in tradeables market clearing condition #;
!<
    This is exogenous unless the user wishes to specify the price of
    tradeables exogenously, in which case the analysis becomes partial
    equilibrium and walraslack must be exogenized.
>!

Equation MKTCLTRD_MARG
# eq'n assures market clearing for margins commodities (HT 1) #
(all,m,MARG_COMM)(all,r,REG)
    qo(m,r)
        = SHRDM(m,r) * qds(m,r)
        + SHRST(m,r) * qst(m,r)
        + sum(s,REG, SHRXMD(m,r,s) * qxs(m,r,s))
        + tradslack(m,r);
Equation MKTCLTRD_NMRG
# eq'n assures market clearing for the non-margins commodities (HT 1) #
(all,i,NMRG_COMM)(all,r,REG)
    qo(i,r)
        = SHRDM(i,r) * qds(i,r)
        + sum(s,REG, SHRXMD(i,r,s) * qxs(i,r,s))
        + tradslack(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    VIM(i,r) # value of imports of commodity i in r at domestic market prices #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    VIM(i,r) = sum(j,ALL_INDS, VIFM(i,j,r)) + VIPM(i,r) + VIGM(i,r);

Coefficient (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHRIFM(i,j,r) # share of import i used by sector j in r  #;
Formula (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHRIFM(i,j,r) = VIFM(i,j,r) / VIM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SHRIPM(i,r) # share of import i used by private hhlds in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    SHRIPM(i,r) = VIPM(i,r) / VIM(i,r);

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SHRIGM(i,r) # the share of import i used by gov't hhlds in r #;
Formula (all,i,TRAD_COMM)(all,r,REG)
    SHRIGM(i,r) = VIGM(i,r) / VIM(i,r);

Equation MKTCLIMP
# eq'n assures mkt clearing for imported goods entering each region (HT 2) #
(all,i,TRAD_COMM)(all,r,REG)
    qim(i,r)
        = sum(j,ALL_INDS, SHRIFM(i,j,r) * qfm(i,j,r))
        + SHRIPM(i,r) * qpm(i,r)
        + SHRIGM(i,r) * qgm(i,r);

Coefficient (all,i,ENDWM_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHREM(i,j,r) # share of mobile endowment i used by sector j at mkt prices #;
Formula (all,i,ENDWM_COMM)(all,j,ALL_INDS)(all,r,REG)
    SHREM(i,j,r) = VFM(i,j,r) / VOM(i,r);
Zerodivide (zero_by_zero) off;
Equation MKTCLENDWM
# eq'n assures mkt clearing for perfectly mobile endowments in each r (HT 4) #
(all,i,ENDWM_COMM)(all,r,REG)
    qo(i,r) = sum(j,ALL_INDS, SHREM(i,j,r) * qfe(i,j,r)) + endwslack(i,r);
!<
    This equation assures market clearing for perfectly mobile endowments (HT 4)
>!

Equation MKTCLENDWS
# eq'n assures mkt clearing for imperfectly mobile endowments in each r (HT 5)#
(all,i,ENDWS_COMM)(all,j,ALL_INDS)(all,r,REG)
    qoes(i,j,r) = qfe(i,j,r);
!<
    This equation assures market clearing for sluggish endowments (HT 5)
>!


!<
    9-2. Walras' Law
    ----------------
>!

Variable
    walras_sup # supply in omitted market--global supply of cgds composite #;
Equation WALRAS_S
# Extra eq'n computes change in supply in the omitted market. #
    walras_sup = pcgdswld + globalcgds;
!<
    This is an extra equation which simply computes change in supply in the
    omitted market.  (modified from HT 12 to reflect the value as opposed to
    quantity change, in light of the new treatment of psave(r))
>!

Variable
    walras_dem # demand in the omitted market--global demand for savings #;
Equation WALRAS_D
# Extra eq'n computes change in demand in the omitted market. #
    GLOBINV * walras_dem = sum(r,REG, SAVE(r) * [psave(r) + qsave(r)]);
!<
    This is an extra equation which simply computes change in demand in the
    omitted market.  (modified from HT 13 to reflect the value as opposed to
    quantity change)
>!

Variable
    walraslack # slack variable in the omitted market #;
!<
    This is endogenous under normal, GE closure.  If the GE links are broken,
    then this must be swapped with the numeraire, thereby forcing global
    savings to explicitly equal global investment.
>!
Equation WALRAS
# Check Walras' Law.  Value of "walraslack" should be zero. (HT 14) #
    walras_sup = walras_dem + walraslack;
!<
    This equation checks Walras' Law.  The value of walraslack should be zero
    in any GE simulation.  (HT 14)
>!


!<
    ==========
    Appendices
    ==========

    A. Summary Indices
    B. Equivalent Variation
    C. Welfare Decomposition
    D. Terms of Trade Decomposition
    E.  Land Use Module
    F.  Biofuel Targerting Module
    G.  Emissions due to Land Cover Changes Tracking Module
>!


!<
    ------------------
    A. Summary Indices
    ------------------

    The following equations calculate many useful summary statistics.  They do
    not generally affect the equilibrium structure of the model, although they
    do include the equation for the usual numeraire variable, "pfactwld". Some
    are documented in Hertel and Tsigas, many are new.

    A-0. Appendix-Specific Variables and Coefficients
    A-1. Factor Price Indices
    A-2. Regional Terms of Trade
    A-3. GDP Indices (Value, Price and Quantity)
    A-4. Aggregate Trade Indices (Value, Price and Quantity)
    A-5. Trade Balance Indices
    A-6. Real Energy Price Index
>!


!<
    A-0. Appendix-Specific Variables and Coefficients
    -------------------------------------------------

    only used in this Summary Indices appendix
>!
!
Variable (all,i,TRAD_COMM)(all,s,REG)
    vxwfob(i,s) # value of merchandise regional exports, by commodity, FOB #;
Variable (all,i,TRAD_COMM)(all,s,REG)
    viwcif(i,s) # value of merchandise regional imports, by commodity, CIF #;
Variable (all,r,REG)
    vxwreg(r) # value of merchandise exports, by region #;
Variable (all,r,REG)
    viwreg(r) # value of merchandise imports, by region, at world prices #;

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    VXW(i,r) # value of exports by comm. i and region r at FOB prices #;
Formula (all,m,MARG_COMM)(all,r,REG)
    VXW(m,r) = sum(s,REG, VXWD(m,r,s)) + VST(m,r);
Formula (all,i,NMRG_COMM)(all,r,REG)
    VXW(i,r) = sum(s,REG, VXWD(i,r,s));

Coefficient (all,r,REG)
    VXWREGION(r) # value of exports by region r at FOB prices #;
Formula (all,r,REG)
    VXWREGION(r) = sum(i,TRAD_COMM, VXW(i,r));

Coefficient (all,i,TRAD_COMM)(all,s,REG)
    VIW(i,s) # value of commodity imports i into s at CIF prices #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    VIW(i,s) = sum(r,REG, VIWS(i,r,s));
Coefficient (all,r,REG)
    VIWREGION(r) # value of commodity imports by region r at CIF prices #;
Formula (all,r,REG)
    VIWREGION(r) = sum(i,TRAD_COMM, VIW(i,r));
!

!<
    A-1. Factor Price Indices
    -------------------------
>!

Variable (orig_level=1.0)(all,i,ENDW_COMM)(all,r,REG)
    pfactreal(i,r) # ratio of return to primary factor i to CPI in r #;
Equation REALRETURN
# eq'n defines the real rate of return to primary factor i in region r #
(all,i,ENDW_COMM)(all,s,REG)
    pfactreal(i,s) = pm(i,s) - ppriv(s);
!<
    This equation defines the real rate of return to primary factor i in
    region r (new).
>!

Coefficient (all,r,REG)
    VENDWREG(r) # value of primary factors, at mkt prices, by region #;
Formula (all,r,REG)
    VENDWREG(r) = sum(i,ENDW_COMM, VOM(i,r));

Variable (orig_level=1.0)(all,r,REG)
    pfactor(r) # market price index of primary factors, by region #;
Equation PRIMFACTPR
# computes % change in price index of primary factors, by region #
(all,r,REG)
    VENDWREG(r) * pfactor(r) = sum(i,ENDW_COMM, VOM(i,r) * pm(i,r));

Coefficient
    VENDWWLD # value of primary factors, at mkt prices, worldwide #;
Formula
    VENDWWLD = sum(r,REG, VENDWREG(r));
Variable (orig_level=1.0)
    pfactwld # world price index of primary factors #;
Equation PRIMFACTPRWLD
# computes % change in global price index of primary factors #
    VENDWWLD * pfactwld = sum(r,REG, VENDWREG(r) * pfactor(r));




!<
    A-3. GDP Indices (Value, Price and Quantity)
    --------------------------------------------
>!

Coefficient (all,r,REG)
    GDP(r) # Gross Domestic Product in region r #;
Formula (all,s,REG)
    GDP(s)
        = sum(i,TRAD_COMM, VPAD(i,s))
        + sum(i,TRAD_COMM, VGA(i,s))
        + sum(k,CGDS_COMM, VOA(k,s))
        + sum(i,TRAD_COMM, sum(r,REG, VXWD(i,s,r)))
        + sum(m,MARG_COMM, VST(m,s))
        - sum(i,TRAD_COMM, sum(r,REG, VIWS(i,r,s)));

!<
    Gross Domestic Product in region r.  Trade is valued at FOB and CIF
    prices.
>!

! ECONS Subsitute VPAD, ppt and qpt!

Variable (all,r,REG)
    vgdp(r) # change in value of GDP #;
Equation VGDP_r
# change in value of GDP (HT 70) #
(all,r,REG)
    GDP(r) * vgdp(r)
        = sum(i,TRAD_COMM, VGA(i,r) * [qg(i,r) + pg(i,r)])
        + sum(i,TRAD_COMM, VPAD(i,r) * [qpt(i,r) + ppt(i,r)])
        + REGINV(r) * [qcgds(r) + pcgds(r)]
        + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]))
        + sum(m,MARG_COMM, VST(m,r) * [qst(m,r) + pm(m,r)])
        - sum(i,TRAD_COMM, sum(s,REG,
            VIWS(i,s,r) * [qxs(i,s,r) + pcif(i,s,r)]));

Variable (orig_level=1.0)(all,r,REG)
    pgdp(r) # GDP price index #;
Equation PGDP_r
# GDP price index (HT 71) #
(all,r,REG)
    GDP(r) * pgdp(r)
        = sum(i,TRAD_COMM, VGA(i,r) * pg(i,r))
        + sum(i,TRAD_COMM, VPAD(i,r) * ppt(i,r))
        + REGINV(r) * pcgds(r)
        + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
        + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
        - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * pcif(i,s,r)));

Variable (orig_level=GDP)(all,r,REG)
    qgdp(r) # GDP quantity index #;
Equation QGDP_r
# GDP quantity index #
(all,r,REG)
    GDP(r) * qgdp(r)
        = sum(i,TRAD_COMM, VGA(i,r) * qg(i,r))
        + sum(i,TRAD_COMM, VPAD(i,r) * qpt(i,r))
        + REGINV(r) * qcgds(r)
        + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * qxs(i,r,s)))
        + sum(m,MARG_COMM, VST(m,r) * qst(m,r))
        - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * qxs(i,s,r)));
!<
    modified from HT 72 for use with AnalyzeGE
>!




!<
    -----------------------
    B. Equivalent Variation
    -----------------------

    B-0. Appendix-Specific Variables and Coefficients
    B-1. Government Consumption Shadow Demand System
    B-2. Private Consumption Shadow Demand System
    B-3. Regional Household Shadow Demand System
    B-4. Equivalent Variation

    This appendix calculates equivalent variation "EV" and world equivalent
    variation, "WEV", by determining the income "yev" that would be required
    to achieve the current actual utility level "u" in a shadow demand system
    in which prices are fixed.

    Section B-2 calculates the utility elasticity of private consumption
    expenditure, "ueprivev", within a shadow demand system for private
    consumption, for use in section B-3.  B-3 calculates private consumption
    expenditure "ypev" for use in B-2, and regional income "yev" for use in
    B-4, within a shadow demand system for the regional household.  B-4
    calculates "EV" and "WEV".
>!


!<
    B-0. Appendix-Specific Variables and Coefficients
    -------------------------------------------------

    only used in this Equivalent Variation section of the Summary Indices
    appendix
>!

Variable (all,r,REG)
    uelasev(r)
    # elasticity of cost of utility wrt utility, for EV calc. #;
Variable (all,r,REG)
    ueprivev(r)
    # utility elasticity of private consn expenditure, for EV calc. #;
Variable (all,r,REG)
    ugev(r) # per capita utility from gov't expend., for EV calc. #;
Variable (all,r,REG)
    upev(r) # per capita utility from private expend., for EV calc. #;
Variable (all,r,REG)
    qsaveev(r) # total quantity of savings demanded, for EV calc. #;
Variable (all,r,REG)
    yev(r) # regional household income in region r, for EV calc. #;
Variable (all,r,REG)
    ypev(r)
    # private consumption expenditure in region r, for EV calc. #;
Variable (all,r,REG)
    ygev(r)
    # government consumption expenditure in region r, for EV calc. #;

Coefficient (all,r,REG)
    INCOMEEV(r) # regional income, for EV calc. #;
Formula (initial) (all,r,REG)
    INCOMEEV(r) = INCOME(r);
Update (all,r,REG)
    INCOMEEV(r) = yev(r);

Coefficient (all,r,REG)
    UTILPRIVEV(r) # utility from private consumption, for EV calcs #;
Formula (initial) (all,r,REG)
    UTILPRIVEV(r) = UTILPRIV(r);
Update (all,r,REG)
    UTILPRIVEV(r) = upev(r);

Coefficient (all,r,REG)
    UTILGOVEV(r) # utility from private consumption, for EV calcs #;
Formula (initial) (all,r,REG)
    UTILGOVEV(r) = UTILGOV(r);
Update (all,r,REG)
    UTILGOVEV(r) = ugev(r);

Coefficient (all,r,REG)
    UTILSAVEEV(r) # utility from private consumption, for EV calcs #;
Formula (initial) (all,r,REG)
    UTILSAVEEV(r) = UTILSAVE(r);
Update (change) (all,r,REG)
    UTILSAVEEV(r) = [[qsaveev(r) - pop(r)] / 100] * UTILSAVEEV(r);


!<
    B-1. Government Consumption Shadow Demand System
    ------------------------------------------------
>!

Equation GOVUSHD
# utility from government consumption in r #
(all,r,REG)
    ygev(r) - pop(r) = ugev(r);


!<
    B-2. Private Consumption Shadow Demand System
    ---------------------------------------------
>!

Variable (all,i,CDE_COMM)(all,r,REG)
    qpev(i,r)
    # private hhld demand for commodity i in region r, for EV calc. #;

Coefficient (all,i,CDE_COMM)(all,r,REG)
    VPAEV(i,r)
    # private hhld expend. on i in r valued at agent's prices, for EV calc. #;
Formula (initial) (all,i,CDE_COMM)(all,r,REG)
    VPAEV(i,r) = VPA(i,r);
Update (all,i,CDE_COMM)(all,r,REG)
    VPAEV(i,r) = qpev(i,r);

Coefficient (all,r,REG)
    VPAREGEV(r) # private consumption expenditure in region r, for EV calc. #;
Formula (all,r,REG)
    VPAREGEV(r) = sum(i,CDE_COMM, VPAEV(i,r));
!<
    VPAREGEV should agree with PRIVEXPEV.
>!

Coefficient (all,i,CDE_COMM)(all,r,REG)
    CONSHREV(i,r)
    # share of private hhld consn devoted to good i in r, for EV calc. #;
Formula (all,i,CDE_COMM)(all,r,REG)
    CONSHREV(i,r) = VPAEV(i,r) / VPAREGEV(r);
Coefficient (all,i,CDE_COMM)(all,r,REG)
    EYEV(i,r)
    # expend. elast. of private hhld demand for i in r, for EV calc. #;
Formula (all,i,CDE_COMM)(all,r,REG)
    EYEV(i,r)
        = [1.0 / sum(n,CDE_COMM, CONSHREV(n,r) * INCPAR(n,r))]
        * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
            + sum(n,CDE_COMM, CONSHREV(n,r) * INCPAR(n,r) * ALPHA(n,r))]
        + ALPHA(i,r)
        - sum(n,CDE_COMM, CONSHREV(n,r) * ALPHA(n,r));

Equation PRIVDMNDSEV
    # private hhld demands for composite commodities, for EV calc. #
    (all,i,CDE_COMM)(all,r,REG)
    qpev(i,r) - pop(r) = EYEV(i,r) * [ypev(r) - pop(r)];
!<
    Prices are held constant for the EV calculation and so do not appear here.
>!

Coefficient (all,r,REG)
    UELASPRIVEV(r)
    # elast. of cost wrt utility from private consn, for EV calc. #;
Formula (all,r,REG)
    UELASPRIVEV(r) = sum(i,CDE_COMM, CONSHREV(i,r) * INCPAR(i,r));

Equation PRIVATEUEV
# computation of utility from private consumption in r (HT 45) #
(all,r,REG)
    ypev(r) - pop(r) = UELASPRIVEV(r) * upev(r);

Coefficient (all,i,CDE_COMM)(all,r,REG)
    XWCONSHREV(i,r)
    # expansion-parameter-weighted consumption share, for EV calc. #;
Formula (all,i,CDE_COMM)(all,r,REG)
    XWCONSHREV(i,r) = CONSHREV(i,r) * INCPAR(i,r) / UELASPRIVEV(r);

Equation UTILELASPRIVEV
    # elasticity of cost wrt utility from private consn, for EV calc. #
    (all,r,REG)
    ueprivev(r)
        = sum(i,CDE_COMM, XWCONSHREV(i,r) * [qpev(i,r) - ypev(r)]);
!<
    Prices are held constant for the EV calculation and so do not appear here.
>!


!<

    B-3. Regional Household Shadow Demand System
    --------------------------------------------
>!

Variable (all,r,REG)
    ysaveev(r) # NET savings expenditure, for EV calc. #;

Coefficient (all,r,REG)
    PRIVEXPEV(r)
    # private consumption expenditure in region r, for EV calc. #;
Formula (initial) (all,r,REG)
    PRIVEXPEV(r) = PRIVEXP(r);
Update (all,r,REG)
    PRIVEXPEV(r) = ypev(r);
!<
    PRIVEXPEV should agree with VPAREGEV.
>!

Coefficient (all,r,REG)
    GOVEXPEV(r)
    # government consumption expenditure in region r, for EV calc. #;
Formula (initial) (all,r,REG)
    GOVEXPEV(r) = GOVEXP(r);
Update (all,r,REG)
    GOVEXPEV(r) = ygev(r);

Coefficient (all,r,REG)
    SAVEEV(r)
    # saving in region r, for EV calc. #;
Formula (initial) (all,r,REG)
    SAVEEV(r) = SAVE(r);
Update (all,r,REG)
    SAVEEV(r) = ysaveev(r);

Coefficient (all,r,REG)
    XSHRPRIVEV(r)
    # private expenditure share in regional income, for EV calc. #;
Formula (all,r,REG)
    XSHRPRIVEV(r) = PRIVEXPEV(r) / INCOMEEV(r);

Coefficient (all,r,REG)
    XSHRGOVEV(r)
    # government expenditure share in regional income, for EV calc. #;
Formula (all,r,REG)
    XSHRGOVEV(r) = GOVEXPEV(r) / INCOMEEV(r);

Coefficient (all,r,REG)
    XSHRSAVEEV(r) # saving share in regional income, for EV calc. #;
Formula (all,r,REG)
    XSHRSAVEEV(r) = SAVEEV(r) / INCOMEEV(r);

Variable (all,r,REG)
    dpavev(r) # average distribution parameter shift, for EV calc. #;
Equation DPARAVEV
# average distribution parameter shift, for EV calc. #
    (all,r,REG)
    dpavev(r)
        = XSHRPRIVEV(r) * dppriv(r)
        + XSHRGOVEV(r) * dpgov(r)
        + XSHRSAVEEV(r) * dpsave(r);

Equation UTILITELASTICEV
    # elasticity of cost of utility wrt utility, for EV calc. #
    (all,r,REG)
    uelasev(r) = XSHRPRIV(r) * ueprivev(r) - dpavev(r);

Equation PCONSEXPEV
# private consumption expenditure, for EV calc. #
    (all,r,REG)
    ypev(r) - yev(r) = -[ueprivev(r) - uelasev(r)] + dppriv(r);

Equation GOVCONSEXPEV
# government consumption expenditure #
(all,r,REG)
    ygev(r) - yev(r) = uelasev(r) + dpgov(r);

Equation SAVINGEV
# saving #
(all,r,REG)
    ysaveev(r) - yev(r) = uelasev(r) + dpsave(r);

Equation SAVEUEV
# saving #
(all,r,REG)
    qsaveev(r) = ysaveev(r);

!<
    Note that because psave doesn't change, qsaveev moves with ysaveev.
>!

Coefficient (all,r,REG)
    UTILELASEV(r)
    # elasticity of cost of utility wrt utility, for EV calc. #;
Formula (initial) (all,r,REG)
    UTILELASEV(r) = UTILELAS(r);
Update (all,r,REG)
    UTILELASEV(r) = uelasev(r);

Equation INCOME_EQUIV
# equivalent income #
(all,r,REG)
    u(r)
        = au(r)
        + DPARPRIV(r) * loge(UTILPRIVEV(r)) * dppriv(r)
        + DPARGOV(r) * loge(UTILGOVEV(r)) * dpgov(r)
        + DPARSAVE(r) * loge(UTILSAVEEV(r)) * dpsave(r)
        + [1.0 / UTILELASEV(r)] * [yev(r) - pop(r)];


!<
    B-4. Equivalent Variation
    -------------------------
>!

Variable (change)(all,r,REG)
    EV(r) # equivalent variation, $ US million #;
Equation EVREG
# regional EV (HT 67) #
(all,r,REG)
    EV(r) = [INCOMEEV(r) / 100] * yev(r);

Variable (change)
    WEV # equivalent variation for the world #;
Equation EVWLD
# EV for the world (HT 68) #
    WEV = sum(r,REG, EV(r));


!<
    ------------------------
    C. Welfare Decomposition
    ------------------------
    See GTAP Technical Paper No. 5 for derivation and interpretation.
>!

Coefficient (all,r,REG)
    EVSCALFACT(r) # equivalent variation scaling factor #;
Formula (all,r,REG)
    EVSCALFACT(r) = [UTILELASEV(r) / UTILELAS(r)] * [INCOMEEV(r) / INCOME(r)];

Coefficient (all,m,MARG_COMM)(all,s,REG)
    VTMD(m,s) # aggregate value of svce m in shipments to s #;
Formula (all,m,MARG_COMM)(all,s,REG)
    VTMD(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));

Variable (linear,change)(all,r,REG)
    EV_ALT(r) # regional EV computed in alternative way #;

!<<add new coproducts!
Equation EV_DECOMPOSITION
# decomposition of Equivalent Variation #
(all,r,REG)
        EV_ALT(r)
        = -[0.01 * UTILELASEV(r) * INCOMEEV(r)]
        * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
            + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
            + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)]
        + [0.01 * EVSCALFACT(r)]
        * [
            + sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
            + sum(i,ENDW_COMM, sum(j,ALL_INDS,
                  ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
            + sum(j,ALL_INDS, sum(i,TRAD_COMM,
                  [IFTAX(i,j,r) ] * [qfm(i,j,r) - pop(r)]))
            + sum(j,ALL_INDS, sum(i,TRAD_COMM,
                  [DFTAX(i,j,r) ] * [qfd(i,j,r) - pop(r)]))
            + sum(i,TRAD_COMM,
                [IPTAX(i,r) ] * [qpm(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [DPTAX(i,r) ] * [qpd(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [IGTAX(i,r) ] * [qgm(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [DGTAX(i,r) ] * [qgd(i,r) - pop(r)])
            + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
            + sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))
            + sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
            - VDEP(r) * [kb(r) - pop(r)]

            + sum(i,NETBD_INDS,VOA(i,r) * ao(i,r))
            + sum(k,ETHA_COMM,VOA(k,r))* ao("EthanolC",r)
            + sum(k,ETHAS_COMM,VOA(k,r))* ao("EthanolS",r)
            + sum(k,BIOD_COMM,VOA(k,r))* ao("Vol_Soy",r)
            + sum(k,BIOP_COMM,VOA(k,r))* ao("Vol_Palm",r)
            + sum(k,BIOR_COMM,VOA(k,r))* ao("Vol_Rape",r)
            + sum(k,BIOC_COMM,VOA(k,r))* ao("Vol_Oth",r)
            + sum(k,GRNATJ_COMM,VOA(k,r))* ao("GRNATJ",r)
            + sum(k,GRNETJ_COMM,VOA(k,r))* ao("GRNETJ",r)
            + sum(k,SUGATJ_COMM,VOA(k,r))* ao("SUGATJ",r)
            + sum(k,SUGETJ_COMM,VOA(k,r))* ao("SUGETJ",r)
            + sum(k,SUGSIP_COMM,VOA(k,r))* ao("SUGSIP",r)
            + sum(k,CAMHRJ_COMM,VOA(k,r))* ao("CAMHRJ",r)
            + sum(k,CRNHRJ_COMM,VOA(k,r))* ao("CRNHRJ",r)

            + sum(j,ALL_INDS, sum(i,FIRM_COMM, VFA(i,j,r) * af(i,j,r)))
            + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
                VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
            + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))
            + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
            + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
            + NETINV(r) * pcgds(r)
            - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * pfob(i,s,r)))
            - sum(m,MARG_COMM, VTMD(m,r) * pt(m))
            - SAVE(r) * psave(r)]
        + 0.01 * INCOMEEV(r) * pop(r);

Variable (linear,change)
    WEV_ALT # expression for WEV computed in alternative way #;
Equation WORLDEV
# Equivalent Variation for the world #
    WEV_ALT = sum(r,REG, EV_ALT(r));


Variable (linear,change) (all,r,REG)
    CNTdpar(r) # contribution to EV of change in distribution parameters #;
Equation CNT_WEV_dpar
(all,r,REG)
    CNTdpar(r)
        = -0.01 * UTILELASEV(r) * INCOMEEV(r)
        * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
            + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
            + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)];

Variable (linear,change) (all,r,REG)
    CNTpopr(r) # contribution to EV in region r of change in population #;
Equation CONT_EV_pop
(all,r,REG)
    CNTpopr(r) = 0.01 * INCOMEEV(r) * pop(r);

Variable (linear,change) (all,r,REG)
    CNTqor(r) # contribution to EV in region r of output changes #;
Equation CONT_EV_qor
(all,r,REG)
    CNTqor(r)
        = sum(i,NSAV_COMM,
            0.01 * EVSCALFACT(r) * PTAX(i,r) * [qo(i,r) - pop(r)]);

Variable (linear,change) (all,i,NSAV_COMM)(all,r,REG)
    CNTqoir(i,r)
    # contribution to EV of changes in output of NSAV_COMM i in reg. r #;
Equation CONT_EV_qoir
(all,i,NSAV_COMM)(all,r,REG)
    CNTqoir(i,r) = PTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qo(i,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqfer(r)
    # cont. to EV of changes in use of all ENDW_COMM in all ind. in reg. r #;
Equation CONT_EV_qfer
(all,r,REG)
    CNTqfer(r)
        = sum(i,ENDW_COMM, sum(j,ALL_INDS,
            ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]));

Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
    CNTqfeir(i,r)
    # contribution to EV of changes in use of ENDW_COMM i in all ind. in r #;
Equation CONT_EV_qfeir
(all,i,ENDW_COMM)(all,r,REG)
    CNTqfeir(i,r)
        = sum(j,ALL_INDS,
            ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]);

Variable (linear,change) (all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfeijr(i,j,r)
    # cont. to EV of changes in use of ENDW_COMM i in ind. j of reg. r #;
Equation CONT_EV_qfeijr
(all,i,ENDW_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfeijr(i,j,r)
        = ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqfmr(r)
    # cont. to EV of changes in use of imported int. in all ind. in reg. r #;
Equation CONT_EV_qfmr
(all,r,REG)
    CNTqfmr(r)
        = sum(i,TRAD_COMM, sum(j,ALL_INDS,
            [IFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
                * [qfm(i,j,r) - pop(r)]));

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqfmir(i,r)
    # cont. to EV of changes in use of imported int. i in all ind. in r #;
Equation CONT_EV_qfmir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqfmir(i,r)
        = sum(j,ALL_INDS,
            [IFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
                * [qfm(i,j,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfmijr(i,j,r)
    # cont. to EV of changes in use of imported int. i in ind. j of reg. r #;
Equation CONT_EV_qfmijr
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfmijr(i,j,r)
        = [IFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
            * [qfm(i,j,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqfdr(r)
    # cont. to EV of changes in use of domestic int. in all ind. in reg. r #;
Equation CONT_EV_qfdr
(all,r,REG)
    CNTqfdr(r)
        = sum(i,TRAD_COMM, sum(j,ALL_INDS,
            [DFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
                * [qfd(i,j,r) - pop(r)]));

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqfdir(i,r)
    # contribution to EV of changes in use of domestic i in all ind. in r #;
Equation CONT_EV_qfdir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqfdir(i,r)
        = sum(j,ALL_INDS,
            [DFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
                * [qfd(i,j,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfdijr(i,j,r)
    # cont. to EV of changes in use of domestic int. i in ind. j of reg. r #;
Equation CONT_EV_qfdijr
(all,i,TRAD_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTqfdijr(i,j,r)
        = [DFTAX(i,j,r) ] * [0.01 * EVSCALFACT(r)]
            * [qfd(i,j,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqpmr(r)
    # contribution to EV of changes in consumption of imported goods in r #;
Equation CONT_EV_qpmr
(all,r,REG)
    CNTqpmr(r)
        = sum(i,TRAD_COMM,
            [IPTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
                * [qpm(i,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqpmir(i,r)
    # cont. to EV of changes in consumption of imported good i in reg. r #;
Equation CONT_EV_qpmir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqpmir(i,r)
        = [IPTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
            * [qpm(i,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqpdr(r)
    # contribution to EV of changes in consumption of domestic goods in r #;
Equation CONT_EV_qpdr
(all,r,REG)
    CNTqpdr(r)
        = sum(i,TRAD_COMM,
            [DPTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
                * [qpd(i,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqpdir(i,r)
    # cont. to EV of changes in consumption of domestic good i in reg. r #;
Equation CONT_EV_qpdir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqpdir(i,r)
        = [DPTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
            * [qpd(i,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqgmr(r)
    # cont. to EV of changes in gov't consumption of imports in reg. r #;
Equation CONT_EV_qgmr
(all,r,REG)
    CNTqgmr(r)
        = sum(i,TRAD_COMM,
            [IGTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
                * [qgm(i,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqgmir(i,r)
    # cont. to EV of changes in gov't consumption of import i in reg. r #;
Equation CONT_EV_qgmir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqgmir(i,r)
        = [IGTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
            * [qgm(i,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqgdr(r)
    # cont. to EV of changes in gov't consumption of domestics in reg. r #;
Equation CONT_EV_qgdr
(all,r,REG)
    CNTqgdr(r)
        = sum(i,TRAD_COMM,
            [DGTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
                * [qgd(i,r) - pop(r)]);

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
    CNTqgdir(i,r)
    # cont. to EV of changes in gov't consumption of domestic i in reg. r #;
Equation CONT_EV_qgdir
(all,i,TRAD_COMM)(all,r,REG)
    CNTqgdir(i,r)
        = [DGTAX(i,r) ] * [0.01 * EVSCALFACT(r)]
            * [qgd(i,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqxsr(r)
    # cont. to EV of changes in exports of all goods from SRCE r to all DEST #;
Equation CONT_EV_qxsr
(all,r,REG)
    CNTqxsr(r)
        = sum(i,TRAD_COMM, sum(s,REG,
            XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)]));

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTqxsirs(i,r,s)
    # cont. to EV of changes in exports of i from SRCE r to DEST s #;
Equation CONT_EV_qxsirs
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTqxsirs(i,r,s)
        = XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTqimr(r)
    # cont. to EV of changes in imports of all goods from all SRCE to DEST r #;
Equation CONT_EV_qimr
(all,r,REG)
    CNTqimr(r)
        = sum(i,TRAD_COMM, sum(s,REG,
            MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)]));

Variable (linear,change) (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
    CNTqimisr(i,s,r)
    # cont. to EV of changes in imports of i from SRCE s to DEST r #;
Equation CONT_EV_qimisr
(all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
    CNTqimisr(i,s,r)
        = MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)];

Variable (linear,change) (all,r,REG)
    CNTalleffr(r) # total contribution to regional EV of allocative effects #;
Equation CONT_EV_alleffr
(all,r,REG)
    CNTalleffr(r)
        = [0.01 * EVSCALFACT(r)]
        * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
            + sum(i,ENDW_COMM, sum(j,ALL_INDS,
                ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
            + sum(j,ALL_INDS, sum(i,TRAD_COMM,
                [IFTAX(i,j,r) ] *  [qfm(i,j,r) - pop(r)]))
            + sum(j,ALL_INDS, sum(i,TRAD_COMM,
                [DFTAX(i,j,r) ] *  [qfd(i,j,r) - pop(r)]))
            + sum(i,TRAD_COMM,
                [IPTAX(i,r) ] * [qpm(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [DPTAX(i,r) ] * [qpd(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [IGTAX(i,r) ] * [qgm(i,r) - pop(r)])
            + sum(i,TRAD_COMM,
                [DGTAX(i,r) ] * [qgd(i,r) - pop(r)])
            + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
            + sum(i,TRAD_COMM, sum(s,REG,
                MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))];

Variable (linear,change) (all,i,DEMD_COMM)(all,r,REG)
    CNTalleffir(i,r)
    # total contribution to regional EV of allocative effects #;
Equation CONT_EV_alleffir_E
(all,i,ENDW_COMM)(all,r,REG)
    CNTalleffir(i,r)
        = [0.01 * EVSCALFACT(r)]
        * [PTAX(i,r) * [qo(i,r) - pop(r)]
            + sum(j,ALL_INDS, ETAX(i,j,r) * [qfe(i,j,r) - pop(r)])];
Equation CONT_EV_alleffir_T
(all,i,TRAD_COMM)(all,r,REG)
    CNTalleffir(i,r)
        = [0.01 * EVSCALFACT(r)]
        * [PTAX(i,r) * [qo(i,r) - pop(r)]
            + sum(j,ALL_INDS, [IFTAX(i,j,r) ]
                * [qfm(i,j,r) - pop(r)])
            + sum(j,ALL_INDS, [DFTAX(i,j,r) ]
                * [qfd(i,j,r) - pop(r)])
            + [IPTAX(i,r) ] * [qpm(i,r) - pop(r)]
            + [DPTAX(i,r) ] * [qpd(i,r) - pop(r)]
            + [IGTAX(i,r) ] * [qgm(i,r) - pop(r)]
            + [DGTAX(i,r) ] * [qgd(i,r) - pop(r)]
            + sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)])
            + sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)])];
!
Variable (linear,change) (all,r,REG)
    CNTtotr(r)
    # contribution to regional EV of changes in its terms of trade #;
Equation CONT_EV_totr
(all,r,REG)
    CNTtotr(r)
        = [0.01 * EVSCALFACT(r)]
        * [sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [pfob(i,r,s) - pxwwld]))
            + sum(m,MARG_COMM, VST(m,r) * [pm(m,r) - pxwwld])
            - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * [pfob(i,s,r) - pxwwld]))
            - sum(m,MARG_COMM, VTMD(m,r) * [pt(m) - pxwwld])];

Variable (linear,change) (all,r,REG)
    CNTcgdsr(r) # contribution to regional EV of changes in the price of cgds #;
Equation CNT_EV_cgdsr
(all,r,REG)
    CNTcgdsr(r)
        = [0.01 * EVSCALFACT(r)]
        * [NETINV(r) * [pcgds(r) - pxwwld] - SAVE(r) * [psave(r) - pxwwld]];
!
Variable (linear,change) (all,r,REG)
    CNTendwr(r) # contribution to regional EV of changes in all ENDW_COMM #;
Equation CONT_EV_endwr
(all,r,REG)
    CNTendwr(r)
        = [0.01 * EVSCALFACT(r)]
        * [sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
            - VDEP(r) * [kb(r) - pop(r)]];

Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
    CNTendwir(i,r) # contribution to regional EV of changes in ENDW_COMM i #;
Equation CONT_EV_endwir
(all,i,ENDW_COMM)(all,r,REG)
    CNTendwir(i,r) = [0.01 * EVSCALFACT(r)] * [VOA(i,r) * [qo(i,r) - pop(r)]];

Variable (linear,change) (all,r,REG)
    CNTtechr(r) # contribution to regional EV of all technical change #;
Equation CONT_EV_techr
(all,r,REG)
    CNTtechr(r)
        = [0.01 * EVSCALFACT(r)]
            
            * [sum(i,NETBD_INDS, VOA(i,r) * ao(i,r))+ 
            + sum(k,ETHA_COMM,VOA(k,r))* ao("EthanolC",r)
            + sum(k,ETHAS_COMM,VOA(k,r))* ao("EthanolS",r)
            + sum(k,BIOD_COMM,VOA(k,r))* ao("Vol_Soy",r)
            + sum(k,BIOP_COMM,VOA(k,r))* ao("Vol_Palm",r)
            + sum(k,BIOR_COMM,VOA(k,r))* ao("Vol_Rape",r)
            + sum(k,BIOC_COMM,VOA(k,r))* ao("Vol_Oth",r)
            + sum(k,CAMHRJ_COMM,VOA(k,r))* ao("CAMHRJ",r)
            + sum(k,CRNHRJ_COMM,VOA(k,r))* ao("CRNHRJ",r)
            + sum(k,GRNATJ_COMM,VOA(k,r))* ao("GRNATJ",r)
            + sum(k,GRNETJ_COMM,VOA(k,r))* ao("GRNETJ",r)
            + sum(k,SUGATJ_COMM,VOA(k,r))* ao("SUGATJ",r)
            + sum(k,SUGETJ_COMM,VOA(k,r))* ao("SUGETJ",r)
            + sum(k,SUGSIP_COMM,VOA(k,r))* ao("SUGSIP",r)
            + sum(j,ALL_INDS, sum(i,FIRM_COMM, VFA(i,j,r) * af(i,j,r)))
            + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
                VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
            + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))];

Variable (linear,change) (all,r,REG)
    CNTtech_aor(r)
    # contribution to regional EV of output augmenting technical change #;


Equation CONT_EV_tech_aor
(all,r,REG)
    CNTtech_aor(r)
        = [0.01 * EVSCALFACT(r)] * 

            (sum(i,NETBD_INDS, VOA(i,r) * ao(i,r))+ 
            + sum(k,ETHA_COMM,VOA(k,r))* ao("EthanolC",r)
            + sum(k,ETHAS_COMM,VOA(k,r))* ao("EthanolS",r)
            + sum(k,BIOD_COMM,VOA(k,r))* ao("Vol_Soy",r)
            + sum(k,BIOP_COMM,VOA(k,r))* ao("Vol_Palm",r)
            + sum(k,BIOR_COMM,VOA(k,r))* ao("Vol_Rape",r)
            + sum(k,BIOC_COMM,VOA(k,r))* ao("Vol_Oth",r))
            + sum(k,CAMHRJ_COMM,VOA(k,r))* ao("CAMHRJ",r)
            + sum(k,CRNHRJ_COMM,VOA(k,r))* ao("CRNHRJ",r)
            + sum(k,GRNATJ_COMM,VOA(k,r))* ao("GRNATJ",r)
            + sum(k,GRNETJ_COMM,VOA(k,r))* ao("GRNETJ",r)
            + sum(k,SUGATJ_COMM,VOA(k,r))* ao("SUGATJ",r)
            + sum(k,SUGETJ_COMM,VOA(k,r))* ao("SUGETJ",r)
            + sum(k,SUGSIP_COMM,VOA(k,r))* ao("SUGSIP",r);


Variable (linear,change) (all,i,NETBD_INDS)(all,r,REG)
    CNTtech_aoir1(i,r)
    # cont. to regional EV of output augmenting tech change in TRAD_COMM i #;
Variable (linear,change) (all,i,ETBD_INDS)(all,r,REG)
    CNTtech_aoir2(i,r)
    # cont. to regional EV of output augmenting tech change in TRAD_COMM i #;



Equation CONT_EV_tech_aoir1
(all,i,NETBD_INDS)(all,r,REG)
    CNTtech_aoir1(i,r) = [0.01 * EVSCALFACT(r)] * VOA(i,r) * ao(i,r);


Equation CONT_EV_tech_aoir2
(all,i,ETBD_INDS)(all,r,REG)
    CNTtech_aoir2(i,r) = [0.01 * EVSCALFACT(r)] *
(SELECT(i,"EthanolC")*sum(k,ETHA_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"EthanolS")*sum(k,ETHAS_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"Vol_Soy")*sum(k,BIOD_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"Vol_Palm")*sum(k,BIOP_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"Vol_Rape")*sum(k,BIOR_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"Vol_Oth")*sum(k,BIOC_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"CAMHRJ")*sum(k,CAMHRJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"CRNHRJ")*sum(k,CRNHRJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"GRNATJ")*sum(k,GRNATJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"GRNETJ")*sum(k,GRNETJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"SUGATJ")*sum(k,SUGATJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"SUGETJ")*sum(k,SUGETJ_COMM, VOA(k,r)) * ao(i,r)+
SELECT(i,"SUGSIP")*sum(k,SUGSIP_COMM, VOA(k,r)) * ao(i,r));
 


Variable (linear,change) (all,r,REG)
    CNTtech_afr(r)
    # cont. to regional EV of input augmenting tech change #;
Equation CONT_EV_tech_afr
(all,r,REG)
    CNTtech_afr(r)
        = [0.01 * EVSCALFACT(r)]
        * sum(j,ALL_INDS, sum(i,FIRM_COMM, VFA(i,j,r) * af(i,j,r)));

Variable (linear,change) (all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTtech_afijr(i,j,r)
    # cont. to EV of input i input augmenting tech change in sector j #;
Equation CONT_EV_tech_afijr
(all,i,FIRM_COMM)(all,j,ALL_INDS)(all,r,REG)
    CNTtech_afijr(i,j,r) = [0.01 * EVSCALFACT(r)] * VFA(i,j,r) * af(i,j,r);

Variable (linear,change) (all,r,REG)
    CNTtech_atrr(r)
    # contribution to regional EV of technical change in transportation #;
Equation CONT_EV_tech_atrr
(all,r,REG)
    CNTtech_atrr(r)
        = [0.01 * EVSCALFACT(r)]
        * sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
            VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))));

Variable (linear,change)(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTtech_afmfdsd(m,i,r,s)
    # cont. to EV of tech change in transportation efficiency #;
Equation CONT_EV_tech_afmfdsd
(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTtech_afmfdsd(m,i,r,s)
        = [0.01 * EVSCALFACT(s)] * VTMFSD(m,i,r,s) * atmfsd(m,i,r,s);

Variable (linear,change)(all,r,REG)
    CNTtech_amsr(r) # cont. to EV of bilateral import-augmenting tech change #;
Equation CONT_EV_tech_amsr
(all,r,REG)
    CNTtech_amsr(r)
        = [0.01 * EVSCALFACT(r)]
        * sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)));

Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTtech_amsirs(i,r,s)
 # cont. to EV of bilateral import augmenting tech change for TRAD_COMM i #;
Equation CONT_EV_tech_amsirs
(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    CNTtech_amsirs(i,r,s) = [0.01 * EVSCALFACT(r)] * VIMS(i,r,s) * ams(i,r,s);

Variable (linear,change) (all,r,REG)
    CNTkbr(r)
    # cont. to EV of changes to beg. period capital stock and depreciation #;
Equation CONT_EV_kbr
(all,r,REG)
    CNTkbr(r) = - [0.01 * EVSCALFACT(r)] * VDEP(r) * [kb(r) - pop(r)];


!<
    -------------------------------
    D. Terms of Trade Decomposition
    -------------------------------

    Computations for decomposition the terms-of-trade effect
    Reference: Robert McDougall, SALTER No. 12 Working Paper
>!

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SX_IR(i,r) # share of good i in total exports from r #;
Formula (all,m,MARG_COMM)(all,r,REG)
    SX_IR(m,r)
        = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
        / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
            + sum(l,MARG_COMM, VST(l,r))];
Formula (all,i,NMRG_COMM)(all,r,REG)
    SX_IR(i,r)
        = sum(s,REG, VXWD(i,r,s))
        / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
            + sum(l,MARG_COMM, VST(l,r))];

Coefficient (all,m,MARG_COMM)(all,s,REG)
    VTICOMM(m,s) # margin usage of m in getting imports to region s #;
Formula (all,m,MARG_COMM)(all,s,REG)
    VTICOMM(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));

Coefficient (all,i,TRAD_COMM)(all,s,REG)
    VIWDIRALL(i,s) # imports of i into s, with direct allocation of margins #;
Formula (all,m,MARG_COMM)(all,s,REG)
    VIWDIRALL(m,s) = sum(r,REG, VXWD(m,r,s)) + VTICOMM(m,s);
Formula (all,i,NMRG_COMM)(all,s,REG)
    VIWDIRALL(i,s) = sum(r,REG, VXWD(i,r,s));

Coefficient (all,s,REG)
    VIWDATOT(s) # total imports into s, calculated on direct allocation basis #;
Formula (all,s,REG)
    VIWDATOT(s) = sum(i,TRAD_COMM, VIWDIRALL(i,s));

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SM_IR(i,r)  # share of good i in total imports into r #;
Formula (all,i,TRAD_COMM)(all,s,REG)
    SM_IR(i,s) = VIWDIRALL(i,s) / VIWDATOT(s);

Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    SX_IRS(i,r,s) # share of exports of good i from region r to s #;
Formula (all,m,MARG_COMM)(all,r,REG)(all,s,REG)
    SX_IRS(m,r,s) = VXWD(m,r,s) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
Formula (all,i,NMRG_COMM)(all,r,REG)(all,s,REG)
    SX_IRS(i,r,s) = VXWD(i,r,s) / sum(k,REG, VXWD(i,r,k));
Zerodivide (zero_by_zero) off;

Coefficient (all,m,MARG_COMM)(all,r,REG)
    SXT_IR(m,r) # share of margins in exports of good i from region r #;
Formula (all,m,MARG_COMM)(all,r,REG)
    SXT_IR(m,r) = VST(m,r) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];

Variable (all,i,TRAD_COMM)(all,r,REG)
    px_ir(i,r) # export price index for good i and region r #;
Equation EXPPRICE_MARG
# price index for total exports of m from r #
(all,m,MARG_COMM)(all,r,REG)
    px_ir(m,r)
        = sum(s,REG, SX_IRS(m,r,s) * pfob(m,r,s)) + SXT_IR(m,r) * pm(m,r);
Equation EXPPRICE_NMRG
# price index for total exports of i from r #
(all,i,NMRG_COMM)(all,r,REG)
    px_ir(i,r) = sum(s,REG, SX_IRS(i,r,s) * pfob(i,r,s));


Zerodivide (zero_by_zero) default 0;
Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    SM_IRS(i,r,s) # share of imports of good i into s from r at FOB prices #;
Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    SM_IRS(i,r,s) = VXWD(i,r,s) / VIWDIRALL(i,s);


Coefficient (all,m,MARG_COMM)(all,r,REG)
    SMT_IR(m,r) # share of transport cost in imports of margin commodity #;
Formula (all,m,MARG_COMM)(all,s,REG)
    SMT_IR(m,s) = VTICOMM(m,s) / VIWDIRALL(m,s);

Variable (all,i,TRAD_COMM)(all,r,REG)
    pm_ir(i,r) # imports price index for good i and region r #;
Equation IMPPRICE1_MARG
# price index for total imports of m in s -- margins commodities #
(all,m,MARG_COMM)(all,s,REG)
    pm_ir(m,s)
        = sum(r,REG, SM_IRS(m,r,s) * pfob(m,r,s)) + SMT_IR(m,s) * pt(m);
Equation IMPPRICE1_NMRG
# price index for total imports of i in s -- non-margins commodities #
(all,i,NMRG_COMM)(all,s,REG)
    pm_ir(i,s) = sum(r,REG, SM_IRS(i,r,s) * pfob(i,r,s));

Coefficient (all,i,TRAD_COMM)(all,r,REG)
    SW_IR(i,r) # share of region r exports in world total for good i #;
Formula (all,m,MARG_COMM)(all,r,REG)
    SW_IR(m,r)
        = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
        / sum(k,REG, sum(s,REG, VXWD(m,k,s)) + VST(m,k));
Formula (all,i,NMRG_COMM)(all,r,REG)
    SW_IR(i,r)
        = sum(s,REG, VXWD(i,r,s)) / sum(k,REG, sum(s,REG, VXWD(i,k,s)));

Variable (all,i,TRAD_COMM)
    px_i(i) # world export price index for commodity i #;
Equation WRLDPRICEi
# world export price index for good i #
(all,i,TRAD_COMM)
    px_i(i) = sum(r,REG, SW_IR(i,r) * px_ir(i,r));

Coefficient (all,i,TRAD_COMM)
    SW_I(i) # share of exports of i in world total #;
Formula (all,m,MARG_COMM)
    SW_I(m)
        = sum(r,REG, sum(s,REG, VXWD(m,r,s)) + VST(m,r))
        / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
            + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
Formula (all,i,NMRG_COMM)
    SW_I(i)
        = sum(r,REG, sum(s,REG, VXWD(i,r,s)))
        / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
            + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
Zerodivide (zero_by_zero) off;
Variable
    px_ # world export price index for all commodities #;
Equation WRLDPRICE
# world export price index for all goods #
    px_ = sum(i,TRAD_COMM, SW_I(i) * px_i(i));

Variable (all,i,TRAD_COMM)(all,r,REG)
    c1_ir(i,r) # contribution of world price, px_i, to ToT #;
Equation c1_irEQ
# contribution of world export price index of good i to ToT for region r #
(all,i,TRAD_COMM)(all,r,REG)
    c1_ir(i,r) = [SX_IR(i,r) - SM_IR(i,r)] * [px_i(i) - px_];

Variable (all,i,TRAD_COMM)(all,r,REG)
    c2_ir(i,r) # contribution of regional export price, px_ir, to ToT #;
Equation c2_irEQ
# contribution of regional export price of good i for region r #
(all,i,TRAD_COMM)(all,r,REG)
    c2_ir(i,r) = SX_IR(i,r) * [px_ir(i,r) - px_i(i)];

Variable (all,i,TRAD_COMM)(all,r,REG)
    c3_ir(i,r) # contribution of regional import price, pm_ir, to ToT #;
Equation c3_irEQ
# contribution of imports price index of good i for region r #
(all,i,TRAD_COMM)(all,r,REG)
    c3_ir(i,r) = SM_IR(i,r) * [pm_ir(i,r) - px_i(i)];

Variable (all,r,REG)
    c1_r(r) # contribution of world prices for all goods to ToT #;
Equation c1_rEQ
# contribution of world price indexes of all goods to ToT for r #
(all,r,REG)
    c1_r(r) = sum(i,TRAD_COMM, c1_ir(i,r));

Variable (all,r,REG)
    c2_r(r) # contribution of regional export prices to ToT #;
Equation c2_rEQ
# contribution of regional exports prices to ToT for r #
(all,r,REG)
    c2_r(r) = sum(i,TRAD_COMM, c2_ir(i,r));

Variable (all,r,REG)
    c3_r(r) # contribution of regional import prices to ToT #;
Equation c3_rEQ
# contribution of regional import prices to ToT for r #
(all,r,REG)
    c3_r(r) = sum(i,TRAD_COMM, c3_ir(i,r));

Variable (all,r,REG)
    tot2(r) # trade terms for region r, computed from components #;
Equation TOT2eq
# trade terms for region r, computed from components #
(all,r,REG)
    tot2(r) = c1_r(r) + c2_r(r) - c3_r(r);


!<
    ------------------
    E. Land Use Module
    ------------------
    Computes changes in land cover and harvested area in hectares. 
    Land cover refers to forestry, grazing and agriculture.
    Land use in crops is based on harvested area.

In order to reconcile market clearing in hectares with that on a 
value basis, as dictated by the CET function, we require an adjustment factor 
in each of the AEZs. This adjusts the percentage change in hectares to 
reflect the average change in productivity of those hectares in their new 
uses.   

>!

!Double crroping: the following moved up! 

!Set LCOVER4_INDS # set of land cover categories # 
  maximum size 10 read elements from file GTAPSETS header "LAND";
Set UNMNGLAND # set of unmanaged land # 
  maximum size 10 read elements from file GTAPSETS header "UNMG";
Set PASTURELAND # set of pasture land # 
  maximum size 10 read elements from file GTAPSETS header "PAST";
Subset UNMNGLAND is subset of LCOVER4_INDS ;
Set LCOVER_INDS # set of land cover categories to be used in model # 
        = LCOVER4_INDS - UNMNGLAND;
Set LCOVER2_INDS # first two land cover categories # 
        = FOREST_INDS + PASTURELAND;
Subset LCOVER2_INDS is subset of LCOVER_INDS ;
Subset FOREST_INDS is subset of LCOVER_INDS;
Set ACROP_INDS # aggregated cropsland cover # = LCOVER_INDS - LCOVER2_INDS ;
Set NONGRAZ_INDS # non grazing industries # = ACROP_INDS + FOREST_INDS;
Subset NONGRAZ_INDS is subset of LCOVER_INDS;!

Variable (all,i,AEZ_COMM)(all,r,REG)
    lcoveraez(i,r)
    # change in land in aez -- generally a fixed endowment #;

! Make LANDCOVER a levels variable -- and exogenize landcover change in 
unmanaged land. !

!Double cropping:the following moved up!
!Variable (LEVELS) (all,i,AEZ_COMM)(all,j,LCOVER4_INDS)(all,r,REG)
    LANDCOVER_L(i,j,r)
    # hectares of land by AEZ, sector and region #;
Read
    LANDCOVER_L from file GTAPDATA header "COVR";!

Zerodivide (zero_by_zero) default 1;
Zerodivide (nonzero_by_zero) default 1;

Coefficient (all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG)
    NVFM(i,j,r)
    # land rental payments in $ #;
Formula  
(all,i,AEZ_COMM)(all,j,LAND_INDS)(all,r,REG)
    NVFM(i,j,r) = VFM(i,j,r) * 10^6 ;

Variable (LEVELS) (all,i,AEZ_COMM)(all,j,LCOVER_INDS)(all,r,REG)
    RENTCOVER(i,j,r)
    # level of land rents by AEZ, sector and region, in $/ha. #;
Formula (initial) 
(all,i,AEZ_COMM)(all,j,FOREST_INDS)(all,r,REG)
    RENTCOVER(i,j,r) = [NVFM(i,j,r)/LANDCOVER_L(i,j,r)] ;
Formula (initial) 
(all,i,AEZ_COMM)(all,j,PASTURELAND)(all,r,REG)
    RENTCOVER(i,j,r) = sum(k,GRAZE_INDS,NVFM(i,k,r))/LANDCOVER_L(i,j,r) ;
Formula (initial) 
(all,i,AEZ_COMM)(all,j,ACROP_INDS)(all,r,REG)
    RENTCOVER(i,j,r) = [sum(k,CROP_INDS, NVFM(i,k,r))/LANDCOVER_L(i,j,r)] ;


! The change in land rents per physical hectare is computed by noting that
total land rental payments, by cover type and AEZ, must be the same, regardless
of units of measurement for land. !

Equation E_RENTCOVER1
(all,i,AEZ_COMM)(all,j,FOREST_INDS)(all,r,REG)
    p_RENTCOVER(i,j,r) + p_LANDCOVER_L(i,j,r) = pmes(i,j,r) + qoes(i,j,r) ;

Equation E_RENTCOVER2
(all,i,AEZ_COMM)(all,j,PASTURELAND)(all,r,REG)
    p_RENTCOVER(i,j,r) + p_LANDCOVER_L(i,j,r) 
                = pmgrazland(i,r) + qograzland(i,r) ;

Equation E_RENTCOVER3
(all,i,AEZ_COMM)(all,j,ACROP_INDS)(all,r,REG)
    p_RENTCOVER(i,j,r) + p_LANDCOVER_L(i,j,r) = 
                        pmcropland(i,r) + qocropland (i,r);

Variable (LEVELS) (all,i,AEZ_COMM)(all,r,REG)
    RENTCOVERAV(i,r)
    # level of average land rents by AEZ and region #;

Formula (initial) 
(all,i,AEZ_COMM)(all,r,REG)
    RENTCOVERAV(i,r) = 
  [sum(j,LAND_INDS, NVFM(i,j,r))/sum(j,LCOVER_INDS, LANDCOVER_L(i,j,r))] ;

Equation E_RENTCOVERAV
(all,i,AEZ_COMM)(all,r,REG)
    p_RENTCOVERAV(i,r) + lcoveraez(i,r) = pm(i,r) + qo(i,r) ;

!Double cropping:The following moved up! 
!Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    HARVSTAREA_L(i,j,r)
    # cropland harvested area #;
Read
    HARVSTAREA_L from file GTAPDATA header "AREA";!

! New coefficient for deflating the growth in land cover certain regions. The 
  problem is that there is a great deal of crop land cover that is not 
  cropped for one reason or another (e.g., CRP land in USA). Therefore, we 
  do not expect crop land cover to expand in the same proportion as 
  harvested area. Instead, we keep the absolute change in these two levels
  variables the same. So if the model calls for 10 million hectares more
  of harvested area, land cover must also rise by this amount. !

!Double cropping: the following moved up!
!Coefficient (all,i,AEZ_COMM)(all,r,REG)
    HA_LCSHR(i,r)
    # share of harvested area in total land cover #;
Formula  
(all,i,AEZ_COMM)(all,r,REG)
    HA_LCSHR(i,r) = 
sum(k,CROP_INDS, HARVSTAREA_L(i,k,r))/sum(k,ACROP_INDS, LANDCOVER_L(i,k,r)) ;!


!<
    --------------------------------
    PRODUCTIVITY SENSITIVITY VERSION
    --------------------------------

- This version specifies an elasticity of effective crop land wrt land crop land
expansion: ETA. ETA is the percentage change in effective cropland for a given
percentage change in crop land area. So, if ETA is 0.5, then to achieve a
one percent expansion in effective cropland, we need a two percent rise in
harvested cropland area. However, since a one percent rise in harvested cropland
does not require a one percent rise in total land cover, we also pre-multiply
by the ratio of harvested area to land cover. Thus, if ETA = 0.5 and HA is
just 2/3's of land cover, then crop land cover will rise by 4/3's of the rise in
harvested crop land requirements. Mathematically, we have:

ETA = %chng effective cropland / %change harvetsed cropland area
qocropland = our measure of % change in effective cropland
cropland = % change in cropland area, which is NOT the same as cropland cover.
 
Thus:
ETA = qocropland/cropland

The problem arises in determining the percentage change: cropland.

First of all, cropland is based on harvested area (HA), not physically
cultivated area (PA). When there are extensive crop failures, HA < PA. However,
when multiple cropping is present, we have HA > PA. We do not have global crop
data on PA.

Secondly, the data bases on crop land cover (LC) and PA are quite different. 
In the US, cropland cover includes crop land used for pasture, idle land and 
CRP land.The difference is huge. 

Combining both of these problems, we are left with a large, inexplicable, gap
between LC and HA. Since LC >> HA in most cases, assuming that both move in 
equal proportions greatly inflates the total land cover requirements for a given
percentage change in HA. For this reason, we have reverted to the assumption 
that del_LC = del_HA instead. 

In percentage changes, we have:

total land cover = (HA/LC)*harvested area + (Other/LC)*other crop land cover

If other crop land cover (e.g., idle land) does not change, then harvested 
area is simply scaled by HA/LC to give the change in total land cover.
    
>!

Coefficient (parameter) (all,i,AEZ_COMM)(all,r,REG)
    ETA(i,r)
    # elasticity of output with respect to acreage expansion #;
Read
    ETA from file GTAPPARM header "ETA";

! Now provide a revised estimate of the crop land area required, based
on ETA, the elasticity of effective crop land wrt harvested area. !

! Now switch to the harvested area portion of the code. !

!Double cropping: the following moved up!
!Variable (all,i,AEZ_COMM)(all,r,REG)
    harvstaez(i,r)
    # change in crop harvested area within aez #;!

Variable (all,i,AEZ_COMM)(all,r,REG)
    harvstslack(i,r)
    # slack variable in land allocation condition #;
Variable (all,j,CROP_INDS)(all,r,REG)
    harvstcom(j,r)
    # aggregates harvested area across AEZs for a given commodity, by region #;

Equation E_HARVSTAEZ
(all,i,AEZ_COMM)(all,r,REG)
    harvstaez(i,r) = [1/ETA(i,r)] * (qocropland (i,r) + afsland(i,r));

! Non-crop cover adjusts to accommodate this difference, so areaadjust
must change to satisfy the constant hectares condition for each AEZ. !

Variable (all,i,AEZ_COMM)(all,r,REG)
    areaadjust(i,r)
    # adjusts noncrop areas to satisfy constant hectares per AEZ #;

Equation E_NONCROPCOV1
(all,i,AEZ_COMM)(all,j,FOREST_INDS)(all,r,REG)
    p_LANDCOVER_L(i,j,r) = qoes(i,j,r) + areaadjust(i,r) ;

Equation E_NONCROPCOV2
(all,i,AEZ_COMM)(all,j,PASTURELAND)(all,r,REG)
    p_LANDCOVER_L(i,j,r) = qograzland(i,r) + areaadjust(i,r) ;

Coefficient (all,i,AEZ_COMM)(all,j,LCOVER_INDS)(all,r,REG)
    LCOVERSHR(i,j,r)
    # share in land cover #;
Formula  
(all,i,AEZ_COMM)(all,j,LCOVER_INDS)(all,r,REG)
    LCOVERSHR(i,j,r) = 
        LANDCOVER_L(i,j,r)/sum(k,LCOVER_INDS, LANDCOVER_L(i,k,r)) ;

Equation FIXCOVER
# eq'n scales qoes to ensure constant hectares #
(all,i,AEZ_COMM)(all,r,REG)
    lcoveraez(i,r) = 
        sum(j,LCOVER_INDS, LCOVERSHR(i,j,r) * p_LANDCOVER_L(i,j,r)); 

!commenting here out for MCET !
!Equation E_AREAADJUST
# links total land cover in the AEZ to the endowment #
(all,i,AEZ_COMM)(all,r,REG)
    lcoveraez(i,r) = qo(i,r); !


! Compute the change in national land cover, by type !

Variable (all,j,LCOVER_INDS)(all,r,REG)
    lcovercom(j,r)
    # change in regional land cover #;

Coefficient (all,i,AEZ_COMM)(all,j,LCOVER_INDS)(all,r,REG)
    COMLCOVERSHR(i,j,r)
    # share in land cover #;
Formula  
(all,i,AEZ_COMM)(all,j,LCOVER_INDS)(all,r,REG)
    COMLCOVERSHR(i,j,r) = 
LANDCOVER_L(i,j,r)/sum(m,AEZ_COMM, LANDCOVER_L(m,j,r)) ;

Equation COMCOVER
# eq'n computes regional land cover change #
(all,j,LCOVER_INDS)(all,r,REG)
    lcovercom(j,r) = 
 sum(m,AEZ_COMM, COMLCOVERSHR(m,j,r) * p_LANDCOVER_L(m,j,r)); 

Variable (all,j,LCOVER_INDS)
    globlcovercom(j)
    # change in global land cover #;
Equation GLCOMCOVER
 # change in global land cover #
(all,j,LCOVER_INDS)
    globlcovercom(j) = sum(r,REG,(sum(i, AEZ_COMM,LANDCOVER_L(i,j,r))
        /sum(k, REG,sum(i,AEZ_COMM, LANDCOVER_L(i,j,k))))* lcovercom(j,r));

Variable (all,j,LCOVER_INDS)
    nuslcovercom(j)
    # change in non US land cover #;
Equation NUSCOMCOVER
 # change in non US land cover #
(all,j,LCOVER_INDS)
    nuslcovercom(j) = sum(r,NUS_REG,(sum(i, AEZ_COMM,LANDCOVER_L(i,j,r))
        /sum(k, NUS_REG,sum(i,AEZ_COMM, LANDCOVER_L(i,j,k))))* lcovercom(j,r));

Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    RENTCROP(i,j,r)
    # level of land rents by AEZ, sector and region, in $/ha. #;

Formula (initial) 
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    RENTCROP(i,j,r) = [NVFM(i,j,r)/HARVSTAREA_L(i,j,r)]  ;

Equation E_RENTCROP1
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    p_RENTCROP(i,j,r) + p_HARVSTAREA_L(i,j,r) = pmes(i,j,r) + qoes(i,j,r) ;

Variable (LEVELS) (all,i,AEZ_COMM)(all,r,REG)
    RENTCROPAV(i,r)
    # level of average crop land rents by AEZ and region #;

Formula (initial) 
(all,i,AEZ_COMM)(all,r,REG)
    RENTCROPAV(i,r) = 
  [sum(j,CROP_INDS, NVFM(i,j,r))/sum(j,CROP_INDS, HARVSTAREA_L(i,j,r))] ;

Equation E_RENTCROPAV
(all,i,AEZ_COMM)(all,r,REG)
    p_RENTCROPAV(i,r) + harvstaez(i,r) = pmcropland(i,r) + qocropland(i,r) ;

Equation E_HARVSTAREA
# eq'n scales qoes to get revised p_HA and ensure constant physical hectares #
(all,i,AEZ_COMM)(all,j,NCRP_INDS)(all,r,REG)
    p_HARVSTAREA_L(i,j,r) = 
        harvstslack(i,r) + qoes(i,j,r) ;

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    HAREASHR(i,j,r)
    # share of crop j in total AEZ i land area #;

Formula 
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    HAREASHR(i,j,r) = 
        HARVSTAREA_L(i,j,r)/sum(k,CROP_INDS, HARVSTAREA_L(i,k,r)) ;

Equation FIXAREA
# eq'n scales qoes to ensure constant hectares #
(all,i,AEZ_COMM)(all,r,REG)
    harvstaez(i,r) = 
        sum(j,CROP_INDS, HAREASHR(i,j,r) * p_HARVSTAREA_L(i,j,r)); 

!Farzad: Double Cropping: I moved from del_H=del_Cropland to l=(H/L)*h+(B/L)*b!

Equation CROPCOVER1
# total harvested area is tied to the endowment of cropland cover  #
(all,i,AEZ_COMM)(all,j,ACROP_INDS)(all,r,REG)
    p_LANDCOVER_L(i,j,r) = GAMA(i,r)*(HA_LCSHR(i,r)*harvstaez(i,r));

Equation CROPCOVER2
# total harvested area is tied to the endowment of cropland cover  #
(all,i,AEZ_COMM)(all,j,ACROP_INDS)(all,r,REG)
    p_LANDCOVER_L(i,j,r) = (HA_LCSHR(i,r) * harvstaez(i,r)+
                           (1-HA_LCSHR(i,r)+.00001)*qother(i,r));

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    AEZHAREASHR(i,j,r)
    # share of AEZ i in total crop j land area #;
Formula 
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    AEZHAREASHR(i,j,r) = 
        HARVSTAREA_L(i,j,r)/sum(k,AEZ_COMM, HARVSTAREA_L(k,j,r)) ;

Equation COMHARVEST
# eq'n scales qoes to ensure constant hectares #
(all,j,CROP_INDS)(all,r,REG)
    harvstcom(j,r) = 
        sum(i,AEZ_COMM, AEZHAREASHR(i,j,r) * p_HARVSTAREA_L(i,j,r)); 

Variable (all,j,CROP_INDS)
    globharvstcom(j)
    # global harvested area#;
Equation GLCOMHARVEST
#global harvested area#
(all,j,CROP_INDS)
    globharvstcom(j) = sum(r, REG,sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r))
        /sum(m,REG,sum(k,AEZ_COMM, HARVSTAREA_L(k,j,m)))* harvstcom(j,r));
!
Variable (all,j,CROP_INDS)
    nusharvstcom(j)
    # non US  harvested area#;
Equation NUSCOMHARVEST
# non US harvested area#
(all,j,CROP_INDS)
    nusharvstcom(j) = sum(r, NUS_REG,sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r))
       /sum(m,NUS_REG,sum(k,AEZ_COMM, HARVSTAREA_L(k,j,m)))* harvstcom(j,r));!


! FYI: also compute the change national average crop yield due to changes 
in crop land area !

Variable (all,r,REG)
    hareaslackreg(r)
    # national yield adjustment #;

Coefficient (all,i,AEZ_COMM)(all,r,REG)
    AEZHREGSHR(i,r)
    # AEZ share in regional land cover #;
Formula  
(all,i,AEZ_COMM)(all,r,REG)
    AEZHREGSHR(i,r) = 
sum(j,CROP_INDS, HARVSTAREA_L(i,j,r))/
        sum(m,AEZ_COMM, sum(j,CROP_INDS, HARVSTAREA_L(m,j,r))) ;

Equation HARVCOVERSLACK
# eq'n computes regional land cover change #
(all,r,REG)
    hareaslackreg(r) =  
 sum(i,AEZ_COMM, AEZHREGSHR(i,r) * harvstslack(i,r)); 

! Finally, compute the productivity-weighted change in land cover. This 
should be zero. !

Variable (all,i,AEZ_COMM)(all,r,REG)
    xlcoveraez(i,r)
# change in productivity-weighted land cover, by aez # ;
Equation E_XLCOVERAEZ
# change in productivity-weighted land cover, by aez #
(all,i,AEZ_COMM)(all,r,REG)
xlcoveraez(i,r) = sum(j,FOREST_INDS, REVSHR1(i,j,r) * qoes(i,j,r))
                + [sum(j,GRAZE_INDS, REVSHR1(i,j,r))] * qograzland(i,r)
                + [sum(j,CROP_INDS, REVSHR1(i,j,r))] * qocropland(i,r); 



!<
    ---------------------------
    F. BIOFUEL TARGETING MODULE
    ---------------------------

- Can track the volume of biofuel output for a key few INDSustries. User must
 specify and read in initial level (all others will be simply set equal to one).

- Also we want to track the share of renewables in liquid fuels.

>!
!<< modified!
Set
    BIOFUEL_COMM # renewable inputs into biooil #
    (ethanol1,ethanol2,ethanol3,biod_soy,biod_palm,biod_rape,
     biod_oth,GRNATJ_J,GRNETJ_J,SUGATJ_J,SUGETJ_J,SUGSIP_J,SOYHRJ,RAPHRJ,PLMHRJ,CAMHRJ_J,
    CRNHRJ_J,MSCFTJ,SWGFTJ,POPFTJ,MSCATJ,SWGATJ);
    

Subset
    BIOFUEL_COMM is subset of BIOOIL_COMM;

Set
    BIOOIL1_COMM # Inputs into blend #
    (Oil_Pcts,ethanol1,ethanol2,ethanol3,biod_soy,biod_palm,biod_rape,
     biod_oth,GRNATJ_J,GRNETJ_J,SUGATJ_J,SUGETJ_J,SUGSIP_J,SOYHRJ,RAPHRJ,PLMHRJ,CAMHRJ_J,
    CRNHRJ_J,MSCFTJ,SWGFTJ,POPFTJ,MSCATJ,SWGATJ);

Subset
    BIOOIL1_COMM is subset of BIOOIL_COMM;

Subset
    BIOFUEL_COMM is subset of BIOOIL1_COMM;
!
VARIABLE (LEVELS) (all,i,BIOOIL1_COMM)(all,r,REG)
    BIOOIL(i,r)
    # volume of biofuels usage in millions of gallons #;
Read
    BIOOIL from file GTAPDATA header "BOIL";

COEFFICIENT  (all,i,BIOOIL1_COMM)(all,r,REG) 
TOTUSE(i,r)  # total use of fuels in blend #;
FORMULA 
(all,i,BIOOIL1_COMM)(all,r,REG)
    TOTUSE(i,r) = 
    VIFM(i,"Blender",r) + VDFM(i,"Blender",r); 

Variable (all,i,BIOOIL1_COMM)(all,r,REG)
    biooiluse(i,r)
    # change in volume of biooils usage #;
Equation E_BIOUSE
(all,i,BIOOIL1_COMM)(all,r,REG)
   TOTUSE(i,r)*biooiluse(i,r) =[VIFM(i,"Blender",r) * qfm(i,"Blender",r)+
                    VDFM(i,"Blender",r) * qfd(i,"Blender",r)];

Equation E_BIOOIL
(all,i,BIOOIL1_COMM)(all,r,REG)
    p_BIOOIL(i,r) = biooiluse(i,r);

Variable (LEVELS, Change) (all,i,BIOOIL1_COMM)(all,r,REG)
    SHRRENEWi(i,r)
    # share of inidividual renewables in total liquid fuels #;
Formula & Equation (LEVELS)E_SHRRENEWi (all,i,BIOOIL1_COMM)(all,r,REG)
    SHRRENEWi(i,r) = 
 BIOOIL(i,r)/sum(k,BIOOIL1_COMM, BIOOIL(k,r));

Variable (LEVELS, Change) (all,r,REG)
    SHRRENEW(r)
    # share of renewables in total liquid fuels #;
Formula & Equation (LEVELS)E_SHRRENEW (all,r,REG)
    SHRRENEW(r) = 
 sum(i,BIOFUEL_COMM, BIOOIL(i,r))/sum(i,BIOOIL1_COMM, BIOOIL(i,r));

Variable (all,r,REG)
    biofueluse(r)
    # change in volume of total biofuels (excluing petroleum) usage #;
Equation E_BIOFUELUSE
(all,r,REG)
    sum(i,BIOFUEL_COMM, TOTUSE(i,r)) * biofueluse(r) = 
     sum(i,BIOFUEL_COMM, VIFM(i,"Blender",r) * qfm(i,"Blender",r) +
                         VDFM(i,"Blender",r) * qfd(i,"Blender",r));
!
        
! Linking equation for tying different mandates together:
    - to include imports in the scheme, swap bioimpslack with tpm for a given
        biofuel/region
    - to include secondary domestic biofuels, swap renewslack with tpd for a
        second biofuel; if imports are also to be included, then add the above
        swap as well. !
!
Variable (all,i,BIOFUEL_COMM)(all,r,REG)
    bioimpslack(i,r)
# exogenize when wish to iclude imports in shock #;
Equation E_BIOIMPSLACK
(all,i,BIOFUEL_COMM)(all,r,REG)
    tpm(i,r) = tpd(i,r) + bioimpslack(i,r);


Variable (all,i,BIOFUEL_COMM)(all,r,REG)
    renewslack(i,r)
# exogenize when wish to link other renewables to national target #;
Equation E_RENEWSLACK
(all,i,BIOFUEL_COMM)(all,r,REG)
    biooiluse(i,r) = biofueluse(r) + renewslack(i,r);
!

!<
    ---------------------------
    G. YIELD TRACKING MODULE
    ---------------------------

- This module reads in initial yield as well as production, 
  in metric tonnes and updates these levels variables. 
>!

Variable (LEVELS) (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    PRODUCTION(i,j,r)
    # millions of bushels or tonnes (use "PRBU" for tonnes only)#;
Read
    PRODUCTION from file GTAPDATA header "PRDN";

!< Unit "bushels" are used for CrGrains, OthGrains, and Soybeans.  
    For Sugarcane and OthAgri sectors are measured in "tonnes"  >! 

Subset
    CROP_INDS is subset of NSAV_COMM;

Equation E_PRODUCTION
# eq'n computes change in crop production by AEZ #
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    p_PRODUCTION(i,j,r) = p_HARVSTAREA_L(i,j,r)
            - harvstslack(i,r) + [qo(j,r) - qoes(i,j,r)] ;

Zerodivide (zero_by_zero) default 0;
Zerodivide (nonzero_by_zero) default 0;

! Compute yield from production and harvested area to ensure consistency !

Coefficient (all,j,CROP_INDS)(all,r,REG)
    YIELD(j,r)
    # av. national yield in millions of bushels or tonnes #;
Variable (all,j,CROP_INDS)(all,r,REG)
    p_YIELD(j,r)
  # av. national yield in millions of bushels or tonnes #;
Formula (initial)
(all,j,CROP_INDS)(all,r,REG)
    YIELD(j,r) = 
    sum(i,AEZ_COMM, PRODUCTION(i,j,r))/sum(i,AEZ_COMM, HARVSTAREA_L(i,j,r));
Update (all,j,CROP_INDS)(all,r,REG)
    YIELD(j,r) = p_YIELD(j,r);

Equation E_YIELD
# eq'n computes av. national yield in millions of bushels or tonnes #
(all,j,CROP_INDS)(all,r,REG)
    p_YIELD(j,r) = qo(j,r) - harvstcom(j,r);
    
Zerodivide (zero_by_zero) off;
Zerodivide (nonzero_by_zero) off;

! TH: Decomposing global yield changes. !

Variable (LEVELS)(all,j,CROP_INDS)
    YIELDGL(j)
    # av. global yield in millions of bushels or tonnes #;
Formula & Equation (LEVELS) E_YIELDGL (all,j,CROP_INDS)
    YIELDGL(j) = sum(r, REG, sum(i,AEZ_COMM, PRODUCTION(i,j,r)))
               / sum(r,REG,sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r)));

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    PRODUCTSHR(i,j,r)
    # share of production in AEZ i, region r of sector j's global output #;
Formula
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    PRODUCTSHR(i,j,r) = 
            PRODUCTION(i,j,r)/sum(k,REG, sum(m,AEZ_COMM, PRODUCTION(m,j,k)));

Variable (all,j,CROP_INDS)
    globalouput(j)
    # sector j's global output chng #;
Equation E_GLOBALOUTPUT
# sector j's global output chng #
(all,j,CROP_INDS)
    globalouput(j) = sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * qo(j,r)));

Set EN_INDS # energy producing industries # 
(coal, oil, gas, oil_pcts, blender, electricity, EthanolC, Ethanol2, Biod_soy,
 Biod_palm, Biod_oth); 

Subset
    EN_INDS is subset of ALL_INDS;

Zerodivide (zero_by_zero) default 0;
Zerodivide (nonzero_by_zero) default 0;

Coefficient(all,j,CROP_INDS)(all,r,REG)
    CONSUMPTION(j,r)
    #not for energy production of sector j's global output, by AEZ and region#;
Formula
(all,j,CROP_INDS)(all,r,REG)
    CONSUMPTION(j,r) = sum(i, AEZ_COMM, PRODUCTION(i,j,r))
            * (1 - sum(k,EN_INDS,VDFM(j,k,r))/VOM(j,r));

Coefficient (all,j,CROP_INDS)(all,r,REG)
    CONSSHR(j,r);
Formula
(all,j,CROP_INDS)(all,r,REG)
    CONSSHR(j,r) =
        CONSUMPTION(j,r)/sum(k,REG,CONSUMPTION(j,k));
Zerodivide (zero_by_zero) OFF;
Zerodivide (nonzero_by_zero) OFF;
Variable (all,j,CROP_INDS)
    globalcons(j)
    # sector j's global not for energy output chng #;
Equation E_GLOBALCONS
(all,j,CROP_INDS)
    globalcons(j)= sum(r, REG, CONSSHR(j,r)
        * (qo(j,r)-sum(k,EN_INDS, SHRDM(j,r) * SHRDFM(j,k,r) * qfd(j,k,r))));

Variable (all,j,CROP_INDS)
    cnt_yield(j)
    # contribution of yield changes sector j's global output chng #;
Equation E_CNT_YIELD
# contribution of yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yield(j) = sum(r,REG, sum(i,AEZ_COMM, 
        PRODUCTSHR(i,j,r) * [qo(j,r) - qf("land",j,r) - harvstslack(i,r)])); 

Variable (all,j,CROP_INDS)
    cnt_yieldint(j)
    # contribution of intensive yield changes sector j's global output chng #;
Equation E_CNT_YIELDI
# contribution of intensive yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yieldint(j) = 
    sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r)) * [qo(j,r) - qf("land",j,r)]);

Variable (all,j,CROP_INDS)
    cnt_yieldext(j)
    # contribution of extensive yield changes sector j's global output chng #;
Equation E_CNT_YIELDE
# contribution of extensive yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yieldext(j) = 
    sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * [-harvstslack(i,r)])); 

Variable (all,j,CROP_INDS)
    cnt_area(j)
    # contribution of area changes sector j's global output chng #;
Equation E_CNT_AREA
# contribution of area changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_area(j) = 
    sum(r,REG, sum(i,AEZ_COMM, PRODUCTSHR(i,j,r) * p_HARVSTAREA_L(i,j,r))); 


! TH: Decomposing regional yield changes. !
Zerodivide (zero_by_zero) default 0;
Zerodivide (nonzero_by_zero) default 0;

Coefficient (all,j,CROP_INDS)(all,r,REG)
    YIELDREG(j,r)
    # av. regional yield in millions of bushels or tonnes #;
Formula (all,j,CROP_INDS)(all,r,REG)
    YIELDREG(j,r) = sum(i,AEZ_COMM, PRODUCTION(i,j,r))
               / sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r));

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    PRODUCTSHREG(i,j,r)
    # share of production in AEZ i, region r of sector j's regional output #;
Formula
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,REG)
    PRODUCTSHREG(i,j,r) = 
            PRODUCTION(i,j,r)/sum(m,AEZ_COMM, PRODUCTION(m,j,r));

Zerodivide (zero_by_zero) off;
Zerodivide (nonzero_by_zero) off;

Variable (all,j,CROP_INDS)(all,r,REG)
    regouput(j,r)
    # sector j's regional output chng #;
Equation E_REGOUTPUT
# contribution of yield changes sector j's regional  output chng #
(all,j,CROP_INDS)(all,r,REG)
    regouput(j,r) = sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * qo(j,r));

Variable (all,j,CROP_INDS)(all,r,REG)
    cnt_yieldreg(j,r)
    # contribution of yield changes sector j's regional  output chng #;
Equation E_CNT_YIELDREG
# contribution of yield changes sector j's regional output chng #
(all,j,CROP_INDS)(all,r,REG)
    cnt_yieldreg(j,r) = sum(i,AEZ_COMM, 
        PRODUCTSHREG(i,j,r) * [qo(j,r) - qf("land",j,r) - harvstslack(i,r)]); 

Variable (all,j,CROP_INDS)(all,r,REG)
    cnt_yieldintreg(j,r)
    # contribution of intensive yield changes sector j's regional output chng #;
Equation E_CNT_YIELDIREG
# contribution of intensive yield changes sector j's regional output chng #
(all,j,CROP_INDS)(all,r,REG)
    cnt_yieldintreg(j,r) = 
    sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r)) * [qo(j,r) - qf("land",j,r)];

Variable (all,j,CROP_INDS)(all,r,REG)
    cnt_yieldextreg(j,r)
  # contribution of extensive yield changes sector j's regional  output chng #;
Equation E_CNT_YIELDEREG
# contribution of extensive yield changes sector j's regional output chng #
(all,j,CROP_INDS)(all,r,REG)
    cnt_yieldextreg(j,r) = 
    sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * [-harvstslack(i,r)]); 

Variable (all,j,CROP_INDS)(all,r,REG)
    cnt_areareg(j,r)
    # contribution of area changes sector j's regional output chng #;
Equation E_CNT_AREAREG
# contribution of area changes sector j's regional output chng #
(all,j,CROP_INDS)(all,r,REG)
    cnt_areareg(j,r) = 
    sum(i,AEZ_COMM, PRODUCTSHREG(i,j,r) * p_HARVSTAREA_L(i,j,r)); 

! TH: Decomposing non-US yield changes. !
!SOYF: WE need to review this part to make sure it works fine
Variable (LEVELS)(all,j,CROP_INDS)
    YIELDROW(j)
    # av. row yield in millions of bushels or tonnes #;

Zerodivide (zero_by_zero) default 1;
Zerodivide (nonzero_by_zero) default 1;

Formula & Equation (LEVELS) E_YIELDROW (all,j,CROP_INDS)
YIELDROW(j) = sum(r, NUS_REG, sum(i,AEZ_COMM, PRODUCTION(i,j,r)))
               / sum(r,NUS_REG,sum(i,AEZ_COMM,HARVSTAREA_L(i,j,r)));

Coefficient (all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,NUS_REG)
    PRODUCTSHROW(i,j,r)
    # share of production in AEZ i, region r of sector j's ROW output #;
Formula
(all,i,AEZ_COMM)(all,j,CROP_INDS)(all,r,NUS_REG)
    PRODUCTSHROW(i,j,r) = 
          PRODUCTION(i,j,r)/sum(k,NUS_REG, sum(m,AEZ_COMM, PRODUCTION(m,j,k)));

Variable (all,j,CROP_INDS)
    rowoutput(j)
    # sector j's row output chng #;
Equation E_ROWOUTPUT
# contribution of yield changes sector j's global output chng #
(all,j,CROP_INDS)
 rowoutput(j) = sum(r,NUS_REG, sum(i,AEZ_COMM, PRODUCTSHROW(i,j,r) * qo(j,r)));

Variable (all,j,CROP_INDS)
    cnt_yieldrow(j)
    # contribution of yield changes sector j's global output chng #;
Equation E_CNT_YIELDROW
# contribution of yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yieldrow(j) = sum(r,NUS_REG, sum(i,AEZ_COMM, 
        PRODUCTSHROW(i,j,r) * [qo(j,r) - qf("land",j,r) - harvstslack(i,r)])); 

Variable (all,j,CROP_INDS)
    cnt_yieldintrow(j)
    # contribution of intensive yield changes sector j's global output chng #;
Equation E_CNT_YIELDIROW
# contribution of intensive yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yieldintrow(j) = sum(r,NUS_REG, sum(i,AEZ_COMM, 
                PRODUCTSHROW(i,j,r)) * [qo(j,r) - qf("land",j,r)]);

Variable (all,j,CROP_INDS)
    cnt_yieldextrow(j)
    # contribution of extensive yield changes sector j's global output chng #;
Equation E_CNT_YIELDEROW
# contribution of extensive yield changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_yieldextrow(j) = 
    sum(r,NUS_REG, sum(i,AEZ_COMM, PRODUCTSHROW(i,j,r) * [-harvstslack(i,r)])); 

Variable (all,j,CROP_INDS)
    cnt_arearow(j)
    # contribution of area changes sector j's global output chng #;
Equation E_CNT_AREAROW
# contribution of area changes sector j's global output chng #
(all,j,CROP_INDS)
    cnt_arearow(j) = 
 sum(r,NUS_REG, sum(i,AEZ_COMM, PRODUCTSHROW(i,j,r) * p_HARVSTAREA_L(i,j,r)));
Zerodivide (zero_by_zero) off ;
Zerodivide (nonzero_by_zero) off;!


!<
    ------------------------------------------------------
    G. EMISSIONS DUE TO LAND COVER CHANGES TRACKING MODULE (reduced)
    ------------------------------------------------------
>!

!Calculation of energy content of additional fuel produced!
Coefficient (all,i,BIOFUEL_COMM)(all,r,REG)
    BIOFPRDCTN(i,r)
    # production of biofuels in billions of gallons#;
Update (all,i,BIOFUEL_COMM)(all,r,REG)
    BIOFPRDCTN(i,r)= qo(i,r);
Read
    BIOFPRDCTN from file GTAPDATA header "BIOP";

Coefficient (parameter)(all,i,BIOFUEL_COMM)
    MJPERL(i) # energy intensity, MJ/L #;
Read
    MJPERL from file GTAPPARM header "MJPL";

Variable (change)(all,i,BIOFUEL_COMM) (all,r,REG) 
    INCREMENT(i,r) # billion MJ #;
Coefficient (all,i,BIOFUEL_COMM)(all,r,REG)
    INCREMENTLEV(i,r) # billion MJ #;
Update (change) (all,i,BIOFUEL_COMM)(all,r,REG)
    INCREMENTLEV(i,r) = INCREMENT(i,r);
Read
    INCREMENTLEV from file GTAPDATA header "INCR";

Equation E_INCREMENT (all,i,BIOFUEL_COMM)(all,r,REG)
    INCREMENT(i,r) = 3.785 * MJPERL(i)
        *1/100*BIOFPRDCTN(i,r)* qo(i,r);

!Aggregate food consumption!
Variable (all,r,REG) 
    foodconsr (r) # regional food consumption index #;
Equation E_Foodr (all,r,REG)
    sum(i,FOOD,VPAD(i,r)) * foodconsr(r) = sum(i, FOOD, VPAD(i,r) * qp(i,r));

Variable (all,i,FOOD) 
    foodconsi (i) # regional food consumption index #;
Equation E_Foodi (all,i,FOOD)
    sum(r, REG, VPAD(i,r)) * foodconsi(i) = sum(r, REG, VPAD(i,r) * qp(i,r));


!<
    ====================
    END OF GTAP.TAB FILE
    ====================
>!
